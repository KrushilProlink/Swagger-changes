openapi: 3.0.1
info:
  title: Syndicate Management
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This Service Domain manages
    syndicate membership and compliance
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/SyndicateManagement
paths:
   '/SyndicateMembership/{syndicatemembershipid}/Control':
      put:
        tags:
           - CR - SyndicateMembership
        summary: Control Syndicate Membership
        description: Control Syndicate Membership
        operationId: SyndicateMembership/Control
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        requestBody:
          $ref: '#/components/requestBodies/ControlSyndicateMembershipRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateMembership/{syndicatemembershipid}/Grant':
      put:
        tags:
           - CR - SyndicateMembership
        summary: Grant Syndicate Membership
        description: Grant Syndicate Membership
        operationId: SyndicateMembership/Grant
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        requestBody:
          $ref: '#/components/requestBodies/GrantSyndicateMembershipRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateMembership/{syndicatemembershipid}/Notify':
      get:
        tags:
           - CR - SyndicateMembership
        summary: Notify Syndicate Membership
        description: Notify Syndicate Membership
        operationId: SyndicateMembership/Notify
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        responses:
          '200':
            $ref: '#/components/responses/NotifySyndicateMembershipResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateMembership/{syndicatemembershipid}/Register':
      post:
        tags:
           - CR - SyndicateMembership
        summary: Register Syndicate Membership
        description: Register Syndicate Membership
        operationId: SyndicateMembership/Register
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterSyndicateMembershipRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateMembership/{syndicatemembershipid}/Request':
      put:
        tags:
           - CR - SyndicateMembership
        summary: Request Syndicate Membership
        description: Request Syndicate Membership
        operationId: SyndicateMembership/Request
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        requestBody:
          $ref: '#/components/requestBodies/RequestSyndicateMembershipRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateMembership/{syndicatemembershipid}/Retrieve':
      get:
        tags:
           - CR - SyndicateMembership
        summary: Retrieve Syndicate Membership
        description: Retrieve Syndicate Membership
        operationId: SyndicateMembership/Retrieve
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveSyndicateMembershipResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateMembership/{syndicatemembershipid}/Update':
      put:
        tags:
           - CR - SyndicateMembership
        summary: Update Syndicate Membership
        description: Update Syndicate Membership
        operationId: SyndicateMembership/Update
        parameters:
           - $ref: '#/components/parameters/syndicatemembershipid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSyndicateMembershipRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateComplianceClauses/{syndicatecomplianceclausesid}/Notify':
      get:
        tags:
           - BQ - SyndicateComplianceClauses
        summary: Notify Syndicate Compliance Clauses
        description: Notify Syndicate Compliance Clauses
        operationId: SyndicateComplianceClauses/Notify
        parameters:
           - $ref: '#/components/parameters/syndicatecomplianceclausesid'
        responses:
          '200':
            $ref: '#/components/responses/NotifySyndicateComplianceClausesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateEligibilityClauses/{syndicateeligibilityclausesid}/Notify':
      get:
        tags:
           - BQ - SyndicateEligibilityClauses
        summary: Notify Syndicate Eligibility Clauses
        description: Notify Syndicate Eligibility Clauses
        operationId: SyndicateEligibilityClauses/Notify
        parameters:
           - $ref: '#/components/parameters/syndicateeligibilityclausesid'
        responses:
          '200':
            $ref: '#/components/responses/NotifySyndicateEligibilityClausesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateComplianceClauses/{syndicatecomplianceclausesid}/Retrieve':
      get:
        tags:
           - BQ - SyndicateComplianceClauses
        summary: Retrieve Syndicate Compliance Clauses
        description: Retrieve Syndicate Compliance Clauses
        operationId: SyndicateComplianceClauses/Retrieve
        parameters:
           - $ref: '#/components/parameters/syndicatecomplianceclausesid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveSyndicateComplianceClausesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateEligibilityClauses/{syndicateeligibilityclausesid}/Retrieve':
      get:
        tags:
           - BQ - SyndicateEligibilityClauses
        summary: Retrieve Syndicate Eligibility Clauses
        description: Retrieve Syndicate Eligibility Clauses
        operationId: SyndicateEligibilityClauses/Retrieve
        parameters:
           - $ref: '#/components/parameters/syndicateeligibilityclausesid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveSyndicateEligibilityClausesResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateComplianceClauses/{syndicatecomplianceclausesid}/Update':
      put:
        tags:
           - BQ - SyndicateComplianceClauses
        summary: Update Syndicate Compliance Clauses
        description: Update Syndicate Compliance Clauses
        operationId: SyndicateComplianceClauses/Update
        parameters:
           - $ref: '#/components/parameters/syndicatecomplianceclausesid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSyndicateComplianceClausesRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SyndicateEligibilityClauses/{syndicateeligibilityclausesid}/Update':
      put:
        tags:
           - BQ - SyndicateEligibilityClauses
        summary: Update Syndicate Eligibility Clauses
        description: Update Syndicate Eligibility Clauses
        operationId: SyndicateEligibilityClauses/Update
        parameters:
           - $ref: '#/components/parameters/syndicateeligibilityclausesid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSyndicateEligibilityClausesRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     ControlSyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     Text:
        type: object
        description: "\r\n - "
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Service:
        type: object
        description: "\r\n - "
        properties:
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: 'The name of service. '
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of service
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: The identifier of service.
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                A characteristic of service which refers to the lifecycle of
                service (e.g., initiated, active, deactive, etc.) 
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: >-
                A characteristic of service which refers 1) mainly to the
                function or condition of service. 2) to nonfunctional features
                like quality and security
     Name:
        type: object
        description: 'The name of service.  '
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Identifier:
        type: object
        description: 'The identifier of service. '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Status:
        type: object
        description: >-
          A characteristic of service which refers to the lifecycle of service
          (e.g., initiated, active, deactive, etc.)  
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Feature:
        type: object
        description: >-
          A characteristic of service which refers 1) mainly to the function or
          condition of service. 2) to nonfunctional features like quality and
          security 
        properties:
           FeatureType:
              $ref: '#/components/schemas/Text'
              description: ''
           FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           FeatureName:
              $ref: '#/components/schemas/Name'
              description: ''
           FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           FeatureDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Instruction:
        type: object
        description: "\r\n - "
        properties:
           InstructionDate:
              $ref: '#/components/schemas/Instructiondate'
              description: ''
           InstructionStatus:
              $ref: '#/components/schemas/Instructionlifecyclestatus'
              description: >-
                A characteristic of instruction which refers to the
                LifecycleStatus of instruction (e.g., requested, executed,
                fulfilled, etc.); 
           InstructionIdentifier:
              $ref: '#/components/schemas/Instructionidentification'
              description: >-
                An identifier that allows to uniquely refer to an instance of an
                Instruction.
           InstructionType:
              enum:
                   -  PaymentInstruction
                   -  DeliveryOrder
                   -  InformationRequest
                   -  ExchangeInstruction
                   -  AllocationInstruction
                   -  MaintenanceInstruction
              type: string
              description: ">-\r\n* `PaymentInstruction` \r\n* `DeliveryOrder` \r\n* `InformationRequest` \r\n* `ExchangeInstruction` \r\n* `AllocationInstruction` \r\n* `MaintenanceInstruction` \r\n* "
           InstructionResult:
              $ref: '#/components/schemas/Text'
              description: ''
           InstructionDescription:
              $ref: '#/components/schemas/Text'
              description: ''
           InstructionLog:
              $ref: '#/components/schemas/Log'
              description: ''
           InstructionPurpose:
              $ref: '#/components/schemas/Text'
              description: ''
     Instructiondate:
        type: object
        description: ' '
        properties:
           InstructionDate:
              $ref: '#/components/schemas/Date'
              description: ''
           InstructionDateType:
              enum:
                   -  DueDate
                   -  ExecutionDate
                   -  FulfillmentDate
              type: string
              description: ">-\r\n* `DueDate` \r\n* `ExecutionDate` \r\n* `FulfillmentDate` \r\n* "
     Date:
        type: object
        description: ' '
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Instructionlifecyclestatus:
        type: object
        description: >-
          A characteristic of instruction which refers to the LifecycleStatus of
          instruction (e.g., requested, executed, fulfilled, etc.);  
        properties:
           InstructionLifecycleStatusType:
              enum:
                   -  Requested
                   -  Prepared
                   -  InProgress
                   -  Fulfilled
                   -  OnHold
                   -  Failed
              type: string
              description: ">-\r\n* `Requested` \r\n* `Prepared` \r\n* `InProgress` \r\n* `Fulfilled` \r\n* `OnHold` \r\n* `Failed` \r\n* "
           InstructionLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
     Instructionidentification:
        type: object
        description: >-
          An identifier that allows to uniquely refer to an instance of an
          Instruction.
           
        properties:
           InstructionIdentifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           InstructionIdentifierType:
              enum:
                   -  OrderNumber
                   -  InstructionNumber
              type: string
              description: ">-\r\n* `OrderNumber` \r\n* `InstructionNumber` \r\n* "
     Log:
        type: object
        description: ' '
        properties:
           LogType:
              type: string
              description: ''
              format: String
           LogPeriod:
              type: string
              description: ''
              format: String
           LogDate:
              type: string
              description: Key dates associated with the log (e.g. start time).
              format: String
           LogIdentification:
              type: string
              description: ''
              format: String
     Plan:
        type: object
        description: "\r\n - "
        properties:
           PlanGoal:
              $ref: '#/components/schemas/Goal'
              description: ''
           PlanBudget:
              $ref: '#/components/schemas/Budgetarrangement'
              description: >-
                An arrangement which is specifying an estimate of costs,
                revenues, and resources over a specified period, reflecting a
                reading of future financial conditions and goals. (adapted from
                Business Dictionary)
           PlannedAction:
              $ref: '#/components/schemas/Plannedaction'
              description: >-
                An action that is arranged in a plan for doing or achieving
                something 
           PlanType:
              $ref: '#/components/schemas/Plantype'
              description: A Classification value that specifies the type of Plan
           PlanOrganisation:
              type: string
              description: ''
              format: String
           PlanValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PlanDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Goal:
        type: object
        description: ' '
        properties:
           GoalType:
              type: string
              description: The type of goal
              format: String
           GoalDefinition:
              type: string
              description: >-
                A definition of the goal, including the intended actions
                required to achieve the goal
              format: String
           GoalOrganisation:
              type: string
              description: >-
                Identifies the interested parties and their roles and
                responsibilities for the specific actions supporting the
                achievement of the goal
              format: ''
           GoalResult:
              type: string
              description: >-
                Assessment of how the work is progressing towards achieving the
                goal, including projections of likely outcomes
              format: String
           Goal:
              type: string
              description: >-
                A goal represents a highlevel statement of intent, direction,
                or desired end state for an organization and its stakeholders.
                (ArchiMate 3.1)


                An observable and measurable end result having one or more
                objectives to be achieved within a more or less fixed timeframe.


                Read more:
                http://www.businessdictionary.com/definition/goal.html
              format: Class
     Budgetarrangement:
        type: object
        description: >-
          An arrangement which is specifying an estimate of costs, revenues, and
          resources over a specified period, reflecting a reading of future
          financial conditions and goals. (adapted from Business Dictionary) 
        properties:
           BudgetType:
              $ref: '#/components/schemas/Budgettype'
              description: A Classification value that specifies the type of Budget
           BudgetAmount:
              $ref: '#/components/schemas/Amount'
              description: ''
           BudgetArrangement:
              type: string
              description: >-
                An arrangement which is specifying an estimate of costs,
                revenues, and resources over a specified period, reflecting a
                reading of future financial conditions and goals. (adapted from
                Business Dictionary)


                Read more:
                http://www.businessdictionary.com/definition/budget.html



                A budget is an estimation of revenue and expenses over a
                specified future period of time and is utilized by governments,
                businesses, and individuals.

                A budget is basically a financial plan for a defined period,
                normally a year that is known to greatly enhance the success of
                any financial undertaking. (Investopedia)


                https://www.investopedia.com/terms/b/budget.asp
              format: Class
     Budgettype:
        type: object
        description: 'A Classification value that specifies the type of Budget '
        properties:
           BudgetTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           BudgetType:
              enum:
                   -  OperatingBudget
                   -  FinancialBudget
                   -  ResourceBudget
              type: string
              description: ">-\r\n* `OperatingBudget` \r\n* `FinancialBudget` \r\n* `ResourceBudget` \r\n* "
     Amount:
        type: object
        description: ' '
        properties:
           AmountValue:
              $ref: '#/components/schemas/Value'
              description: ''
           AmountCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           DecimalPointPosition:
              type: string
              description: |
                Decimal point position starts calulating from the right
              format: String
           AmountType:
              enum:
                   -  Principal
                   -  Actual
                   -  Estimated
                   -  Maximum
                   -  Default
                   -  Replacement
                   -  Incremental
                   -  Decremental
                   -  Reserved
                   -  Available
                   -  Used
              type: string
              description: ">-\r\n* `Principal` \r\n* `Actual` \r\n* `Estimated` \r\n* `Maximum` \r\n* `Default` \r\n* `Replacement` \r\n* `Incremental` \r\n* `Decremental` \r\n* `Reserved` \r\n* `Available` \r\n* `Used` \r\n* "
     Currencycode:
        type: object
        description: ' '
        properties:
           Currencycode:
              type: string
              description: >-
                A code identifying a currency according to ISO4217.

                A currency is a system of money in general use in a particular
                country.


                Code allocated to a currency, by a maintenance agency, under an
                international identification scheme as described in the latest
                edition of the international standard ISO 4217 "Codes for the
                representation of currencies and funds". Valid currency codes
                are registered with the ISO 4217 Maintenance Agency, and consist
                of three contiguous letters. (ISO20022)

              format: DataType
     Plannedaction:
        type: object
        description: >-
          An action that is arranged in a plan for doing or achieving
          something  
        properties:
           PlannedAction:
              type: string
              description: >-
                An action that is arranged in a plan for doing or achieving
                something 
              format: Class
     Plantype:
        type: object
        description: 'A Classification value that specifies the type of Plan '
        properties:
           PlanTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           PlanType:
              enum:
                   -  AdministrativePlan
                   -  ManagementPlan
                   -  StratgyPlan
                   -  FinancialPlan
              type: string
              description: ">-\r\n* `AdministrativePlan` \r\n* `ManagementPlan` \r\n* `StratgyPlan` \r\n* `FinancialPlan` \r\n* "
           Plantype:
              type: string
              description: 'Data type specifies the classification of a Plan '
              format: DataType
     Arrangement:
        type: object
        description: ' Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()'
        properties:
           ArrangementAction:
              $ref: '#/components/schemas/Action'
              description: ''
           ArrangementStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ArrangementEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ArrangementStatus:
              $ref: '#/components/schemas/Arrangementlifecyclestatus'
              description: >-
                A characteristic of arrangement which refers to the
                LifecycleStatus of arrangement (e.g., requested, proposed,
                offered, accepted, cancelled, terminated, fulfilled, etc.)
           ArrangementSubjectMatter:
              $ref: '#/components/schemas/Subject'
              description: ''
           Arrangementtype:
              enum:
                   -  SweepArrangement
                   -  WithdrawalArrangement
                   -  DepositArrangement
                   -  InterestArrangement
                   -  FeeArrangement
                   -  LienArrangement
                   -  InformationArrangement
                   -  PaymentArrangement
                   -  EntitlementArrangement
                   -  PeriodArrangement
                   -  CollateralArrangement
                   -  LimitArrangement
                   -  AccessArrangement
                   -  CardPaymentArrangement
                   -  StandingOrderArrangement
                   -  OverdraftArrangement
                   -  RepaymentArrangement
                   -  StatementArrangement
                   -  CreditTransferArrangement
                   -  ProductAndServiceArrangement
                   -  FactoringArrangement
                   -  RolloverArrangement
                   -  RestructuringArrangement
                   -  InsuranceArrangement
                   -  CollectionArrangement
                   -  UnderwritingArrangement
                   -  TerminationArrangement
                   -  MaturityArrangement
              type: string
              description: ">-\r\n* `SweepArrangement` \r\n* `WithdrawalArrangement` \r\n* `DepositArrangement` \r\n* `InterestArrangement` \r\n* `FeeArrangement` \r\n* `LienArrangement` \r\n* `InformationArrangement` \r\n* `PaymentArrangement` \r\n* `EntitlementArrangement` \r\n* `PeriodArrangement` \r\n* `CollateralArrangement` \r\n* `LimitArrangement` \r\n* `AccessArrangement` \r\n* `CardPaymentArrangement` \r\n* `StandingOrderArrangement` \r\n* `OverdraftArrangement` \r\n* `RepaymentArrangement` \r\n* `StatementArrangement` \r\n* `CreditTransferArrangement` \r\n* `ProductAndServiceArrangement` \r\n* `FactoringArrangement` \r\n* `RolloverArrangement` \r\n* `RestructuringArrangement` \r\n* `InsuranceArrangement` \r\n* `CollectionArrangement` \r\n* `UnderwritingArrangement` \r\n* `TerminationArrangement` \r\n* `MaturityArrangement` \r\n* "
     Action:
        type: object
        description: ' '
        properties:
           ActionType:
              enum:
                   -  Initiate
                   -  Execute
                   -  Create
                   -  Transfer
                   -  Pay
                   -  Deliver
                   -  Apply
                   -  Calculate
              type: string
              description: ">-\r\n* `Initiate` \r\n* `Execute` \r\n* `Create` \r\n* `Transfer` \r\n* `Pay` \r\n* `Deliver` \r\n* `Apply` \r\n* `Calculate` \r\n* "
     Arrangementlifecyclestatus:
        type: object
        description: >-
          A characteristic of arrangement which refers to the LifecycleStatus of
          arrangement (e.g., requested, proposed, offered, accepted, cancelled,
          terminated, fulfilled, etc.) 
        properties:
           ArrangementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ArrangementLifecycleStatusType:
              enum:
                   -  Requested
                   -  Proposed
                   -  Offered
                   -  Accepted
                   -  Cancelled
                   -  Fulfilled
                   -  Terminated
              type: string
              description: ">-\r\n* `Requested` \r\n* `Proposed` \r\n* `Offered` \r\n* `Accepted` \r\n* `Cancelled` \r\n* `Fulfilled` \r\n* `Terminated` \r\n* "
     Subject:
        type: object
        description: ' '
        properties:
           Subject:
              type: string
              description: >-
                A thing that is discussed or dealt whit in agreement/arrangement
                about doing or not doing (as action) something.
              format: Class
     ControlSyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     ControlSyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     GrantSyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     GrantSyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     GrantSyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     NotifySyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     NotifySyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     NotifySyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     RegisterSyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     RegisterSyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     RegisterSyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     RequestSyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     RequestSyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     RequestSyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     RetrieveSyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     RetrieveSyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     RetrieveSyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     UpdateSyndicateMembershipRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
              description: "\r\n"
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
              description: "\r\n"
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
              description: ''
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     UpdateSyndicateMembershipResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
     UpdateSyndicateMembership:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     NotifySyndicateComplianceClausesRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
     BusinessService:
        type: object
        description: "\r\n - "
        properties:
           BusinessServiceType:
              enum:
                   -  Businessservicetypevalues
              type: string
              description: ">-\r\n* `Businessservicetypevalues` \r\n* "
     Condition:
        type: object
        description: "\r\n - "
        properties:
           Condition:
              type: string
              description: >-
                Condition is a premise upon which the fulfillment of an
                agreement depends 


                General and special arrangements, provisions, requirements,
                rules, specifications, and standards that form an integral part
                of an agreement or contract.


                Read more:
                http://www.businessdictionary.com/definition/termsandconditions.html

              format: Class
     Schedule:
        type: object
        description: "\r\n - "
        properties:
           ScheduleType:
              type: string
              description: ''
              format: String
     NotifySyndicateComplianceClausesResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesType:
              $ref: '#/components/schemas/Text'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
     NotifySyndicateComplianceClauses:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     NotifySyndicateEligibilityClausesRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
     NotifySyndicateEligibilityClausesResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/Text'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
     NotifySyndicateEligibilityClauses:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     RetrieveSyndicateComplianceClausesRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
     RetrieveSyndicateComplianceClausesResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesType:
              $ref: '#/components/schemas/Text'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
     RetrieveSyndicateComplianceClauses:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     RetrieveSyndicateEligibilityClausesRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
     RetrieveSyndicateEligibilityClausesResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/Text'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
     RetrieveSyndicateEligibilityClauses:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     UpdateSyndicateComplianceClausesRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
     UpdateSyndicateComplianceClausesResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateComplianceClausesType:
              $ref: '#/components/schemas/Text'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
     UpdateSyndicateComplianceClauses:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     UpdateSyndicateEligibilityClausesRequest:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
     UpdateSyndicateEligibilityClausesResponse:
        type: object
        description: ''
        properties:
           SyndicateMembershipReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesReference:
              type: string
              description: "\r\n"
              format: Object
           SyndicateEligibilityClausesType:
              $ref: '#/components/schemas/Text'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
     UpdateSyndicateEligibilityClauses:
        type: object
        description: ''
        properties:
           SyndicateMembershipParameterType:
              $ref: '#/components/schemas/Text'
           SyndicateMembershipSelectedOption:
              $ref: '#/components/schemas/Service'
           SyndicateMembershipRequest:
              $ref: '#/components/schemas/Instruction'
           SyndicateMembershipPlan:
              $ref: '#/components/schemas/Plan'
           SyndicateMembershipObligation:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipEntitlement:
              $ref: '#/components/schemas/Arrangement'
           SyndicateMembershipReference:
              type: string
              description: >-
                An unique reference to an item or an occurrence of Syndicate
                Membership
              format: Object
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     ControlSyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlSyndicateMembershipRequest'
        required: true
     GrantSyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/GrantSyndicateMembershipRequest'
        required: true
     NotifySyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifySyndicateMembershipRequest'
        required: true
     RegisterSyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterSyndicateMembershipRequest'
        required: true
     RequestSyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestSyndicateMembershipRequest'
        required: true
     RetrieveSyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSyndicateMembershipRequest'
        required: true
     UpdateSyndicateMembershipRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSyndicateMembershipRequest'
        required: true
     NotifySyndicateComplianceClausesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifySyndicateComplianceClausesRequest'
        required: true
     NotifySyndicateEligibilityClausesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifySyndicateEligibilityClausesRequest'
        required: true
     RetrieveSyndicateComplianceClausesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSyndicateComplianceClausesRequest'
        required: true
     RetrieveSyndicateEligibilityClausesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSyndicateEligibilityClausesRequest'
        required: true
     UpdateSyndicateComplianceClausesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSyndicateComplianceClausesRequest'
        required: true
     UpdateSyndicateEligibilityClausesRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSyndicateEligibilityClausesRequest'
        required: true
  parameters:
     syndicatemembershipid:
        name: syndicatemembershipid
        in: path
        required: true
        style: simple
        schema:
          type: string
     syndicatecomplianceclausesid:
        name: syndicatecomplianceclausesid
        in: path
        required: true
        style: simple
        schema:
          type: string
     syndicateeligibilityclausesid:
        name: syndicateeligibilityclausesid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     ControlSyndicateMembershipResponse:
        description: SyndicateMembershipControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlSyndicateMembershipResponse'
     GrantSyndicateMembershipResponse:
        description: SyndicateMembershipGrant
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/GrantSyndicateMembershipResponse'
     NotifySyndicateMembershipResponse:
        description: SyndicateMembershipNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifySyndicateMembershipResponse'
     RegisterSyndicateMembershipResponse:
        description: SyndicateMembershipRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterSyndicateMembershipResponse'
     RequestSyndicateMembershipResponse:
        description: SyndicateMembershipRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestSyndicateMembershipResponse'
     RetrieveSyndicateMembershipResponse:
        description: SyndicateMembershipRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSyndicateMembershipResponse'
     UpdateSyndicateMembershipResponse:
        description: SyndicateMembershipUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSyndicateMembershipResponse'
     NotifySyndicateComplianceClausesResponse:
        description: SyndicateComplianceClausesNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifySyndicateComplianceClausesResponse'
     NotifySyndicateEligibilityClausesResponse:
        description: SyndicateEligibilityClausesNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifySyndicateEligibilityClausesResponse'
     RetrieveSyndicateComplianceClausesResponse:
        description: SyndicateComplianceClausesRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSyndicateComplianceClausesResponse'
     RetrieveSyndicateEligibilityClausesResponse:
        description: SyndicateEligibilityClausesRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSyndicateEligibilityClausesResponse'
     UpdateSyndicateComplianceClausesResponse:
        description: SyndicateComplianceClausesUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSyndicateComplianceClausesResponse'
     UpdateSyndicateEligibilityClausesResponse:
        description: SyndicateEligibilityClausesUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSyndicateEligibilityClausesResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
