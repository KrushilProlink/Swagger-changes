openapi: 3.0.1
info:
  title: Location Data Management
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This service domain maintain
    details of the use and state of locations of interest to the bank. This can
    include both physical and virtual addresses. It is used to check for valid
    use and for sales/marketing activities
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/LocationDataManagement
paths:
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Register':
      post:
        tags:
           - CR - LocationDirectoryEntry
        summary: InCR Register a location in the catalog
        description: InCR Register a location in the catalog
        operationId: LocationDirectoryEntry/Register
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterLocationDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Update':
      put:
        tags:
           - CR - LocationDirectoryEntry
        summary: UpCR Update details about the location's directory entry
        description: UpCR Update details about the location's directory entry
        operationId: LocationDirectoryEntry/Update
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateLocationDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Control':
      put:
        tags:
           - CR - LocationDirectoryEntry
        summary: CoCR Control the handling of a location entry (e.g. terminate)
        description: CoCR Control the handling of a location entry (e.g. terminate)
        operationId: LocationDirectoryEntry/Control
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/ControlLocationDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Request':
      put:
        tags:
           - CR - LocationDirectoryEntry
        summary: RqCR Request manual intervention with an entry (e.g. refresh content)
        description: RqCR Request manual intervention with an entry (e.g. refresh content)
        operationId: LocationDirectoryEntry/Request
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/RequestLocationDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Retrieve':
      get:
        tags:
           - CR - LocationDirectoryEntry
        summary: ReCR Retrieve details about a location directory entry
        description: ReCR Retrieve details about a location directory entry
        operationId: LocationDirectoryEntry/Retrieve
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveLocationDirectoryEntryResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Exchange':
      put:
        tags:
           - CR - LocationDirectoryEntry
        summary: EcCR Accept, verify, reject a directory entry
        description: EcCR Accept, verify, reject a directory entry
        operationId: LocationDirectoryEntry/Exchange
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeLocationDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/LocationDirectoryEntry/{locationdirectoryentryid}/Execute':
      put:
        tags:
           - CR - LocationDirectoryEntry
        summary: ExCR Execute an automated action against an entry
        description: ExCR Execute an automated action against an entry
        operationId: LocationDirectoryEntry/Execute
        parameters:
           - $ref: '#/components/parameters/locationdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteLocationDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Location/{locationid}/Exchange':
      put:
        tags:
           - BQ - Location
        summary: EcBQ Accept, verify, reject etc. details of a location directory entry
        description: EcBQ Accept, verify, reject etc. details of a location directory entry
        operationId: Location/Exchange
        parameters:
           - $ref: '#/components/parameters/locationid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeLocationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Location/{locationid}/Update':
      put:
        tags:
           - BQ - Location
        summary: UpBQ Update details about a location entry
        description: UpBQ Update details about a location entry
        operationId: Location/Update
        parameters:
           - $ref: '#/components/parameters/locationid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateLocationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Location/{locationid}/Retrieve':
      get:
        tags:
           - BQ - Location
        summary: ReBQ Retrieve details about location entries in the directory
        description: ReBQ Retrieve details about location entries in the directory
        operationId: Location/Retrieve
        parameters:
           - $ref: '#/components/parameters/locationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveLocationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Use/{useid}/Update':
      put:
        tags:
           - BQ - Use
        summary: UpBQ Update details about an usage entry for the location
        description: UpBQ Update details about an usage entry for the location
        operationId: Use/Update
        parameters:
           - $ref: '#/components/parameters/useid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateUseRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Use/{useid}/Retrieve':
      get:
        tags:
           - BQ - Use
        summary: ReBQ Retrieve details about usage entries in the location directory
        description: ReBQ Retrieve details about usage entries in the location directory
        operationId: Use/Retrieve
        parameters:
           - $ref: '#/components/parameters/useid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveUseResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Occupancy/{occupancyid}/Update':
      put:
        tags:
           - BQ - Occupancy
        summary: UpBQ Update details about a location's occupancy
        description: UpBQ Update details about a location's occupancy
        operationId: Occupancy/Update
        parameters:
           - $ref: '#/components/parameters/occupancyid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateOccupancyRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Occupancy/{occupancyid}/Retrieve':
      get:
        tags:
           - BQ - Occupancy
        summary: >-
          ReBQ Retrieve details about location's occupancy entry in the
          directory
        description: >-
          ReBQ Retrieve details about location's occupancy entry in the
          directory
        operationId: Occupancy/Retrieve
        parameters:
           - $ref: '#/components/parameters/occupancyid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveOccupancyResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     RegisterLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Location:
        type: object
        description: ' Location|Location (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022 BM  ()'
        properties:
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: >-
                A description of the property, particularly if it has landmark
                characteristics.
           LocationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: >-
                Key dates associated with the directory entry (e.g. open date,
                refresh date).
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                The tracked status (e.g. under construction or repair,
                inhabited, vacant).
           LocationType:
              enum:
                   -  Continent
                   -  Country
                   -  State
                   -  District
                   -  Province
                   -  Town
                   -  City
                   -  Region
              type: string
              description: ">-\r\n* `Continent` \r\n* `Country` \r\n* `State` \r\n* `District` \r\n* `Province` \r\n* `Town` \r\n* `City` \r\n* `Region` \r\n* "
           LocationZoningType:
              $ref: '#/components/schemas/Text'
              description: >-
                The planning or zoning status (e.g. residential, commercial,
                industrial).
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: >-
                The general purpose and neighborhood of the property  (e.g.
                residential, industrial, commercial).
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: >-
                The construction approach for a property at the location (e.g.
                era and architecture as might be used in valuation).
           LocationOccupancyType:
              $ref: '#/components/schemas/Text'
              description: >-
                The type of occupancy (e.g. residency, business, retail,
                entertainment).
           LocationValue:
              $ref: '#/components/schemas/Value'
              description: >-
                The estimated (book) value of the property at the location 
                rental and purchase as appropriate.
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: >-
                An indication of the size or scale of the property where
                appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover
                restaurant).
           LocationIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           Location:
              type: string
              description: >-
                The definition of an addressable space/position both in real and
                virtual environments with associated uses and entitlements
              format: Class
           LocationName:
              $ref: '#/components/schemas/Name'
              description: Name (label) of the location. (ISO20022)
           LocationTimeZone:
              $ref: '#/components/schemas/Text'
              description: Local time zone.
     Text:
        type: object
        description: >-
          A description of the property, particularly if it has landmark
          characteristics. 
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Datetime:
        type: object
        description: >-
          Key dates associated with the directory entry (e.g. open date, refresh
          date). 
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Status:
        type: object
        description: >-
          The tracked status (e.g. under construction or repair, inhabited,
          vacant). 
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Datetimeperiod:
        type: object
        description: 'Period of time during which the status is valid. '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Involvedparty:
        type: object
        description: >-
          Party who plays a  specific role in the context of assigning a
          status. 
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Address:
        type: object
        description: ' '
        properties:
           AddressType:
              enum:
                   -  PostalAddress
                   -  GeolocationAddress
                   -  LatitudeAddress
                   -  LongitudeAddress
                   -  ElectronicAddress
              type: string
              description: ">-\r\n* `PostalAddress` \r\n* `GeolocationAddress` \r\n* `LatitudeAddress` \r\n* `LongitudeAddress` \r\n* `ElectronicAddress` \r\n* "
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           Address:
              type: string
              description: >-
                A specific designation or description of a location, typically
                used for specifying the location or destination of something or
                someone
              format: Class
     RegisterLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RegisterLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     UpdateLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     UpdateLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     UpdateLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ControlLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     ControlLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ControlLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RequestLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     RequestLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RequestLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RetrieveLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     RetrieveLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RetrieveLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ExchangeLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     ExchangeLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ExchangeLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ExecuteLocationDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     ExecuteLocationDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ExecuteLocationDirectoryEntry:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     ExchangeLocationRequest:
        type: object
        description: ''
        properties:
           LocationType:
              enum:
                   -  GeographicalArea
                   -  DigitalArea
                   -  StatisticalArea
                   -  TimeZone
                   -  TreatyArea
              type: string
              description: ">-\r\n* `GeographicalArea` \r\n* `DigitalArea` \r\n* `StatisticalArea` \r\n* `TimeZone` \r\n* `TreatyArea` \r\n* "
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           LocationCoordinates:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExchangeLocationResponse:
        type: object
        description: ''
        properties:
           LocationType:
              enum:
                   -  GeographicalArea
                   -  DigitalArea
                   -  StatisticalArea
                   -  TimeZone
                   -  TreatyArea
              type: string
              description: ">-\r\n* `GeographicalArea` \r\n* `DigitalArea` \r\n* `StatisticalArea` \r\n* `TimeZone` \r\n* `TreatyArea` \r\n* "
           LocationAddress:
              $ref: '#/components/schemas/Address'
           LocationCoordinates:
              $ref: '#/components/schemas/Text'
           LocationDescription:
              $ref: '#/components/schemas/Text'
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
           LocationCapacity:
              $ref: '#/components/schemas/Text'
           LocationStatus:
              $ref: '#/components/schemas/Status'
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
     ExchangeLocation:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     UpdateLocationRequest:
        type: object
        description: ''
        properties:
           LocationType:
              enum:
                   -  GeographicalArea
                   -  DigitalArea
                   -  StatisticalArea
                   -  TimeZone
                   -  TreatyArea
              type: string
              description: ">-\r\n* `GeographicalArea` \r\n* `DigitalArea` \r\n* `StatisticalArea` \r\n* `TimeZone` \r\n* `TreatyArea` \r\n* "
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           LocationCoordinates:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     UpdateLocationResponse:
        type: object
        description: ''
        properties:
           LocationType:
              enum:
                   -  GeographicalArea
                   -  DigitalArea
                   -  StatisticalArea
                   -  TimeZone
                   -  TreatyArea
              type: string
              description: ">-\r\n* `GeographicalArea` \r\n* `DigitalArea` \r\n* `StatisticalArea` \r\n* `TimeZone` \r\n* `TreatyArea` \r\n* "
           LocationAddress:
              $ref: '#/components/schemas/Address'
           LocationCoordinates:
              $ref: '#/components/schemas/Text'
           LocationDescription:
              $ref: '#/components/schemas/Text'
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
           LocationCapacity:
              $ref: '#/components/schemas/Text'
           LocationStatus:
              $ref: '#/components/schemas/Status'
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
     UpdateLocation:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RetrieveLocationRequest:
        type: object
        description: ''
        properties:
           LocationType:
              enum:
                   -  GeographicalArea
                   -  DigitalArea
                   -  StatisticalArea
                   -  TimeZone
                   -  TreatyArea
              type: string
              description: ">-\r\n* `GeographicalArea` \r\n* `DigitalArea` \r\n* `StatisticalArea` \r\n* `TimeZone` \r\n* `TreatyArea` \r\n* "
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           LocationCoordinates:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RetrieveLocationResponse:
        type: object
        description: ''
        properties:
           LocationType:
              enum:
                   -  GeographicalArea
                   -  DigitalArea
                   -  StatisticalArea
                   -  TimeZone
                   -  TreatyArea
              type: string
              description: ">-\r\n* `GeographicalArea` \r\n* `DigitalArea` \r\n* `StatisticalArea` \r\n* `TimeZone` \r\n* `TreatyArea` \r\n* "
           LocationAddress:
              $ref: '#/components/schemas/Address'
           LocationCoordinates:
              $ref: '#/components/schemas/Text'
           LocationDescription:
              $ref: '#/components/schemas/Text'
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
           LocationCapacity:
              $ref: '#/components/schemas/Text'
           LocationStatus:
              $ref: '#/components/schemas/Status'
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
     RetrieveLocation:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     UpdateUseRequest:
        type: object
        description: ''
        properties:
           LocationZoningType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationUsage:
              $ref: '#/components/schemas/LocationUsage'
              description: "\r\n"
     LocationUsage:
        type: object
        description: "\r\n - "
        properties:
           LocationUsage:
              type: string
              description: >-
                The purpose or usage of  location in relationship to the
                associated object like the mailing address for letters or URL
                for email address.  
              format: Class
     UpdateUseResponse:
        type: object
        description: ''
        properties:
           LocationZoningType:
              $ref: '#/components/schemas/Text'
           LocationUsage:
              $ref: '#/components/schemas/LocationUsage'
     UpdateUse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RetrieveUseRequest:
        type: object
        description: ''
        properties:
           LocationZoningType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationUsage:
              $ref: '#/components/schemas/LocationUsage'
              description: "\r\n"
     RetrieveUseResponse:
        type: object
        description: ''
        properties:
           LocationZoningType:
              $ref: '#/components/schemas/Text'
           LocationUsage:
              $ref: '#/components/schemas/LocationUsage'
     RetrieveUse:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     UpdateOccupancyRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           LocationOwnerTitle:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           LocationValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           LocationOccupierType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationOccupierReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           LocationOccupierTerms:
              $ref: '#/components/schemas/LocationArrangement'
              description: "\r\n"
           AlliancePartnerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
     LocationArrangement:
        type: object
        description: "\r\n - "
        properties:
           LocationArrangement:
              type: string
              description: ''
              format: Class
     UpdateOccupancyResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           LocationOwnerTitle:
              $ref: '#/components/schemas/Involvedparty'
           LocationValue:
              $ref: '#/components/schemas/Value'
           LocationOccupierType:
              $ref: '#/components/schemas/Text'
           LocationOccupierReference:
              $ref: '#/components/schemas/Involvedparty'
           LocationOccupierTerms:
              $ref: '#/components/schemas/LocationArrangement'
           AlliancePartnerReference:
              $ref: '#/components/schemas/Involvedparty'
     UpdateOccupancy:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     RetrieveOccupancyRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           LocationOwnerTitle:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           LocationValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           LocationOccupierType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           LocationOccupierReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           LocationOccupierTerms:
              $ref: '#/components/schemas/LocationArrangement'
              description: "\r\n"
           AlliancePartnerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
     RetrieveOccupancyResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           LocationOwnerTitle:
              $ref: '#/components/schemas/Involvedparty'
           LocationValue:
              $ref: '#/components/schemas/Value'
           LocationOccupierType:
              $ref: '#/components/schemas/Text'
           LocationOccupierReference:
              $ref: '#/components/schemas/Involvedparty'
           LocationOccupierTerms:
              $ref: '#/components/schemas/LocationArrangement'
           AlliancePartnerReference:
              $ref: '#/components/schemas/Involvedparty'
     RetrieveOccupancy:
        type: object
        description: ''
        properties:
           LocationReference:
              $ref: '#/components/schemas/Location'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     RegisterLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterLocationDirectoryEntryRequest'
        required: true
     UpdateLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateLocationDirectoryEntryRequest'
        required: true
     ControlLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlLocationDirectoryEntryRequest'
        required: true
     RequestLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestLocationDirectoryEntryRequest'
        required: true
     RetrieveLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveLocationDirectoryEntryRequest'
        required: true
     ExchangeLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeLocationDirectoryEntryRequest'
        required: true
     ExecuteLocationDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteLocationDirectoryEntryRequest'
        required: true
     ExchangeLocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeLocationRequest'
        required: true
     UpdateLocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateLocationRequest'
        required: true
     RetrieveLocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveLocationRequest'
        required: true
     UpdateUseRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateUseRequest'
        required: true
     RetrieveUseRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveUseRequest'
        required: true
     UpdateOccupancyRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateOccupancyRequest'
        required: true
     RetrieveOccupancyRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveOccupancyRequest'
        required: true
  parameters:
     locationdirectoryentryid:
        name: locationdirectoryentryid
        in: path
        required: true
        style: simple
        schema:
          type: string
     locationid:
        name: locationid
        in: path
        required: true
        style: simple
        schema:
          type: string
     useid:
        name: useid
        in: path
        required: true
        style: simple
        schema:
          type: string
     occupancyid:
        name: occupancyid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     RegisterLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterLocationDirectoryEntryResponse'
     UpdateLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateLocationDirectoryEntryResponse'
     ControlLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlLocationDirectoryEntryResponse'
     RequestLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestLocationDirectoryEntryResponse'
     RetrieveLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveLocationDirectoryEntryResponse'
     ExchangeLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeLocationDirectoryEntryResponse'
     ExecuteLocationDirectoryEntryResponse:
        description: LocationDirectoryEntryExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteLocationDirectoryEntryResponse'
     ExchangeLocationResponse:
        description: LocationExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeLocationResponse'
     UpdateLocationResponse:
        description: LocationUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateLocationResponse'
     RetrieveLocationResponse:
        description: LocationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveLocationResponse'
     UpdateUseResponse:
        description: UseUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateUseResponse'
     RetrieveUseResponse:
        description: UseRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveUseResponse'
     UpdateOccupancyResponse:
        description: OccupancyUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateOccupancyResponse'
     RetrieveOccupancyResponse:
        description: OccupancyRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveOccupancyResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
