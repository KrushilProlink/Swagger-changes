openapi: 3.0.1
info:
  title: Brokered Product
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This Service Domain oversees
    all activities associated with the coordinated delivery of 3rd party
    products and services
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/BrokeredProduct
paths:
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Control':
      put:
        tags:
           - CR - BrokeredProductFacility
        summary: Control Brokered Product Facility
        description: Control Brokered Product Facility
        operationId: BrokeredProductFacility/Control
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/ControlBrokeredProductFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Initiate':
      post:
        tags:
           - CR - BrokeredProductFacility
        summary: Initiate Brokered Product Facility
        description: Initiate Brokered Product Facility
        operationId: BrokeredProductFacility/Initiate
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateBrokeredProductFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Exchange':
      put:
        tags:
           - CR - BrokeredProductFacility
        summary: Exchange Brokered Product Facility
        description: Exchange Brokered Product Facility
        operationId: BrokeredProductFacility/Exchange
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeBrokeredProductFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Grant':
      put:
        tags:
           - CR - BrokeredProductFacility
        summary: Grant Brokered Product Facility
        description: Grant Brokered Product Facility
        operationId: BrokeredProductFacility/Grant
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/GrantBrokeredProductFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Notify':
      get:
        tags:
           - CR - BrokeredProductFacility
        summary: Notify Brokered Product Facility
        description: Notify Brokered Product Facility
        operationId: BrokeredProductFacility/Notify
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        responses:
          '200':
            $ref: '#/components/responses/NotifyBrokeredProductFacilityResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Request':
      put:
        tags:
           - CR - BrokeredProductFacility
        summary: Request Brokered Product Facility
        description: Request Brokered Product Facility
        operationId: BrokeredProductFacility/Request
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/RequestBrokeredProductFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Retrieve':
      get:
        tags:
           - CR - BrokeredProductFacility
        summary: Retrieve Brokered Product Facility
        description: Retrieve Brokered Product Facility
        operationId: BrokeredProductFacility/Retrieve
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveBrokeredProductFacilityResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BrokeredProductFacility/{brokeredproductfacilityid}/Update':
      put:
        tags:
           - CR - BrokeredProductFacility
        summary: Update Brokered Product Facility
        description: Update Brokered Product Facility
        operationId: BrokeredProductFacility/Update
        parameters:
           - $ref: '#/components/parameters/brokeredproductfacilityid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateBrokeredProductFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ServiceAccess/{serviceaccessid}/Execute':
      put:
        tags:
           - BQ - ServiceAccess
        summary: Execute Service Access
        description: Execute Service Access
        operationId: ServiceAccess/Execute
        parameters:
           - $ref: '#/components/parameters/serviceaccessid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteServiceAccessRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ServiceAccess/{serviceaccessid}/Capture':
      put:
        tags:
           - BQ - ServiceAccess
        summary: Capture Service Access
        description: Capture Service Access
        operationId: ServiceAccess/Capture
        parameters:
           - $ref: '#/components/parameters/serviceaccessid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureServiceAccessRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     ControlBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     AccountAccessConsent:
        type: object
        description: Reference to the Customer's account - 
        properties:
           Identification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Status:
              enum:
                   -  Authorised
                   -  AwaitingAuthorization
                   -  Rejected
                   -  Revoked
              type: string
              description: ">-\r\n* `Authorised` \r\n* `AwaitingAuthorization` \r\n* `Rejected` \r\n* `Revoked` \r\n* "
           ExpirationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: >-
                Specified date and time the permissions will expire. If this is
                not populated, the permissions will be open ended. (Open
                Banking)
           CreationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the consent was created.
           ConsentAccount:
              $ref: '#/components/schemas/Productagreement'
              description: ''
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Text:
        type: object
        description: ' '
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Productagreement:
        type: object
        description: ' '
        properties:
           Type:
              enum:
                   -  CurrentAccountAgreement
                   -  SavingsAccountAgreement
                   -  BrokeredProductAgreement
                   -  ConsumerLoanAgreement
                   -  MortgageLoanAgreement
                   -  DirectDebitServiceAgreement
              type: string
              description: ">-\r\n* `CurrentAccountAgreement` \r\n* `SavingsAccountAgreement` \r\n* `BrokeredProductAgreement` \r\n* `ConsumerLoanAgreement` \r\n* `MortgageLoanAgreement` \r\n* `DirectDebitServiceAgreement` \r\n* "
           ProductReference:
              $ref: '#/components/schemas/Bankingproduct'
              description: ''
           AgreementReference:
              $ref: '#/components/schemas/Agreement'
              description: ''
     Bankingproduct:
        type: object
        description: ' '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Status:
        type: object
        description: ' '
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Agreement:
        type: object
        description: ' '
        properties:
           AgreementSignedDate:
              $ref: '#/components/schemas/Date'
              description: >-
                Date on which the agreement was signed by all parties.
                (ISO20022)
           AgreementType:
              enum:
                   -  CustomerAgreement
                   -  SupplierAgreement
                   -  BrokerAgreement
                   -  SalesAgreement
                   -  PurchaseAgreement
                   -  MaintenanceAgreement
                   -  ProductAgreement
                   -  ProductSalesAgreement
                   -  ResourceAgreement
              type: string
              description: ">-\r\n* `CustomerAgreement` \r\n* `SupplierAgreement` \r\n* `BrokerAgreement` \r\n* `SalesAgreement` \r\n* `PurchaseAgreement` \r\n* `MaintenanceAgreement` \r\n* `ProductAgreement` \r\n* `ProductSalesAgreement` \r\n* `ResourceAgreement` \r\n* "
           AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: |
                Period during which the agreement is valid
           AgreementVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
              description: >-
                A characteristic of agreement which refers to the
                LifecycleStatus of agreement (e.g., potential, offered,
                confirmed, completed, signed, terminated).
           AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                The identifier of agreement like Agreement Number, Contract
                Number, Contract Registration Number, etc. 
           AgreementDate:
              $ref: '#/components/schemas/Datetime'
              description: >-
                A characteristic of agreement which refers to 1) LifecycleDate
                of agreement (e.g., SignedDate, TerminatedDate, FulfilledDate)
                OR 2) ArrangedDate of agreement (e.g., StartingDate, EndingDate,
                ValidityPeriod, EffectiveDate).
           AgreementDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Date:
        type: object
        description: 'Date on which the agreement was signed by all parties. (ISO20022) '
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Agreementlifecyclestatus:
        type: object
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
           AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AgreementLifecycleStatusType:
              enum:
                   -  Offered
                   -  Confirmed
                   -  Completed
                   -  Signed
                   -  Terminated
                   -  Rejected
              type: string
              description: ">-\r\n* `Offered` \r\n* `Confirmed` \r\n* `Completed` \r\n* `Signed` \r\n* `Terminated` \r\n* `Rejected` \r\n* "
     Token:
        type: object
        description: ' - '
        properties:
           TokenIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenIdentificationAndVerificationMethod:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
              description: ''
           TokenRequestReference:
              $ref: '#/components/schemas/Tokenrequest'
              description: ''
           TokenProtectionMethod:
              enum:
                   -  Software
                   -  Trustedexectutionenvironment
                   -  Secureelement
                   -  Secureenclave
                   -  Otherprivate
                   -  Othernational
                   -  Trustedplatformmodule
              type: string
              description: ">-\r\n* `Software` \r\n* `Trustedexectutionenvironment` \r\n* `Secureelement` \r\n* `Secureenclave` \r\n* `Otherprivate` \r\n* `Othernational` \r\n* `Trustedplatformmodule` \r\n* "
           TokenStorageLocation:
              enum:
                   -  Device
                   -  Onfile
                   -  Cardacceptorwallet
                   -  Issuerwallet
                   -  Thirdpartywallet
                   -  Otherprivate
                   -  Othernational
              type: string
              description: ">-\r\n* `Device` \r\n* `Onfile` \r\n* `Cardacceptorwallet` \r\n* `Issuerwallet` \r\n* `Thirdpartywallet` \r\n* `Otherprivate` \r\n* `Othernational` \r\n* "
           TokenType:
              enum:
                   -  RefreshToken
                   -  AccessToken
                   -  SecurityToken
                   -  AuthenticationToken
              type: string
              description: ">-\r\n* `RefreshToken` \r\n* `AccessToken` \r\n* `SecurityToken` \r\n* `AuthenticationToken` \r\n* "
     Device:
        type: object
        description: ' '
        properties:
           DeviceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           DeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           DeviceProperty:
              $ref: '#/components/schemas/Text'
              description: >-
                Property of a device relevant for its use.


                A device has the characteristics of the device type it belongs
                to,possibly specified

                e.g. . a device of the type "cheque book" will have cheques. The
                device specifies how many and what the number range is.

                e.g. an electronic banking app consists of software modules, the
                device specifies what version 
           DeviceElement:
              $ref: '#/components/schemas/Text'
              description: >-
                An element of the device that can be used independently and is
                individually identified


                e.g. a cheque in a chequebook
           DeviceStatus:
              $ref: '#/components/schemas/Status'
              description: |
                The life cycle stage of a device

                e.g. active, defect
           DeviceVersion:
              type: string
              description: ''
              format: Number
           DeviceDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           DeviceDescription:
              $ref: '#/components/schemas/Text'
              description: ''
           DeviceName:
              $ref: '#/components/schemas/Name'
              description: ''
           DeviceLanguage:
              $ref: '#/components/schemas/Text'
              description: Preferred language set on the device
           DevicePhoneNumber:
              $ref: '#/components/schemas/Text'
              description: Phone number associated with the device.
           DeviceLocation:
              $ref: '#/components/schemas/Location'
              description: Geographical location of the device.
           DeviceManufacturer:
              $ref: '#/components/schemas/Text'
              description: Manufacturer of the device.
           DeviceCountry:
              $ref: '#/components/schemas/Country'
              description: Country of the location.
           DeviceAddress:
              $ref: '#/components/schemas/Address'
              description: >-
                The address associated with the device like Internet Protocol
                address, email Address
           DeviceAddressType:
              enum:
                   -  PostalAddress
                   -  GeolocationAddress
                   -  LatitudeAddress
                   -  LongitudeAddress
                   -  ElectronicAddress
              type: string
              description: ">-\r\n* `PostalAddress` \r\n* `GeolocationAddress` \r\n* `LatitudeAddress` \r\n* `LongitudeAddress` \r\n* `ElectronicAddress` \r\n* "
           DeviceOperatingSystem:
              enum:
                   -  Android
                   -  Ios
                   -  Windows
                   -  Blackberry
                   -  Tizen
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `Android` \r\n* `Ios` \r\n* `Windows` \r\n* `Blackberry` \r\n* `Tizen` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           DeviceIdentificationType:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
     Location:
        type: object
        description: 'Geographical location of the device. '
        properties:
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: >-
                A description of the property, particularly if it has landmark
                characteristics.
           LocationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: >-
                Key dates associated with the directory entry (e.g. open date,
                refresh date).
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                The tracked status (e.g. under construction or repair,
                inhabited, vacant).
           LocationType:
              enum:
                   -  Continent
                   -  Country
                   -  State
                   -  District
                   -  Province
                   -  Town
                   -  City
                   -  Region
              type: string
              description: ">-\r\n* `Continent` \r\n* `Country` \r\n* `State` \r\n* `District` \r\n* `Province` \r\n* `Town` \r\n* `City` \r\n* `Region` \r\n* "
           LocationZoningType:
              $ref: '#/components/schemas/Text'
              description: >-
                The planning or zoning status (e.g. residential, commercial,
                industrial).
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: >-
                The general purpose and neighborhood of the property  (e.g.
                residential, industrial, commercial).
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: >-
                The construction approach for a property at the location (e.g.
                era and architecture as might be used in valuation).
           LocationOccupancyType:
              $ref: '#/components/schemas/Text'
              description: >-
                The type of occupancy (e.g. residency, business, retail,
                entertainment).
           LocationValue:
              $ref: '#/components/schemas/Value'
              description: >-
                The estimated (book) value of the property at the location 
                rental and purchase as appropriate.
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: >-
                An indication of the size or scale of the property where
                appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover
                restaurant).
           LocationIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           Location:
              type: string
              description: >-
                The definition of an addressable space/position both in real and
                virtual environments with associated uses and entitlements
              format: Class
           LocationName:
              $ref: '#/components/schemas/Name'
              description: Name (label) of the location. (ISO20022)
           LocationTimeZone:
              $ref: '#/components/schemas/Text'
              description: Local time zone.
     Address:
        type: object
        description: ' '
        properties:
           AddressType:
              enum:
                   -  PostalAddress
                   -  GeolocationAddress
                   -  LatitudeAddress
                   -  LongitudeAddress
                   -  ElectronicAddress
              type: string
              description: ">-\r\n* `PostalAddress` \r\n* `GeolocationAddress` \r\n* `LatitudeAddress` \r\n* `LongitudeAddress` \r\n* `ElectronicAddress` \r\n* "
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           Address:
              type: string
              description: >-
                A specific designation or description of a location, typically
                used for specifying the location or destination of something or
                someone
              format: Class
     Country:
        type: object
        description: 'Country of the location. '
        properties:
           NationalRegulatoryAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Regulatory authority of the country. (ISO20022)
     Tokenrequest:
        type: object
        description: ' '
        properties:
           TokenRequestIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenRequestReason:
              $ref: '#/components/schemas/Text'
              description: ''
     ControlBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     ControlBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     InitiateBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     InitiateBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     InitiateBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     ExchangeBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     ExchangeBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     ExchangeBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     GrantBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     GrantBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     GrantBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     NotifyBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     NotifyBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     NotifyBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     RequestBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     RequestBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     RequestBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     RetrieveBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     RetrieveBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     RetrieveBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     UpdateBrokeredProductFacilityRequest:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
              description: Reference to the Customer's account
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
              description: ''
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
              description: |
                An unique reference to an item or an occurrence of <CR>-
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: ''
     UpdateBrokeredProductFacilityResponse:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     UpdateBrokeredProductFacility:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     ExecuteServiceAccessRequest:
        type: object
        description: ''
        properties:
           ServiceAccessIdentifier:
              $ref: '#/components/schemas/Identifier'
              description: An unique reference to an item or an occurrence of <BQ>-
           ServiceAccessType:
              $ref: '#/components/schemas/Text'
              description: ''
     ExecuteServiceAccessResponse:
        type: object
        description: ''
        properties:
           ServiceAccessIdentifier:
              $ref: '#/components/schemas/Identifier'
           ServiceAccessType:
              $ref: '#/components/schemas/Text'
     ExecuteServiceAccess:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     CaptureServiceAccessRequest:
        type: object
        description: ''
        properties:
           ServiceAccessIdentifier:
              $ref: '#/components/schemas/Identifier'
              description: An unique reference to an item or an occurrence of <BQ>-
           ServiceAccessType:
              $ref: '#/components/schemas/Text'
              description: ''
     CaptureServiceAccessResponse:
        type: object
        description: ''
        properties:
           ServiceAccessIdentifier:
              $ref: '#/components/schemas/Identifier'
           ServiceAccessType:
              $ref: '#/components/schemas/Text'
     CaptureServiceAccess:
        type: object
        description: ''
        properties:
           ConsentReference:
              $ref: '#/components/schemas/AccountAccessConsent'
           ActiveAccessTokenReference:
              $ref: '#/components/schemas/Token'
           BrokeredProductFacilityReference:
              $ref: '#/components/schemas/Identifier'
           ServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceUserReference:
              $ref: '#/components/schemas/Involvedparty'
           ThirdPartyProviderReference:
              $ref: '#/components/schemas/Involvedparty'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     ControlBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlBrokeredProductFacilityRequest'
        required: true
     InitiateBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateBrokeredProductFacilityRequest'
        required: true
     ExchangeBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeBrokeredProductFacilityRequest'
        required: true
     GrantBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/GrantBrokeredProductFacilityRequest'
        required: true
     NotifyBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyBrokeredProductFacilityRequest'
        required: true
     RequestBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestBrokeredProductFacilityRequest'
        required: true
     RetrieveBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBrokeredProductFacilityRequest'
        required: true
     UpdateBrokeredProductFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBrokeredProductFacilityRequest'
        required: true
     ExecuteServiceAccessRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteServiceAccessRequest'
        required: true
     CaptureServiceAccessRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureServiceAccessRequest'
        required: true
  parameters:
     brokeredproductfacilityid:
        name: brokeredproductfacilityid
        in: path
        required: true
        style: simple
        schema:
          type: string
     serviceaccessid:
        name: serviceaccessid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     ControlBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlBrokeredProductFacilityResponse'
     InitiateBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateBrokeredProductFacilityResponse'
     ExchangeBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeBrokeredProductFacilityResponse'
     GrantBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityGrant
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/GrantBrokeredProductFacilityResponse'
     NotifyBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyBrokeredProductFacilityResponse'
     RequestBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestBrokeredProductFacilityResponse'
     RetrieveBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBrokeredProductFacilityResponse'
     UpdateBrokeredProductFacilityResponse:
        description: BrokeredProductFacilityUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBrokeredProductFacilityResponse'
     ExecuteServiceAccessResponse:
        description: ServiceAccessExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteServiceAccessResponse'
     CaptureServiceAccessResponse:
        description: ServiceAccessCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureServiceAccessResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
