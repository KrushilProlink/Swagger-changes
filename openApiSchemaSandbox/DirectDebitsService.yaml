openapi: 3.0.1
info:
  title: Direct Debits Service
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | The Direct Debits Service
    Service Domain manages the operational details of a Direct Debits Service
    agreement between the bank and a corporate customer (creditor). 
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/DirectDebitsService
paths:
   '/DirectDebitsServiceFacility/{directdebitsservicefacilityid}/Initiate':
      post:
        tags:
           - CR - DirectDebitsServiceFacility
        summary: Initiate Direct Debits Service
        description: Initiate Direct Debits Service
        operationId: DirectDebitsServiceFacility/Initiate
        parameters:
           - $ref: '#/components/parameters/directdebitsservicefacilityid'
        requestBody:
          $ref: >-
            #/components/requestBodies/InitiateDirectDebitsServiceFacilityRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/DirectDebitsServiceFacility/{directdebitsservicefacilityid}/Retrieve':
      get:
        tags:
           - CR - DirectDebitsServiceFacility
        summary: Retrieve Details about Direct Debits Service
        description: Retrieve Details about Direct Debits Service
        operationId: DirectDebitsServiceFacility/Retrieve
        parameters:
           - $ref: '#/components/parameters/directdebitsservicefacilityid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveDirectDebitsServiceFacilityResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/DirectDebitsServiceFacility/{directdebitsservicefacilityid}/Update':
      put:
        tags:
           - CR - DirectDebitsServiceFacility
        summary: Update Details of Direct Debits Service
        description: Update Details of Direct Debits Service
        operationId: DirectDebitsServiceFacility/Update
        parameters:
           - $ref: '#/components/parameters/directdebitsservicefacilityid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateDirectDebitsServiceFacilityRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     InitiateDirectDebitsServiceFacilityRequest:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           StartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           EndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Reason:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
              description: ''
           NASOName:
              $ref: '#/components/schemas/Name'
              description: ''
     Identifier:
        type: object
        description: ' GenericIdentification|GenericIdentification (https://www.iso20022.org/standardsrepository/type/GenericIdentification)|Standard|ISO20022 BM ()'
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Text:
        type: object
        description: ' '
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Account:
        type: object
        description: ' Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()'
        properties:
           AccountStatus:
              $ref: '#/components/schemas/Accountstatus'
              description: >-
                A characteristic of account which refers to the LifecycleStatus
                of account like opened, closed, blocked, etc.


                Specifies the current state of an account. (ISO20022)
           AccountIdentification:
              $ref: '#/components/schemas/Accountidentification'
              description: The identifier of account like Account Number.
           AccountDate:
              $ref: '#/components/schemas/Accountdate'
              description: >-
                A characteristic of account which refers to LifecycleDate of
                account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) 
           AccountType:
              $ref: '#/components/schemas/Accounttype'
              description: >-
                Specifies the category of account like payment account, loan
                account, cash account, securities account, etc. 
           AccountPurpose:
              $ref: '#/components/schemas/Text'
              description: ''
           AccountBalance:
              $ref: '#/components/schemas/Accountbalance'
              description: >-
                The state of the obligations managed on the account, the result
                of all entries on the account.


                Numerical representation of the net increases and decreases in
                an account at a specific point in time. (ISO20022)


                Banking: Amount available in an account for withdrawal or use.

                Read more:
                http://www.businessdictionary.com/definition/balance.html


                Bookkeeping: Difference between the debit and credit sides of an
                account.

                Read more:
                http://www.businessdictionary.com/definition/balance.html
           AccountCurrency:
              $ref: '#/components/schemas/Accountcurrency'
              description: ''
           AccountDescription:
              $ref: '#/components/schemas/Text'
              description: |
                A detailed explanation or commentary of account. 
           AccountName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of account


                The account name is the name or names of the account owner(s)
                represented at an account level, as displayed by the ASPSP's
                online channels. Note, the account name is not the product name
                or the nickname of the account. (Open Banking)
     Accountstatus:
        type: object
        description: >-
          A characteristic of account which refers to the LifecycleStatus of
          account like opened, closed, blocked, etc.


          Specifies the current state of an account. (ISO20022) 
        properties:
           AccountStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AccountStatusType:
              enum:
                   -  Enabled
                   -  Disabled
                   -  Deleted
                   -  Proforma
                   -  Pending
              type: string
              description: ">-\r\n* `Enabled` \r\n* `Disabled` \r\n* `Deleted` \r\n* `Proforma` \r\n* `Pending` \r\n* "
           Accountstatus:
              type: string
              description: Specifies the current state of an account. (ISO20022)
              format: DataType
     Status:
        type: object
        description: ' '
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Accountidentification:
        type: object
        description: 'The identifier of account like Account Number. '
        properties:
           AccountIdentificationType:
              enum:
                   -  BBAN
                   -  IBAN
                   -  UPIC
                   -  AccountNumber
                   -  PAN
                   -  Paym
                   -  Wallet
              type: string
              description: ">-\r\n* `BBAN` \r\n* `IBAN` \r\n* `UPIC` \r\n* `AccountNumber` \r\n* `PAN` \r\n* `Paym` \r\n* `Wallet` \r\n* "
           AccountIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Accountidentification:
              type: string
              description: ''
              format: DataType
     Accountdate:
        type: object
        description: >-
          A characteristic of account which refers to LifecycleDate of account
          (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
        properties:
           AccountDateType:
              enum:
                   -  OpeningDate
                   -  ClosingDate
                   -  BlockingDate
                   -  MaturityDate
                   -  LiveDate
              type: string
              description: ">-\r\n* `OpeningDate` \r\n* `ClosingDate` \r\n* `BlockingDate` \r\n* `MaturityDate` \r\n* `LiveDate` \r\n* "
           AccountDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Accountdate:
              type: string
              description: ''
              format: DataType
     Accounttype:
        type: object
        description: >-
          Specifies the category of account like payment account, loan account,
          cash account, securities account, etc.  
        properties:
           AccountType:
              enum:
                   -  DebitAccount
                   -  CreditAccount
                   -  VostroAcount
                   -  NostroAccount
                   -  PaymentAccount
                   -  SettlementAccount
                   -  SavingAccount
                   -  CurrentAccount
                   -  CashAccount
                   -  LoanAccount
              type: string
              description: ">-\r\n* `DebitAccount` \r\n* `CreditAccount` \r\n* `VostroAcount` \r\n* `NostroAccount` \r\n* `PaymentAccount` \r\n* `SettlementAccount` \r\n* `SavingAccount` \r\n* `CurrentAccount` \r\n* `CashAccount` \r\n* `LoanAccount` \r\n* "
           AccountTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           Accounttype:
              type: string
              description: 'A classification of accounts based on their purpose '
              format: DataType
     Accountbalance:
        type: object
        description: >-
          The state of the obligations managed on the account, the result of all
          entries on the account.


          Numerical representation of the net increases and decreases in an
          account at a specific point in time. (ISO20022)


          Banking: Amount available in an account for withdrawal or use.

          Read more: http://www.businessdictionary.com/definition/balance.html


          Bookkeeping: Difference between the debit and credit sides of an
          account.

          Read more: http://www.businessdictionary.com/definition/balance.html 
        properties:
           BalanceAmount:
              $ref: '#/components/schemas/Amount'
              description: ''
           BalanceType:
              enum:
                   -  Openingbalance
                   -  Closingbalance
                   -  Currentbalance
                   -  Availablebalance
                   -  Ledgerbalance
                   -  Reservebalance
                   -  Freebalance
                   -  Principalbalance
              type: string
              description: ">-\r\n* `Openingbalance` \r\n* `Closingbalance` \r\n* `Currentbalance` \r\n* `Availablebalance` \r\n* `Ledgerbalance` \r\n* `Reservebalance` \r\n* `Freebalance` \r\n* `Principalbalance` \r\n* "
           BalanceDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           BalanceIndicator:
              enum:
                   -  Debit
                   -  Credit
              type: string
              description: ">-\r\n* `Debit` \r\n* `Credit` \r\n* "
           Accountbalance:
              type: string
              description: >-
                Numerical representation of the net increases and decreases in
                an account at a specific point in time. (ISO20022)

                https://www.iso20022.org/standardsrepository/type/Balance
              format: DataType
     Amount:
        type: object
        description: ' '
        properties:
           AmountValue:
              $ref: '#/components/schemas/Value'
              description: ''
           AmountCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           DecimalPointPosition:
              type: string
              description: |
                Decimal point position starts calulating from the right
              format: String
           AmountType:
              enum:
                   -  Principal
                   -  Actual
                   -  Estimated
                   -  Maximum
                   -  Default
                   -  Replacement
                   -  Incremental
                   -  Decremental
                   -  Reserved
                   -  Available
                   -  Used
              type: string
              description: ">-\r\n* `Principal` \r\n* `Actual` \r\n* `Estimated` \r\n* `Maximum` \r\n* `Default` \r\n* `Replacement` \r\n* `Incremental` \r\n* `Decremental` \r\n* `Reserved` \r\n* `Available` \r\n* `Used` \r\n* "
           Amount:
              type: string
              description: >-
                Number of monetary units specified in a currency, where the unit
                of currency is explicit and compliant with ISO 4217. (UN/CEFACT)


                The decimal seperator is a dot.



                Number of monetary units specified in a currency, where the unit
                of currency is explicit and compliant with ISO 4217. The decimal
                separator is a dot. (ISO20022)

                Note: A zero amount is considered a positive amount.

                 total number of digits: 18

                 number of digits in fractional part: 5

                 minInclusive: 0
              format: DataType
     Currencycode:
        type: object
        description: ' '
        properties:
           Currencycode:
              type: string
              description: >-
                A code identifying a currency according to ISO4217.

                A currency is a system of money in general use in a particular
                country.


                Code allocated to a currency, by a maintenance agency, under an
                international identification scheme as described in the latest
                edition of the international standard ISO 4217 "Codes for the
                representation of currencies and funds". Valid currency codes
                are registered with the ISO 4217 Maintenance Agency, and consist
                of three contiguous letters. (ISO20022)

              format: DataType
     Accountcurrency:
        type: object
        description: ' '
        properties:
           AccountCurrencyType:
              enum:
                   -  BaseCurrency
                   -  ReportingCurrency
                   -  SecondaryCurrency
                   -  TransferCurrency
              type: string
              description: ">-\r\n* `BaseCurrency` \r\n* `ReportingCurrency` \r\n* `SecondaryCurrency` \r\n* `TransferCurrency` \r\n* "
           AccountCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           Accountcurrency:
              type: string
              description: ''
              format: DataType
     ProductAgreement:
        type: object
        description: "\r\n - "
        properties:
           Type:
              enum:
                   -  CurrentAccountAgreement
                   -  SavingsAccountAgreement
                   -  BrokeredProductAgreement
                   -  ConsumerLoanAgreement
                   -  MortgageLoanAgreement
                   -  DirectDebitServiceAgreement
              type: string
              description: ">-\r\n* `CurrentAccountAgreement` \r\n* `SavingsAccountAgreement` \r\n* `BrokeredProductAgreement` \r\n* `ConsumerLoanAgreement` \r\n* `MortgageLoanAgreement` \r\n* `DirectDebitServiceAgreement` \r\n* "
           ProductReference:
              $ref: '#/components/schemas/Bankingproduct'
              description: ''
           AgreementReference:
              $ref: '#/components/schemas/Agreement'
              description: ''
     Bankingproduct:
        type: object
        description: ' '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Agreement:
        type: object
        description: ' '
        properties:
           AgreementSignedDate:
              $ref: '#/components/schemas/Date'
              description: >-
                Date on which the agreement was signed by all parties.
                (ISO20022)
           AgreementType:
              enum:
                   -  CustomerAgreement
                   -  SupplierAgreement
                   -  BrokerAgreement
                   -  SalesAgreement
                   -  PurchaseAgreement
                   -  MaintenanceAgreement
                   -  ProductAgreement
                   -  ProductSalesAgreement
                   -  ResourceAgreement
              type: string
              description: ">-\r\n* `CustomerAgreement` \r\n* `SupplierAgreement` \r\n* `BrokerAgreement` \r\n* `SalesAgreement` \r\n* `PurchaseAgreement` \r\n* `MaintenanceAgreement` \r\n* `ProductAgreement` \r\n* `ProductSalesAgreement` \r\n* `ResourceAgreement` \r\n* "
           AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: |
                Period during which the agreement is valid
           AgreementVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
              description: >-
                A characteristic of agreement which refers to the
                LifecycleStatus of agreement (e.g., potential, offered,
                confirmed, completed, signed, terminated).
           AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                The identifier of agreement like Agreement Number, Contract
                Number, Contract Registration Number, etc. 
           AgreementDate:
              $ref: '#/components/schemas/Datetime'
              description: >-
                A characteristic of agreement which refers to 1) LifecycleDate
                of agreement (e.g., SignedDate, TerminatedDate, FulfilledDate)
                OR 2) ArrangedDate of agreement (e.g., StartingDate, EndingDate,
                ValidityPeriod, EffectiveDate).
           AgreementDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Date:
        type: object
        description: 'Date on which the agreement was signed by all parties. (ISO20022) '
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Agreementlifecyclestatus:
        type: object
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
           AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AgreementLifecycleStatusType:
              enum:
                   -  Offered
                   -  Confirmed
                   -  Completed
                   -  Signed
                   -  Terminated
                   -  Rejected
              type: string
              description: ">-\r\n* `Offered` \r\n* `Confirmed` \r\n* `Completed` \r\n* `Signed` \r\n* `Terminated` \r\n* `Rejected` \r\n* "
     FeeArrangement:
        type: object
        description: ' Adjustment|Adjustment (https://www.iso20022.org/standardsrepository/type/Adjustment)|Standard|ISO20022 BM ()'
        properties:
           FeeType:
              enum:
                   -  Accountingfee
                   -  Adrfee
                   -  Advisoryfee
                   -  Airwaybillfee
                   -  Backendload
                   -  Brokeragefee
                   -  Clearanceandhandlingatorigin
                   -  Collectfreight
                   -  Commission
                   -  Correspondentbankcharge
                   -  Custodyfee
                   -  Dangerousgoodsfee
                   -  Dilutionlevy
                   -  Discount
                   -  Equalisation
                   -  Frontendload
                   -  Initial
                   -  Insurancepremium
                   -  Issuancecancellationfee
                   -  Issuancefee
                   -  Managementfee
                   -  Matchingfees
                   -  Miscellaneousfee
                   -  Other
                   -  Packaging
                   -  Partacquis
                   -  Penalty
                   -  Pickup
                   -  Postagecharge
                   -  Premium
                   -  Publicationfee
                   -  Regulatoryfee
                   -  Securitycharge
                   -  Serviceprovisionfee
                   -  Shippingcharge
                   -  Signatureservice
                   -  Specialconcessions
                   -  Speciallyagreedfrontendload
                   -  Storageatdestination
                   -  Storageatorigin
                   -  Switch
                   -  Transferfee
                   -  Transportcharges
                   -  Ucitscommission
              type: string
              description: ">-\r\n* `Accountingfee` \r\n* `Adrfee` \r\n* `Advisoryfee` \r\n* `Airwaybillfee` \r\n* `Backendload` \r\n* `Brokeragefee` \r\n* `Clearanceandhandlingatorigin` \r\n* `Collectfreight` \r\n* `Commission` \r\n* `Correspondentbankcharge` \r\n* `Custodyfee` \r\n* `Dangerousgoodsfee` \r\n* `Dilutionlevy` \r\n* `Discount` \r\n* `Equalisation` \r\n* `Frontendload` \r\n* `Initial` \r\n* `Insurancepremium` \r\n* `Issuancecancellationfee` \r\n* `Issuancefee` \r\n* `Managementfee` \r\n* `Matchingfees` \r\n* `Miscellaneousfee` \r\n* `Other` \r\n* `Packaging` \r\n* `Partacquis` \r\n* `Penalty` \r\n* `Pickup` \r\n* `Postagecharge` \r\n* `Premium` \r\n* `Publicationfee` \r\n* `Regulatoryfee` \r\n* `Securitycharge` \r\n* `Serviceprovisionfee` \r\n* `Shippingcharge` \r\n* `Signatureservice` \r\n* `Specialconcessions` \r\n* `Speciallyagreedfrontendload` \r\n* `Storageatdestination` \r\n* `Storageatorigin` \r\n* `Switch` \r\n* `Transferfee` \r\n* `Transportcharges` \r\n* `Ucitscommission` \r\n* "
           FeeAmount:
              $ref: '#/components/schemas/Amount'
              description: >-
                Base amount that would be applied when the service is
                requested. 

           FeeRate:
              $ref: '#/components/schemas/Rate'
              description: >-
                Rate used to calculate the amount of the adjustment, allowance,
                charge or fee. (ISO20022)
           FeeEffectivePeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period during which the fee is applicable. (ISO20022)
           FeeDueDate:
              $ref: '#/components/schemas/Datetime'
              description: >-
                Date on which the fee needs to be paid.

                 It is not nessessary a date and could be  expressed as a
                calander or formula or events that would be fulfiled. 
           FeePlan:
              $ref: '#/components/schemas/Feeplan'
              description: |
                An arranged FeeRatePlan
           FeeCreditDebitIndicator:
              enum:
                   -  Debit
                   -  Credit
              type: string
              description: ">-\r\n* `Debit` \r\n* `Credit` \r\n* "
           FeeReason:
              $ref: '#/components/schemas/Text'
              description: 'Reason for the amount adjustment (fee). '
           FeeDirection:
              enum:
                   -  Added
                   -  Substracted
              type: string
              description: ">-\r\n* `Added` \r\n* `Substracted` \r\n* "
           FeeBearerType:
              enum:
                   -  Bornebydebtor
                   -  Bornebycreditor
                   -  Shared
                   -  Followingservicelevel
              type: string
              description: ">-\r\n* `Bornebydebtor` \r\n* `Bornebycreditor` \r\n* `Shared` \r\n* `Followingservicelevel` \r\n* "
     Rate:
        type: object
        description: >-
          Rate used to calculate the amount of the adjustment, allowance, charge
          or fee. (ISO20022) 
        properties:
           RateValue:
              $ref: '#/components/schemas/Value'
              description: ''
           RateUnit:
              $ref: '#/components/schemas/Text'
              description: >-
                The unit of measure like Percentage or BPS


                Basis points (BPS) refers to a common unit of measure for
                interest rates and other percentages in finance.
           RatePeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           RateCapitalUnit:
              $ref: '#/components/schemas/Text'
              description: ''
     Feeplan:
        type: object
        description: |
          An arranged FeeRatePlan
           
        properties:
           FeePlanName:
              $ref: '#/components/schemas/Name'
              description: ''
           FeePlanType:
              enum:
                   -  StandardFeePlan
                   -  FinalFeePlan
              type: string
              description: ">-\r\n* `StandardFeePlan` \r\n* `FinalFeePlan` \r\n* "
           FeePlan:
              $ref: '#/components/schemas/Plan'
              description: ''
     Plan:
        type: object
        description: ' '
        properties:
           PlanGoal:
              $ref: '#/components/schemas/Goal'
              description: ''
           PlanBudget:
              $ref: '#/components/schemas/Budgetarrangement'
              description: >-
                An arrangement which is specifying an estimate of costs,
                revenues, and resources over a specified period, reflecting a
                reading of future financial conditions and goals. (adapted from
                Business Dictionary)
           PlannedAction:
              $ref: '#/components/schemas/Plannedaction'
              description: >-
                An action that is arranged in a plan for doing or achieving
                something 
           PlanType:
              $ref: '#/components/schemas/Plantype'
              description: A Classification value that specifies the type of Plan
           PlanOrganisation:
              type: string
              description: ''
              format: String
           PlanValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PlanDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Goal:
        type: object
        description: ' '
        properties:
           GoalType:
              type: string
              description: The type of goal
              format: String
           GoalDefinition:
              type: string
              description: >-
                A definition of the goal, including the intended actions
                required to achieve the goal
              format: String
           GoalOrganisation:
              type: string
              description: >-
                Identifies the interested parties and their roles and
                responsibilities for the specific actions supporting the
                achievement of the goal
              format: ''
           GoalResult:
              type: string
              description: >-
                Assessment of how the work is progressing towards achieving the
                goal, including projections of likely outcomes
              format: String
           Goal:
              type: string
              description: >-
                A goal represents a highlevel statement of intent, direction,
                or desired end state for an organization and its stakeholders.
                (ArchiMate 3.1)


                An observable and measurable end result having one or more
                objectives to be achieved within a more or less fixed timeframe.


                Read more:
                http://www.businessdictionary.com/definition/goal.html
              format: Class
     Budgetarrangement:
        type: object
        description: >-
          An arrangement which is specifying an estimate of costs, revenues, and
          resources over a specified period, reflecting a reading of future
          financial conditions and goals. (adapted from Business Dictionary) 
        properties:
           BudgetType:
              $ref: '#/components/schemas/Budgettype'
              description: A Classification value that specifies the type of Budget
           BudgetAmount:
              $ref: '#/components/schemas/Amount'
              description: ''
           BudgetArrangement:
              type: string
              description: >-
                An arrangement which is specifying an estimate of costs,
                revenues, and resources over a specified period, reflecting a
                reading of future financial conditions and goals. (adapted from
                Business Dictionary)


                Read more:
                http://www.businessdictionary.com/definition/budget.html



                A budget is an estimation of revenue and expenses over a
                specified future period of time and is utilized by governments,
                businesses, and individuals.

                A budget is basically a financial plan for a defined period,
                normally a year that is known to greatly enhance the success of
                any financial undertaking. (Investopedia)


                https://www.investopedia.com/terms/b/budget.asp
              format: Class
     Budgettype:
        type: object
        description: 'A Classification value that specifies the type of Budget '
        properties:
           BudgetTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           BudgetType:
              enum:
                   -  OperatingBudget
                   -  FinancialBudget
                   -  ResourceBudget
              type: string
              description: ">-\r\n* `OperatingBudget` \r\n* `FinancialBudget` \r\n* `ResourceBudget` \r\n* "
     Plannedaction:
        type: object
        description: >-
          An action that is arranged in a plan for doing or achieving
          something  
        properties:
           PlannedAction:
              type: string
              description: >-
                An action that is arranged in a plan for doing or achieving
                something 
              format: Class
     Plantype:
        type: object
        description: 'A Classification value that specifies the type of Plan '
        properties:
           PlanTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           PlanType:
              enum:
                   -  AdministrativePlan
                   -  ManagementPlan
                   -  StratgyPlan
                   -  FinancialPlan
              type: string
              description: ">-\r\n* `AdministrativePlan` \r\n* `ManagementPlan` \r\n* `StratgyPlan` \r\n* `FinancialPlan` \r\n* "
           Plantype:
              type: string
              description: 'Data type specifies the classification of a Plan '
              format: DataType
     InitiateDirectDebitsServiceFacilityResponse:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
           StartDate:
              $ref: '#/components/schemas/Datetime'
           EndDate:
              $ref: '#/components/schemas/Datetime'
           Reason:
              $ref: '#/components/schemas/Text'
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
           NASOName:
              $ref: '#/components/schemas/Name'
     InitiateDirectDebitsServiceFacility:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
           StartDate:
              $ref: '#/components/schemas/Datetime'
           EndDate:
              $ref: '#/components/schemas/Datetime'
           Reason:
              $ref: '#/components/schemas/Text'
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
           NASOName:
              $ref: '#/components/schemas/Name'
     RetrieveDirectDebitsServiceFacilityRequest:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           StartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           EndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Reason:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
              description: ''
           NASOName:
              $ref: '#/components/schemas/Name'
              description: ''
     RetrieveDirectDebitsServiceFacilityResponse:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
           StartDate:
              $ref: '#/components/schemas/Datetime'
           EndDate:
              $ref: '#/components/schemas/Datetime'
           Reason:
              $ref: '#/components/schemas/Text'
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
           NASOName:
              $ref: '#/components/schemas/Name'
     RetrieveDirectDebitsServiceFacility:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
           StartDate:
              $ref: '#/components/schemas/Datetime'
           EndDate:
              $ref: '#/components/schemas/Datetime'
           Reason:
              $ref: '#/components/schemas/Text'
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
           NASOName:
              $ref: '#/components/schemas/Name'
     UpdateDirectDebitsServiceFacilityRequest:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           StartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           EndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Reason:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
              description: ''
           NASOName:
              $ref: '#/components/schemas/Name'
              description: ''
     UpdateDirectDebitsServiceFacilityResponse:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
           StartDate:
              $ref: '#/components/schemas/Datetime'
           EndDate:
              $ref: '#/components/schemas/Datetime'
           Reason:
              $ref: '#/components/schemas/Text'
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
           NASOName:
              $ref: '#/components/schemas/Name'
     UpdateDirectDebitsServiceFacility:
        type: object
        description: ''
        properties:
           Identifier:
              $ref: '#/components/schemas/Identifier'
           CreditorIdentifier:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CreditorAccountReference:
              $ref: '#/components/schemas/Account'
           StartDate:
              $ref: '#/components/schemas/Datetime'
           EndDate:
              $ref: '#/components/schemas/Datetime'
           Reason:
              $ref: '#/components/schemas/Text'
           Periodicity:
              enum:
                   -  Annual
                   -  Monthly
                   -  Quarterly
                   -  Weekly
                   -  Daily
                   -  Adhoc
                   -  Fortnightly
                   -  Hourly
                   -  HalfYearly
              type: string
              description: ">-\r\n* `Annual` \r\n* `Monthly` \r\n* `Quarterly` \r\n* `Weekly` \r\n* `Daily` \r\n* `Adhoc` \r\n* `Fortnightly` \r\n* `Hourly` \r\n* `HalfYearly` \r\n* "
           CurrencyReference:
              $ref: '#/components/schemas/Currencycode'
           SalesProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           FeeDetails:
              $ref: '#/components/schemas/FeeArrangement'
           NASOName:
              $ref: '#/components/schemas/Name'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     InitiateDirectDebitsServiceFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateDirectDebitsServiceFacilityRequest'
        required: true
     RetrieveDirectDebitsServiceFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDirectDebitsServiceFacilityRequest'
        required: true
     UpdateDirectDebitsServiceFacilityRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDirectDebitsServiceFacilityRequest'
        required: true
  parameters:
     directdebitsservicefacilityid:
        name: directdebitsservicefacilityid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     InitiateDirectDebitsServiceFacilityResponse:
        description: DirectDebitsServiceFacilityInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateDirectDebitsServiceFacilityResponse'
     RetrieveDirectDebitsServiceFacilityResponse:
        description: DirectDebitsServiceFacilityRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDirectDebitsServiceFacilityResponse'
     UpdateDirectDebitsServiceFacilityResponse:
        description: DirectDebitsServiceFacilityUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDirectDebitsServiceFacilityResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
