openapi: 3.0.1
info:
  title: Customer Product and Service Directory
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This Service Domain maintains
    the most important details of all the products and services that a customer
    has acquired from the bank.
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/CustomerProductandServiceDirectory
paths:
   '/CustomerProductAndServiceDirectoryEntry/{customerproductandservicedirectoryentryid}/Control':
      put:
        tags:
           - CR - CustomerProductAndServiceDirectoryEntry
        summary: Control Customer Product And Service Directory Entry
        description: Control Customer Product And Service Directory Entry
        operationId: CustomerProductAndServiceDirectoryEntry/Control
        parameters:
           - $ref: '#/components/parameters/customerproductandservicedirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ControlCustomerProductAndServiceDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CustomerProductAndServiceDirectoryEntry/{customerproductandservicedirectoryentryid}/Execute':
      put:
        tags:
           - CR - CustomerProductAndServiceDirectoryEntry
        summary: Execute Customer Product And Service Directory Entry
        description: Execute Customer Product And Service Directory Entry
        operationId: CustomerProductAndServiceDirectoryEntry/Execute
        parameters:
           - $ref: '#/components/parameters/customerproductandservicedirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExecuteCustomerProductAndServiceDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CustomerProductAndServiceDirectoryEntry/{customerproductandservicedirectoryentryid}/Notify':
      get:
        tags:
           - CR - CustomerProductAndServiceDirectoryEntry
        summary: Notify Customer Product And Service Directory Entry
        description: Notify Customer Product And Service Directory Entry
        operationId: CustomerProductAndServiceDirectoryEntry/Notify
        parameters:
           - $ref: '#/components/parameters/customerproductandservicedirectoryentryid'
        responses:
          '200':
            $ref: >-
              #/components/responses/NotifyCustomerProductAndServiceDirectoryEntryResponse
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CustomerProductAndServiceDirectoryEntry/{customerproductandservicedirectoryentryid}/Register':
      post:
        tags:
           - CR - CustomerProductAndServiceDirectoryEntry
        summary: Register Customer Product And Service Directory Entry
        description: Register Customer Product And Service Directory Entry
        operationId: CustomerProductAndServiceDirectoryEntry/Register
        parameters:
           - $ref: '#/components/parameters/customerproductandservicedirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/RegisterCustomerProductAndServiceDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CustomerProductAndServiceDirectoryEntry/{customerproductandservicedirectoryentryid}/Request':
      put:
        tags:
           - CR - CustomerProductAndServiceDirectoryEntry
        summary: Request Customer Product And Service Directory Entry
        description: Request Customer Product And Service Directory Entry
        operationId: CustomerProductAndServiceDirectoryEntry/Request
        parameters:
           - $ref: '#/components/parameters/customerproductandservicedirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/RequestCustomerProductAndServiceDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CustomerProductAndServiceDirectoryEntry/{customerproductandservicedirectoryentryid}/Update':
      put:
        tags:
           - CR - CustomerProductAndServiceDirectoryEntry
        summary: Update Customer Product And Service Directory Entry
        description: Update Customer Product And Service Directory Entry
        operationId: CustomerProductAndServiceDirectoryEntry/Update
        parameters:
           - $ref: '#/components/parameters/customerproductandservicedirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/UpdateCustomerProductAndServiceDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Product/{productid}/Execute':
      put:
        tags:
           - BQ - Product
        summary: Execute Inforce Product property
        description: Execute Inforce Product property
        operationId: Product/Execute
        parameters:
           - $ref: '#/components/parameters/productid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteProductRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Service/{serviceid}/Execute':
      put:
        tags:
           - BQ - Service
        summary: Execute Inforce Service property
        description: Execute Inforce Service property
        operationId: Service/Execute
        parameters:
           - $ref: '#/components/parameters/serviceid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteServiceRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Product/{productid}/Notify':
      get:
        tags:
           - BQ - Product
        summary: Notify Inforce Product property
        description: Notify Inforce Product property
        operationId: Product/Notify
        parameters:
           - $ref: '#/components/parameters/productid'
        responses:
          '200':
            $ref: '#/components/responses/NotifyProductResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Service/{serviceid}/Notify':
      get:
        tags:
           - BQ - Service
        summary: Notify Inforce Service property
        description: Notify Inforce Service property
        operationId: Service/Notify
        parameters:
           - $ref: '#/components/parameters/serviceid'
        responses:
          '200':
            $ref: '#/components/responses/NotifyServiceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Product/{productid}/Register':
      post:
        tags:
           - BQ - Product
        summary: Register Inforce Product property
        description: Register Inforce Product property
        operationId: Product/Register
        parameters:
           - $ref: '#/components/parameters/productid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterProductRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Service/{serviceid}/Register':
      post:
        tags:
           - BQ - Service
        summary: Register Inforce Service property
        description: Register Inforce Service property
        operationId: Service/Register
        parameters:
           - $ref: '#/components/parameters/serviceid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterServiceRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Product/{productid}/Request':
      put:
        tags:
           - BQ - Product
        summary: Request Inforce Product property
        description: Request Inforce Product property
        operationId: Product/Request
        parameters:
           - $ref: '#/components/parameters/productid'
        requestBody:
          $ref: '#/components/requestBodies/RequestProductRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Service/{serviceid}/Request':
      put:
        tags:
           - BQ - Service
        summary: Request Inforce Service property
        description: Request Inforce Service property
        operationId: Service/Request
        parameters:
           - $ref: '#/components/parameters/serviceid'
        requestBody:
          $ref: '#/components/requestBodies/RequestServiceRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Product/{productid}/Retrieve':
      get:
        tags:
           - BQ - Product
        summary: Retrieve Inforce Product property
        description: Retrieve Inforce Product property
        operationId: Product/Retrieve
        parameters:
           - $ref: '#/components/parameters/productid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveProductResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Service/{serviceid}/Retrieve':
      get:
        tags:
           - BQ - Service
        summary: Retrieve Inforce Service property
        description: Retrieve Inforce Service property
        operationId: Service/Retrieve
        parameters:
           - $ref: '#/components/parameters/serviceid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveServiceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Product/{productid}/Update':
      put:
        tags:
           - BQ - Product
        summary: Update Inforce Product property
        description: Update Inforce Product property
        operationId: Product/Update
        parameters:
           - $ref: '#/components/parameters/productid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateProductRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Service/{serviceid}/Update':
      put:
        tags:
           - BQ - Service
        summary: Update Inforce Service property
        description: Update Inforce Service property
        operationId: Service/Update
        parameters:
           - $ref: '#/components/parameters/serviceid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateServiceRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     ControlCustomerProductAndServiceDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
              description: "\r\n"
     Text:
        type: object
        description: "\r\n - "
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Schedule:
        type: object
        description: "\r\n - "
        properties:
           ScheduleType:
              type: string
              description: ''
              format: String
     Status:
        type: object
        description: ' Status |Status  (https://www.iso20022.org/standardsrepository/type/Status)|Standard|ISO20022 BM ()'
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Datetime:
        type: object
        description: 'Date and time at which the status was assigned. '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Datetimeperiod:
        type: object
        description: 'Period of time during which the status is valid. '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Involvedparty:
        type: object
        description: >-
          Party who plays a  specific role in the context of assigning a
          status. 
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Log:
        type: object
        description: "\r\n - "
        properties:
           LogType:
              type: string
              description: ''
              format: String
           LogPeriod:
              type: string
              description: ''
              format: String
           LogDate:
              type: string
              description: Key dates associated with the log (e.g. start time).
              format: String
           LogIdentification:
              type: string
              description: ''
              format: String
     ProductAgreement:
        type: object
        description: "\r\n - "
        properties:
           Type:
              enum:
                   -  CurrentAccountAgreement
                   -  SavingsAccountAgreement
                   -  BrokeredProductAgreement
                   -  ConsumerLoanAgreement
                   -  MortgageLoanAgreement
                   -  DirectDebitServiceAgreement
              type: string
              description: ">-\r\n* `CurrentAccountAgreement` \r\n* `SavingsAccountAgreement` \r\n* `BrokeredProductAgreement` \r\n* `ConsumerLoanAgreement` \r\n* `MortgageLoanAgreement` \r\n* `DirectDebitServiceAgreement` \r\n* "
           ProductReference:
              $ref: '#/components/schemas/Bankingproduct'
              description: ''
           AgreementReference:
              $ref: '#/components/schemas/Agreement'
              description: ''
     Bankingproduct:
        type: object
        description: ' '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Agreement:
        type: object
        description: ' '
        properties:
           AgreementSignedDate:
              $ref: '#/components/schemas/Date'
              description: >-
                Date on which the agreement was signed by all parties.
                (ISO20022)
           AgreementType:
              enum:
                   -  CustomerAgreement
                   -  SupplierAgreement
                   -  BrokerAgreement
                   -  SalesAgreement
                   -  PurchaseAgreement
                   -  MaintenanceAgreement
                   -  ProductAgreement
                   -  ProductSalesAgreement
                   -  ResourceAgreement
              type: string
              description: ">-\r\n* `CustomerAgreement` \r\n* `SupplierAgreement` \r\n* `BrokerAgreement` \r\n* `SalesAgreement` \r\n* `PurchaseAgreement` \r\n* `MaintenanceAgreement` \r\n* `ProductAgreement` \r\n* `ProductSalesAgreement` \r\n* `ResourceAgreement` \r\n* "
           AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: |
                Period during which the agreement is valid
           AgreementVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
              description: >-
                A characteristic of agreement which refers to the
                LifecycleStatus of agreement (e.g., potential, offered,
                confirmed, completed, signed, terminated).
           AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                The identifier of agreement like Agreement Number, Contract
                Number, Contract Registration Number, etc. 
           AgreementDate:
              $ref: '#/components/schemas/Datetime'
              description: >-
                A characteristic of agreement which refers to 1) LifecycleDate
                of agreement (e.g., SignedDate, TerminatedDate, FulfilledDate)
                OR 2) ArrangedDate of agreement (e.g., StartingDate, EndingDate,
                ValidityPeriod, EffectiveDate).
           AgreementDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Date:
        type: object
        description: 'Date on which the agreement was signed by all parties. (ISO20022) '
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Agreementlifecyclestatus:
        type: object
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
           AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AgreementLifecycleStatusType:
              enum:
                   -  Offered
                   -  Confirmed
                   -  Completed
                   -  Signed
                   -  Terminated
                   -  Rejected
              type: string
              description: ">-\r\n* `Offered` \r\n* `Confirmed` \r\n* `Completed` \r\n* `Signed` \r\n* `Terminated` \r\n* `Rejected` \r\n* "
     ServiceAgreement:
        type: object
        description: "\r\n - "
        properties:
           Type:
              $ref: '#/components/schemas/Text'
              description: ''
           ServiceReference:
              $ref: '#/components/schemas/Service'
              description: ''
           AgreementReference:
              $ref: '#/components/schemas/Agreement'
              description: ''
     Service:
        type: object
        description: ' '
        properties:
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: 'The name of service. '
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of service
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: The identifier of service.
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                A characteristic of service which refers to the lifecycle of
                service (e.g., initiated, active, deactive, etc.) 
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: >-
                A characteristic of service which refers 1) mainly to the
                function or condition of service. 2) to nonfunctional features
                like quality and security
     Feature:
        type: object
        description: >-
          A characteristic of service which refers 1) mainly to the function or
          condition of service. 2) to nonfunctional features like quality and
          security 
        properties:
           FeatureType:
              $ref: '#/components/schemas/Text'
              description: ''
           FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           FeatureName:
              $ref: '#/components/schemas/Name'
              description: ''
           FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           FeatureDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     ControlCustomerProductAndServiceDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     ControlCustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     ExecuteCustomerProductAndServiceDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
              description: "\r\n"
     ExecuteCustomerProductAndServiceDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     ExecuteCustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     NotifyCustomerProductAndServiceDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
              description: "\r\n"
     NotifyCustomerProductAndServiceDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     NotifyCustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RegisterCustomerProductAndServiceDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
              description: "\r\n"
     RegisterCustomerProductAndServiceDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RegisterCustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RequestCustomerProductAndServiceDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
              description: "\r\n"
     RequestCustomerProductAndServiceDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RequestCustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     UpdateCustomerProductAndServiceDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
              description: "\r\n"
     UpdateCustomerProductAndServiceDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: ''
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     UpdateCustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     ExecuteProductRequest:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: "\r\n"
           ProductName:
              $ref: '#/components/schemas/Name'
              description: ''
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: "\r\n"
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
     ProductFeature:
        type: object
        description: "\r\n - "
        properties:
           ProductFeatureType:
              $ref: '#/components/schemas/Productfeaturetype'
              description: The type or category of product/service features
           ProductFeatureSpecification:
              $ref: '#/components/schemas/Text'
              description: ''
     Productfeaturetype:
        type: object
        description: 'The type or category of product/service features '
        properties:
           ProductFeatureTypeValues:
              enum:
                   -  Bankingservice
                   -  Administrationservice
                   -  Accessservice
                   -  Pricefeature
              type: string
              description: ">-\r\n* `Bankingservice` \r\n* `Administrationservice` \r\n* `Accessservice` \r\n* `Pricefeature` \r\n* "
     ExecuteProductResponse:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
           ProductName:
              $ref: '#/components/schemas/Name'
           ProductPriority:
              $ref: '#/components/schemas/Text'
           ProductDescription:
              $ref: '#/components/schemas/Text'
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
     ExecuteProduct:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     ExecuteServiceRequest:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: ''
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
     ExecuteServiceResponse:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
           ServiceDescription:
              $ref: '#/components/schemas/Text'
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
     ExecuteService:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     NotifyProductRequest:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: "\r\n"
           ProductName:
              $ref: '#/components/schemas/Name'
              description: ''
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: "\r\n"
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
     NotifyProductResponse:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
           ProductName:
              $ref: '#/components/schemas/Name'
           ProductPriority:
              $ref: '#/components/schemas/Text'
           ProductDescription:
              $ref: '#/components/schemas/Text'
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
     NotifyProduct:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     NotifyServiceRequest:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: ''
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
     NotifyServiceResponse:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
           ServiceDescription:
              $ref: '#/components/schemas/Text'
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
     NotifyService:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RegisterProductRequest:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: "\r\n"
           ProductName:
              $ref: '#/components/schemas/Name'
              description: ''
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: "\r\n"
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
     RegisterProductResponse:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
           ProductName:
              $ref: '#/components/schemas/Name'
           ProductPriority:
              $ref: '#/components/schemas/Text'
           ProductDescription:
              $ref: '#/components/schemas/Text'
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
     RegisterProduct:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RegisterServiceRequest:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: ''
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
     RegisterServiceResponse:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
           ServiceDescription:
              $ref: '#/components/schemas/Text'
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
     RegisterService:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RequestProductRequest:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: "\r\n"
           ProductName:
              $ref: '#/components/schemas/Name'
              description: ''
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: "\r\n"
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
     RequestProductResponse:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
           ProductName:
              $ref: '#/components/schemas/Name'
           ProductPriority:
              $ref: '#/components/schemas/Text'
           ProductDescription:
              $ref: '#/components/schemas/Text'
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
     RequestProduct:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RequestServiceRequest:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: ''
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
     RequestServiceResponse:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
           ServiceDescription:
              $ref: '#/components/schemas/Text'
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
     RequestService:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RetrieveProductRequest:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: "\r\n"
           ProductName:
              $ref: '#/components/schemas/Name'
              description: ''
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: "\r\n"
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
     RetrieveProductResponse:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
           ProductName:
              $ref: '#/components/schemas/Name'
           ProductPriority:
              $ref: '#/components/schemas/Text'
           ProductDescription:
              $ref: '#/components/schemas/Text'
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
     RetrieveProduct:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     RetrieveServiceRequest:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: ''
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
     RetrieveServiceResponse:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
           ServiceDescription:
              $ref: '#/components/schemas/Text'
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
     RetrieveService:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     UpdateProductRequest:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: "\r\n"
           ProductName:
              $ref: '#/components/schemas/Name'
              description: ''
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: "\r\n"
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
     UpdateProductResponse:
        type: object
        description: ''
        properties:
           ProductReference:
              $ref: '#/components/schemas/Identifier'
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
           ProductName:
              $ref: '#/components/schemas/Name'
           ProductPriority:
              $ref: '#/components/schemas/Text'
           ProductDescription:
              $ref: '#/components/schemas/Text'
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
     UpdateProduct:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     UpdateServiceRequest:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: ''
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
     UpdateServiceResponse:
        type: object
        description: ''
        properties:
           ServiceReference:
              $ref: '#/components/schemas/Identifier'
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
           ServiceDescription:
              $ref: '#/components/schemas/Text'
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceName:
              $ref: '#/components/schemas/Name'
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
     UpdateService:
        type: object
        description: ''
        properties:
           CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
           CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              description: The version of Customer Products And Services Directory Entry
              format: Number
           CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
           CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
           CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
           CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
           ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
           ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     ControlCustomerProductAndServiceDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ControlCustomerProductAndServiceDirectoryEntryRequest
        required: true
     ExecuteCustomerProductAndServiceDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecuteCustomerProductAndServiceDirectoryEntryRequest
        required: true
     NotifyCustomerProductAndServiceDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/NotifyCustomerProductAndServiceDirectoryEntryRequest
        required: true
     RegisterCustomerProductAndServiceDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RegisterCustomerProductAndServiceDirectoryEntryRequest
        required: true
     RequestCustomerProductAndServiceDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestCustomerProductAndServiceDirectoryEntryRequest
        required: true
     UpdateCustomerProductAndServiceDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdateCustomerProductAndServiceDirectoryEntryRequest
        required: true
     ExecuteProductRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteProductRequest'
        required: true
     ExecuteServiceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteServiceRequest'
        required: true
     NotifyProductRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyProductRequest'
        required: true
     NotifyServiceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyServiceRequest'
        required: true
     RegisterProductRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterProductRequest'
        required: true
     RegisterServiceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterServiceRequest'
        required: true
     RequestProductRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestProductRequest'
        required: true
     RequestServiceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestServiceRequest'
        required: true
     RetrieveProductRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductRequest'
        required: true
     RetrieveServiceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServiceRequest'
        required: true
     UpdateProductRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
     UpdateServiceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServiceRequest'
        required: true
  parameters:
     customerproductandservicedirectoryentryid:
        name: customerproductandservicedirectoryentryid
        in: path
        required: true
        style: simple
        schema:
          type: string
     productid:
        name: productid
        in: path
        required: true
        style: simple
        schema:
          type: string
     serviceid:
        name: serviceid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     ControlCustomerProductAndServiceDirectoryEntryResponse:
        description: CustomerProductAndServiceDirectoryEntryControl
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ControlCustomerProductAndServiceDirectoryEntryResponse
     ExecuteCustomerProductAndServiceDirectoryEntryResponse:
        description: CustomerProductAndServiceDirectoryEntryExecute
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecuteCustomerProductAndServiceDirectoryEntryResponse
     NotifyCustomerProductAndServiceDirectoryEntryResponse:
        description: CustomerProductAndServiceDirectoryEntryNotify
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/NotifyCustomerProductAndServiceDirectoryEntryResponse
     RegisterCustomerProductAndServiceDirectoryEntryResponse:
        description: CustomerProductAndServiceDirectoryEntryRegister
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RegisterCustomerProductAndServiceDirectoryEntryResponse
     RequestCustomerProductAndServiceDirectoryEntryResponse:
        description: CustomerProductAndServiceDirectoryEntryRequest
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestCustomerProductAndServiceDirectoryEntryResponse
     UpdateCustomerProductAndServiceDirectoryEntryResponse:
        description: CustomerProductAndServiceDirectoryEntryUpdate
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdateCustomerProductAndServiceDirectoryEntryResponse
     ExecuteProductResponse:
        description: ProductExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteProductResponse'
     ExecuteServiceResponse:
        description: ServiceExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteServiceResponse'
     NotifyProductResponse:
        description: ProductNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyProductResponse'
     NotifyServiceResponse:
        description: ServiceNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyServiceResponse'
     RegisterProductResponse:
        description: ProductRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterProductResponse'
     RegisterServiceResponse:
        description: ServiceRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterServiceResponse'
     RequestProductResponse:
        description: ProductRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestProductResponse'
     RequestServiceResponse:
        description: ServiceRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestServiceResponse'
     RetrieveProductResponse:
        description: ProductRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductResponse'
     RetrieveServiceResponse:
        description: ServiceRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServiceResponse'
     UpdateProductResponse:
        description: ProductUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductResponse'
     UpdateServiceResponse:
        description: ServiceUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServiceResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
