openapi: 3.0.1
info:
  title: Card eCommerce Gateway
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This service domain
    orchestrates the processing of ecommerce transactions for authentication,
    authorization and capture of the financial transactions.
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/CardeCommerceGateway
paths:
   '/CardTransaction/{cardtransactionid}/Initiate':
      post:
        tags:
           - BQ - CardTransaction
        summary: InBQ Initiate a card transaction (initiated at merchant location)
        description: InBQ Initiate a card transaction (initiated at merchant location)
        operationId: CardTransaction/Initiate
        parameters:
           - $ref: '#/components/parameters/cardtransactionid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateCardTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CardTransaction/{cardtransactionid}/Update':
      put:
        tags:
           - BQ - CardTransaction
        summary: UpBQ Update details of a card transaction
        description: UpBQ Update details of a card transaction
        operationId: CardTransaction/Update
        parameters:
           - $ref: '#/components/parameters/cardtransactionid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateCardTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CardTransaction/{cardtransactionid}/Retrieve':
      get:
        tags:
           - BQ - CardTransaction
        summary: ReBQ Retrieve details about a card transaction
        description: ReBQ Retrieve details about a card transaction
        operationId: CardTransaction/Retrieve
        parameters:
           - $ref: '#/components/parameters/cardtransactionid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveCardTransactionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TransactionBatch/{transactionbatchid}/Update':
      put:
        tags:
           - BQ - TransactionBatch
        summary: UpBQ Update details of a batch of card transactions
        description: UpBQ Update details of a batch of card transactions
        operationId: TransactionBatch/Update
        parameters:
           - $ref: '#/components/parameters/transactionbatchid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateTransactionBatchRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TransactionBatch/{transactionbatchid}/Initiate':
      post:
        tags:
           - BQ - TransactionBatch
        summary: >-
          InBQ Initiate a batch of card transaction (initiated at merchant
          location)
        description: >-
          InBQ Initiate a batch of card transaction (initiated at merchant
          location)
        operationId: TransactionBatch/Initiate
        parameters:
           - $ref: '#/components/parameters/transactionbatchid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateTransactionBatchRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TransactionBatch/{transactionbatchid}/Retrieve':
      get:
        tags:
           - BQ - TransactionBatch
        summary: ReBQ Retrieve details about a batch of card transactions
        description: ReBQ Retrieve details about a batch of card transactions
        operationId: TransactionBatch/Retrieve
        parameters:
           - $ref: '#/components/parameters/transactionbatchid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveTransactionBatchResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CardAuthentication/{cardauthenticationid}/Initiate':
      post:
        tags:
           - BQ - CardAuthentication
        summary: InBQ Initiate card authentication (routed to issuing bank)
        description: InBQ Initiate card authentication (routed to issuing bank)
        operationId: CardAuthentication/Initiate
        parameters:
           - $ref: '#/components/parameters/cardauthenticationid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateCardAuthenticationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CardAuthentication/{cardauthenticationid}/Update':
      put:
        tags:
           - BQ - CardAuthentication
        summary: UpBQ Update details of a card transaction used in authentication
        description: UpBQ Update details of a card transaction used in authentication
        operationId: CardAuthentication/Update
        parameters:
           - $ref: '#/components/parameters/cardauthenticationid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateCardAuthenticationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/CardAuthentication/{cardauthenticationid}/Retrieve':
      get:
        tags:
           - BQ - CardAuthentication
        summary: ReBQ Retrieve details about a card authentication
        description: ReBQ Retrieve details about a card authentication
        operationId: CardAuthentication/Retrieve
        parameters:
           - $ref: '#/components/parameters/cardauthenticationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveCardAuthenticationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TransactionAuthorization/{transactionauthorizationid}/Initiate':
      post:
        tags:
           - BQ - TransactionAuthorization
        summary: InBQ Initiate card transaction authorization (routed to issuing bank)
        description: InBQ Initiate card transaction authorization (routed to issuing bank)
        operationId: TransactionAuthorization/Initiate
        parameters:
           - $ref: '#/components/parameters/transactionauthorizationid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateTransactionAuthorizationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TransactionAuthorization/{transactionauthorizationid}/Update':
      put:
        tags:
           - BQ - TransactionAuthorization
        summary: UpBQ Update details of a card transaction used for authorization
        description: UpBQ Update details of a card transaction used for authorization
        operationId: TransactionAuthorization/Update
        parameters:
           - $ref: '#/components/parameters/transactionauthorizationid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateTransactionAuthorizationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TransactionAuthorization/{transactionauthorizationid}/Retrieve':
      get:
        tags:
           - BQ - TransactionAuthorization
        summary: ReBQ Retrieve details about a card transaction authorization
        description: ReBQ Retrieve details about a card transaction authorization
        operationId: TransactionAuthorization/Retrieve
        parameters:
           - $ref: '#/components/parameters/transactionauthorizationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveTransactionAuthorizationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     InitiateCardTransactionRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
     BankingProduct:
        type: object
        description: >-
          Reference to the card product identifier/number Product

          |Product
          (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
          BM ()
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Text:
        type: object
        description: ' '
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Status:
        type: object
        description: ' '
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
     Date:
        type: object
        description: >-
          As detailed on the plastic/token ISODate|ISODate
          (https://www.iso20022.org/standardsrepository/type/ISODate)|Standard|ISO20022
          BM ()
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Transactiontype:
        type: object
        description: The type of transaction (purchase, cash advance, etc.) - 
        properties:
           TransactionTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           TransactionType:
              enum:
                   -  FinancialTransaction
                   -  BusinessTransaction
                   -  BankingTransaction
                   -  AccountingTransaction
                   -  BookingTransaction
                   -  AllocationTransaction
                   -  DeliveryTransaction
                   -  ProductionTransaction
              type: string
              description: ">-\r\n* `FinancialTransaction` \r\n* `BusinessTransaction` \r\n* `BankingTransaction` \r\n* `AccountingTransaction` \r\n* `BookingTransaction` \r\n* `AllocationTransaction` \r\n* `DeliveryTransaction` \r\n* `ProductionTransaction` \r\n* "
     Currencycode:
        type: object
        description: >-
          The currency that the transaction is made in CurrencyCode|CurrencyCode
          (https://www.iso20022.org/standardsrepository/type/CurrencyCode)|Standard|ISO20022
          BM ()
        properties:
           Currencycode:
              type: string
              description: >-
                A code identifying a currency according to ISO4217.

                A currency is a system of money in general use in a particular
                country.


                Code allocated to a currency, by a maintenance agency, under an
                international identification scheme as described in the latest
                edition of the international standard ISO 4217 "Codes for the
                representation of currencies and funds". Valid currency codes
                are registered with the ISO 4217 Maintenance Agency, and consist
                of three contiguous letters. (ISO20022)

              format: DataType
     UpdateCardTransactionRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
     UpdateCardTransactionResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
     RetrieveCardTransactionResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
     UpdateTransactionBatchRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
           eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: >-
                Significant dates and times associated with the batch
                transaction
           eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: String
     InitiateTransactionBatchRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
           eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: >-
                Significant dates and times associated with the batch
                transaction
           eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: String
     InitiateTransactionBatchResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: String
     RetrieveTransactionBatchResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceBatchTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceBatchTransactionRecord:
              type: string
              description: Batch record contains multiple Card Transactions
              format: String
     InitiateCardAuthenticationRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authenticated 
                note all fields may not be required
              format: Object
           eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: String
     UpdateCardAuthenticationRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authenticated 
                note all fields may not be required
              format: Object
           eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: String
     UpdateCardAuthenticationResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authenticated 
                note all fields may not be required
              format: Object
           eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: String
     RetrieveCardAuthenticationResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authenticated 
                note all fields may not be required
              format: Object
           eCommerceTransactionAuthenticationResponse:
              type: string
              description: The result of the card authentication request
              format: String
     InitiateTransactionAuthorizationRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authorized  note
                all fields may not be required
              format: Object
           eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: String
     UpdateTransactionAuthorizationRequest:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
              description: Reference to the card product identifier/number
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: The card holder as detailed on the plastic
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
              description: As detailed on the plastic/token
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
              description: The type of transaction (purchase, cash advance, etc.)
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: The currency that the transaction is made in
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
              description: Significant dates and times associated with the transaction
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authorized  note
                all fields may not be required
              format: Object
           eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: String
     UpdateTransactionAuthorizationResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authorized  note
                all fields may not be required
              format: Object
           eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: String
     RetrieveTransactionAuthorizationResponse:
        type: object
        description: ''
        properties:
           ProductInstanceReference:
              $ref: '#/components/schemas/BankingProduct'
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           Cardexpirationdate:
              $ref: '#/components/schemas/Date'
           CardCVV:
              type: string
              description: As detailed on the plastic/token
              format: String
           CardIssuingBankReference:
              type: string
              description: Refers to the card holder's issuing bank
              format: Object
           MerchantAcquiringBankReference:
              type: string
              description: Refers to the merchant's acquiring bank
              format: Object
           eCommerceTransactionType:
              $ref: '#/components/schemas/Transactiontype'
           eCommerceTransactionCurrency:
              $ref: '#/components/schemas/Currencycode'
           eCommerceTransactionAmountType:
              type: string
              description: >-
                Type of amount (e.g. original amount, billing currency amount,
                conversion rate, FX Markup)
              format: String
           eCommerceTransactionMerchantReference:
              type: string
              description: Refers to the merchant initiating the transaction
              format: Object
           eCommerceTransactionLocationReference:
              type: string
              description: Refers to the point of sale location
              format: Object
           eCommerceTransactionProductandServiceReference:
              type: string
              description: >-
                Details of the transaction (e.g. purchased service/product,
                purpose)
              format: Object
           eCommerceTransactionDateTime:
              $ref: '#/components/schemas/Date'
           eCommerceTransactionInstanceReference:
              type: string
              description: >-
                Refers to the card transaction that is being authorized  note
                all fields may not be required
              format: Object
           eCommerceTransactionAuthorizationResponse:
              type: string
              description: The result of the transaction authorization request
              format: String
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     InitiateCardTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateCardTransactionRequest'
        required: true
     UpdateCardTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateCardTransactionRequest'
        required: true
     RetrieveCardTransactionRequest:
        content:
          'application/json:':
            schema:
              type: string
        required: true
     UpdateTransactionBatchRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTransactionBatchRequest'
        required: true
     InitiateTransactionBatchRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateTransactionBatchRequest'
        required: true
     RetrieveTransactionBatchRequest:
        content:
          'application/json:':
            schema:
              type: string
        required: true
     InitiateCardAuthenticationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateCardAuthenticationRequest'
        required: true
     UpdateCardAuthenticationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateCardAuthenticationRequest'
        required: true
     RetrieveCardAuthenticationRequest:
        content:
          'application/json:':
            schema:
              type: string
        required: true
     InitiateTransactionAuthorizationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateTransactionAuthorizationRequest'
        required: true
     UpdateTransactionAuthorizationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTransactionAuthorizationRequest'
        required: true
     RetrieveTransactionAuthorizationRequest:
        content:
          'application/json:':
            schema:
              type: string
        required: true
  parameters:
     cardtransactionid:
        name: cardtransactionid
        in: path
        required: true
        style: simple
        schema:
          type: string
     transactionbatchid:
        name: transactionbatchid
        in: path
        required: true
        style: simple
        schema:
          type: string
     cardauthenticationid:
        name: cardauthenticationid
        in: path
        required: true
        style: simple
        schema:
          type: string
     transactionauthorizationid:
        name: transactionauthorizationid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     InitiateCardTransactionResponse:
        description: CardTransactionInitiate
        content:
          'application/json:':
            schema:
              type: string
     UpdateCardTransactionResponse:
        description: CardTransactionUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateCardTransactionResponse'
     RetrieveCardTransactionResponse:
        description: CardTransactionRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveCardTransactionResponse'
     UpdateTransactionBatchResponse:
        description: TransactionBatchUpdate
        content:
          'application/json:':
            schema:
              type: string
     InitiateTransactionBatchResponse:
        description: TransactionBatchInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateTransactionBatchResponse'
     RetrieveTransactionBatchResponse:
        description: TransactionBatchRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveTransactionBatchResponse'
     InitiateCardAuthenticationResponse:
        description: CardAuthenticationInitiate
        content:
          'application/json:':
            schema:
              type: string
     UpdateCardAuthenticationResponse:
        description: CardAuthenticationUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateCardAuthenticationResponse'
     RetrieveCardAuthenticationResponse:
        description: CardAuthenticationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveCardAuthenticationResponse'
     InitiateTransactionAuthorizationResponse:
        description: TransactionAuthorizationInitiate
        content:
          'application/json:':
            schema:
              type: string
     UpdateTransactionAuthorizationResponse:
        description: TransactionAuthorizationUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTransactionAuthorizationResponse'
     RetrieveTransactionAuthorizationResponse:
        description: TransactionAuthorizationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveTransactionAuthorizationResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
