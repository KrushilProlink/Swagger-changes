openapi: 3.0.1
info:
  title: Product Directory
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This service domain maintains
    a comprehensive directory of the bank's products and services. It can be
    referenced to obtain product details used to support activities including
    product selection, sales and marketing, onboarding, servicing and product
    fulfillment.
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/ProductDirectory
paths:
   '/ProductDirectoryEntry/{productdirectoryentryid}/Register':
      post:
        tags:
           - CR - ProductDirectoryEntry
        summary: InCR Register a new product or service in the catalog
        description: InCR Register a new product or service in the catalog
        operationId: ProductDirectoryEntry/Register
        parameters:
           - $ref: '#/components/parameters/productdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterProductDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ProductDirectoryEntry/{productdirectoryentryid}/Update':
      put:
        tags:
           - CR - ProductDirectoryEntry
        summary: UpCR Update details of a product or service in the catalog
        description: UpCR Update details of a product or service in the catalog
        operationId: ProductDirectoryEntry/Update
        parameters:
           - $ref: '#/components/parameters/productdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateProductDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ProductDirectoryEntry/{productdirectoryentryid}/Request':
      put:
        tags:
           - CR - ProductDirectoryEntry
        summary: RqCR Request that an existing entry is updated or revised
        description: RqCR Request that an existing entry is updated or revised
        operationId: ProductDirectoryEntry/Request
        parameters:
           - $ref: '#/components/parameters/productdirectoryentryid'
        requestBody:
          $ref: '#/components/requestBodies/RequestProductDirectoryEntryRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ProductDirectoryEntry/{productdirectoryentryid}/Retrieve':
      get:
        tags:
           - CR - ProductDirectoryEntry
        summary: ReCR Retrieve product or service details from the catalog
        description: ReCR Retrieve product or service details from the catalog
        operationId: ProductDirectoryEntry/Retrieve
        parameters:
           - $ref: '#/components/parameters/productdirectoryentryid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveProductDirectoryEntryResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Operations/{operationsid}/Register':
      post:
        tags:
           - BQ - Operations
        summary: >-
          InBQ Register a new product or service operations details in the
          catalog
        description: >-
          InBQ Register a new product or service operations details in the
          catalog
        operationId: Operations/Register
        parameters:
           - $ref: '#/components/parameters/operationsid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterOperationsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Operations/{operationsid}/Update':
      put:
        tags:
           - BQ - Operations
        summary: >-
          UpBQ Update details of a product or service operations details in the
          catalog
        description: >-
          UpBQ Update details of a product or service operations details in the
          catalog
        operationId: Operations/Update
        parameters:
           - $ref: '#/components/parameters/operationsid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateOperationsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Operations/{operationsid}/Retrieve':
      get:
        tags:
           - BQ - Operations
        summary: ReBQ Retrieve product or service operations details from the catalog
        description: ReBQ Retrieve product or service operations details from the catalog
        operationId: Operations/Retrieve
        parameters:
           - $ref: '#/components/parameters/operationsid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveOperationsResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SalesandMarketing/{salesandmarketingid}/Register':
      post:
        tags:
           - BQ - SalesandMarketing
        summary: >-
          InBQ Register a new product or service sales and marketing details in
          the catalog
        description: >-
          InBQ Register a new product or service sales and marketing details in
          the catalog
        operationId: SalesandMarketing/Register
        parameters:
           - $ref: '#/components/parameters/salesandmarketingid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterSalesandMarketingRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SalesandMarketing/{salesandmarketingid}/Update':
      put:
        tags:
           - BQ - SalesandMarketing
        summary: >-
          UpBQ Update details of a product or service sales and marketing
          details in the catalog
        description: >-
          UpBQ Update details of a product or service sales and marketing
          details in the catalog
        operationId: SalesandMarketing/Update
        parameters:
           - $ref: '#/components/parameters/salesandmarketingid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSalesandMarketingRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/SalesandMarketing/{salesandmarketingid}/Retrieve':
      get:
        tags:
           - BQ - SalesandMarketing
        summary: >-
          ReBQ Retrieve product or service sales and marketing details from the
          catalog
        description: >-
          ReBQ Retrieve product or service sales and marketing details from the
          catalog
        operationId: SalesandMarketing/Retrieve
        parameters:
           - $ref: '#/components/parameters/salesandmarketingid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveSalesandMarketingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Servicing/{servicingid}/Register':
      post:
        tags:
           - BQ - Servicing
        summary: >-
          InBQ Register a new product or service servicing details in the
          catalog
        description: >-
          InBQ Register a new product or service servicing details in the
          catalog
        operationId: Servicing/Register
        parameters:
           - $ref: '#/components/parameters/servicingid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterServicingRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Servicing/{servicingid}/Update':
      put:
        tags:
           - BQ - Servicing
        summary: >-
          UpBQ Update details of a product or service servicing details in the
          catalog
        description: >-
          UpBQ Update details of a product or service servicing details in the
          catalog
        operationId: Servicing/Update
        parameters:
           - $ref: '#/components/parameters/servicingid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateServicingRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Servicing/{servicingid}/Retrieve':
      get:
        tags:
           - BQ - Servicing
        summary: ReBQ Retrieve product or service servicing details from the catalog
        description: ReBQ Retrieve product or service servicing details from the catalog
        operationId: Servicing/Retrieve
        parameters:
           - $ref: '#/components/parameters/servicingid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveServicingResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Production/{productionid}/Register':
      post:
        tags:
           - BQ - Production
        summary: >-
          InBQ Register a new product or service production details in the
          catalog
        description: >-
          InBQ Register a new product or service production details in the
          catalog
        operationId: Production/Register
        parameters:
           - $ref: '#/components/parameters/productionid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterProductionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Production/{productionid}/Update':
      put:
        tags:
           - BQ - Production
        summary: >-
          UpBQ Update details of a product or service production details in the
          catalog
        description: >-
          UpBQ Update details of a product or service production details in the
          catalog
        operationId: Production/Update
        parameters:
           - $ref: '#/components/parameters/productionid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateProductionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Production/{productionid}/Retrieve':
      get:
        tags:
           - BQ - Production
        summary: ReBQ Retrieve product or service production details from the catalog
        description: ReBQ Retrieve product or service production details from the catalog
        operationId: Production/Retrieve
        parameters:
           - $ref: '#/components/parameters/productionid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveProductionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     RegisterProductDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
              description: "\r\n"
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
              description: ''
     Text:
        type: object
        description: "\r\n - "
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     ProductDirectoryEntry:
        type: object
        description: "\r\n - "
        properties:
           ProductVersion:
              type: string
              description: |
                The current version of the product referenced in the directory.
              format: String
     BankingProduct:
        type: object
        description: >-2
           Product_x000D_
          |Product
          (https://www.iso20022.org/standardsrepository/type/Product)|Standard|ISO20022
          BM ()
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Status:
        type: object
        description: ' '
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
     RegisterProductDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RegisterProductDirectoryEntry:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     UpdateProductDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
              description: "\r\n"
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
              description: ''
     UpdateProductDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     UpdateProductDirectoryEntry:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RequestProductDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
              description: "\r\n"
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
              description: ''
     RequestProductDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RequestProductDirectoryEntry:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RetrieveProductDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
              description: "\r\n"
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
              description: ''
     RetrieveProductDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RetrieveProductDirectoryEntry:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RegisterOperationsRequest:
        type: object
        description: ''
        properties:
           ProductandServiceOperatingSchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           ProductandServiceConfigurationParameterType:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           ProductandServiceConfigurationParameterDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServiceConfigurationParameterSetting:
              $ref: '#/components/schemas/Arrangement'
              description: ''
     Schedule:
        type: object
        description: "\r\n - "
        properties:
           ScheduleType:
              type: string
              description: ''
              format: String
     Feature:
        type: object
        description: "\r\n - "
        properties:
           FeatureType:
              $ref: '#/components/schemas/Text'
              description: ''
           FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           FeatureName:
              $ref: '#/components/schemas/Name'
              description: ''
           FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           FeatureDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Arrangement:
        type: object
        description: ' Obligation|Obligation (https://www.iso20022.org/standardsrepository/type/Obligation)|Standard|ISO20022 BM ()'
        properties:
           ArrangementAction:
              $ref: '#/components/schemas/Action'
              description: ''
           ArrangementStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ArrangementEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ArrangementStatus:
              $ref: '#/components/schemas/Arrangementlifecyclestatus'
              description: >-
                A characteristic of arrangement which refers to the
                LifecycleStatus of arrangement (e.g., requested, proposed,
                offered, accepted, cancelled, terminated, fulfilled, etc.)
           ArrangementSubjectMatter:
              $ref: '#/components/schemas/Subject'
              description: ''
           Arrangementtype:
              enum:
                   -  SweepArrangement
                   -  WithdrawalArrangement
                   -  DepositArrangement
                   -  InterestArrangement
                   -  FeeArrangement
                   -  LienArrangement
                   -  InformationArrangement
                   -  PaymentArrangement
                   -  EntitlementArrangement
                   -  PeriodArrangement
                   -  CollateralArrangement
                   -  LimitArrangement
                   -  AccessArrangement
                   -  CardPaymentArrangement
                   -  StandingOrderArrangement
                   -  OverdraftArrangement
                   -  RepaymentArrangement
                   -  StatementArrangement
                   -  CreditTransferArrangement
                   -  ProductAndServiceArrangement
                   -  FactoringArrangement
                   -  RolloverArrangement
                   -  RestructuringArrangement
                   -  InsuranceArrangement
                   -  CollectionArrangement
                   -  UnderwritingArrangement
                   -  TerminationArrangement
                   -  MaturityArrangement
              type: string
              description: ">-\r\n* `SweepArrangement` \r\n* `WithdrawalArrangement` \r\n* `DepositArrangement` \r\n* `InterestArrangement` \r\n* `FeeArrangement` \r\n* `LienArrangement` \r\n* `InformationArrangement` \r\n* `PaymentArrangement` \r\n* `EntitlementArrangement` \r\n* `PeriodArrangement` \r\n* `CollateralArrangement` \r\n* `LimitArrangement` \r\n* `AccessArrangement` \r\n* `CardPaymentArrangement` \r\n* `StandingOrderArrangement` \r\n* `OverdraftArrangement` \r\n* `RepaymentArrangement` \r\n* `StatementArrangement` \r\n* `CreditTransferArrangement` \r\n* `ProductAndServiceArrangement` \r\n* `FactoringArrangement` \r\n* `RolloverArrangement` \r\n* `RestructuringArrangement` \r\n* `InsuranceArrangement` \r\n* `CollectionArrangement` \r\n* `UnderwritingArrangement` \r\n* `TerminationArrangement` \r\n* `MaturityArrangement` \r\n* "
     Action:
        type: object
        description: ' '
        properties:
           ActionType:
              enum:
                   -  Initiate
                   -  Execute
                   -  Create
                   -  Transfer
                   -  Pay
                   -  Deliver
                   -  Apply
                   -  Calculate
              type: string
              description: ">-\r\n* `Initiate` \r\n* `Execute` \r\n* `Create` \r\n* `Transfer` \r\n* `Pay` \r\n* `Deliver` \r\n* `Apply` \r\n* `Calculate` \r\n* "
     Arrangementlifecyclestatus:
        type: object
        description: >-
          A characteristic of arrangement which refers to the LifecycleStatus of
          arrangement (e.g., requested, proposed, offered, accepted, cancelled,
          terminated, fulfilled, etc.) 
        properties:
           ArrangementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ArrangementLifecycleStatusType:
              enum:
                   -  Requested
                   -  Proposed
                   -  Offered
                   -  Accepted
                   -  Cancelled
                   -  Fulfilled
                   -  Terminated
              type: string
              description: ">-\r\n* `Requested` \r\n* `Proposed` \r\n* `Offered` \r\n* `Accepted` \r\n* `Cancelled` \r\n* `Fulfilled` \r\n* `Terminated` \r\n* "
     Subject:
        type: object
        description: ' '
        properties:
           Subject:
              type: string
              description: >-
                A thing that is discussed or dealt whit in agreement/arrangement
                about doing or not doing (as action) something.
              format: Class
     RegisterOperationsResponse:
        type: object
        description: ''
        properties:
           ProductandServiceOperatingSchedule:
              $ref: '#/components/schemas/Schedule'
           ProductandServiceConfigurationParameterType:
              $ref: '#/components/schemas/Feature'
           ProductandServiceConfigurationParameterDescription:
              $ref: '#/components/schemas/Text'
           ProductandServiceConfigurationParameterSetting:
              $ref: '#/components/schemas/Arrangement'
     RegisterOperations:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     UpdateOperationsRequest:
        type: object
        description: ''
        properties:
           ProductandServiceOperatingSchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           ProductandServiceConfigurationParameterType:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           ProductandServiceConfigurationParameterDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServiceConfigurationParameterSetting:
              $ref: '#/components/schemas/Arrangement'
              description: ''
     UpdateOperationsResponse:
        type: object
        description: ''
        properties:
           ProductandServiceOperatingSchedule:
              $ref: '#/components/schemas/Schedule'
           ProductandServiceConfigurationParameterType:
              $ref: '#/components/schemas/Feature'
           ProductandServiceConfigurationParameterDescription:
              $ref: '#/components/schemas/Text'
           ProductandServiceConfigurationParameterSetting:
              $ref: '#/components/schemas/Arrangement'
     UpdateOperations:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RetrieveOperationsRequest:
        type: object
        description: ''
        properties:
           ProductandServiceOperatingSchedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           ProductandServiceConfigurationParameterType:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           ProductandServiceConfigurationParameterDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServiceConfigurationParameterSetting:
              $ref: '#/components/schemas/Arrangement'
              description: ''
     RetrieveOperationsResponse:
        type: object
        description: ''
        properties:
           ProductandServiceOperatingSchedule:
              $ref: '#/components/schemas/Schedule'
           ProductandServiceConfigurationParameterType:
              $ref: '#/components/schemas/Feature'
           ProductandServiceConfigurationParameterDescription:
              $ref: '#/components/schemas/Text'
           ProductandServiceConfigurationParameterSetting:
              $ref: '#/components/schemas/Arrangement'
     RetrieveOperations:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RegisterSalesandMarketingRequest:
        type: object
        description: ''
        properties:
           ProductandServiceSalesMaterial:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServicesFeaturesAndOptions:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
           ProductandServicePricingTable:
              $ref: '#/components/schemas/ProductFeatureModality'
              description: "\r\n"
           ProductandServiceFeesPenaltiesTable:
              $ref: '#/components/schemas/ProductFeatureModality'
              description: "\r\n"
           ProductSuitabilityGuide:
              $ref: '#/components/schemas/RuleSet'
              description: ''
           ProductandServiceEligibilityType:
              $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
              description: "\r\n"
           ProductandServiceEligibilityDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServiceOfferProcessingRequirements:
              $ref: '#/components/schemas/ProductRequirement'
              description: "\r\n"
     ProductFeature:
        type: object
        description: "\r\n - "
        properties:
           ProductFeatureType:
              $ref: '#/components/schemas/Productfeaturetype'
              description: The type or category of product/service features
           ProductFeatureSpecification:
              $ref: '#/components/schemas/Text'
              description: ''
     Productfeaturetype:
        type: object
        description: 'The type or category of product/service features '
        properties:
           ProductFeatureTypeValues:
              enum:
                   -  Bankingservice
                   -  Administrationservice
                   -  Accessservice
                   -  Pricefeature
              type: string
              description: ">-\r\n* `Bankingservice` \r\n* `Administrationservice` \r\n* `Accessservice` \r\n* `Pricefeature` \r\n* "
     ProductFeatureModality:
        type: object
        description: "\r\n - "
        properties:
           ProductFeatureModalityType:
              enum:
                   -  AllocationModality
                   -  CalculationModality
                   -  DerivationModality
                   -  PaymentModality
                   -  ProcessingModality
                   -  ApplicationModality
                   -  DeliveryModality
              type: string
              description: ">-\r\n* `AllocationModality` \r\n* `CalculationModality` \r\n* `DerivationModality` \r\n* `PaymentModality` \r\n* `ProcessingModality` \r\n* `ApplicationModality` \r\n* `DeliveryModality` \r\n* "
     RuleSet:
        type: object
        description: ' GovernanceRules|GovernanceRules (https://www.iso20022.org/standardsrepository/type/GovernanceRules)|Standard|ISO20022 BM ()'
        properties:
           RuleSetDefinition:
              $ref: '#/components/schemas/Text'
              description: ''
           RuleSetInterpretation:
              $ref: '#/components/schemas/Text'
              description: ''
           RuleSetType:
              $ref: '#/components/schemas/Rulesettype'
              description: ''
           RuleSetName:
              $ref: '#/components/schemas/Name'
              description: ''
           RuleSetIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           RuleSetLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
     Rulesettype:
        type: object
        description: ' '
        properties:
           RuleSetTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           RuleSetType:
              enum:
                   -  Policy
                   -  Regulation
                   -  Law
                   -  Guideline
                   -  Criterion
                   -  Standard
              type: string
              description: ">-\r\n* `Policy` \r\n* `Regulation` \r\n* `Law` \r\n* `Guideline` \r\n* `Criterion` \r\n* `Standard` \r\n* "
     CustomerProductEligibilityProfileClass:
        type: object
        description: "\r\n - "
        properties:
           CustomerProductEligibilityProfileClass:
              type: string
              description: >-
                A value of Customer Product Profile Type whereby customer
                product eligibility will be defined.
              format: Class
     ProductRequirement:
        type: object
        description: "\r\n - "
        properties:
           ProductRequirementType:
              enum:
                   -  FunctionalRequirement
                   -  TechnicalRequirement
                   -  OperationalRequirement
                   -  LegalRequirement
                   -  TestingRequirement
                   -  SalesAndMarketingRequirement
                   -  ServicingRequirement
                   -  ProductionRequirement
                   -  SuitabilityRequirement
                   -  EligibilityRequirement
                   -  ProcessingRequirement
              type: string
              description: ">-\r\n* `FunctionalRequirement` \r\n* `TechnicalRequirement` \r\n* `OperationalRequirement` \r\n* `LegalRequirement` \r\n* `TestingRequirement` \r\n* `SalesAndMarketingRequirement` \r\n* `ServicingRequirement` \r\n* `ProductionRequirement` \r\n* `SuitabilityRequirement` \r\n* `EligibilityRequirement` \r\n* `ProcessingRequirement` \r\n* "
           ProductRequirementSpecification:
              type: string
              description: ''
              format: String
     RegisterSalesandMarketingResponse:
        type: object
        description: ''
        properties:
           ProductandServiceSalesMaterial:
              $ref: '#/components/schemas/Text'
           ProductandServicesFeaturesAndOptions:
              $ref: '#/components/schemas/ProductFeature'
           ProductandServicePricingTable:
              $ref: '#/components/schemas/ProductFeatureModality'
           ProductandServiceFeesPenaltiesTable:
              $ref: '#/components/schemas/ProductFeatureModality'
           ProductSuitabilityGuide:
              $ref: '#/components/schemas/RuleSet'
           ProductandServiceEligibilityType:
              $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
           ProductandServiceEligibilityDescription:
              $ref: '#/components/schemas/Text'
           ProductandServiceOfferProcessingRequirements:
              $ref: '#/components/schemas/ProductRequirement'
     RegisterSalesandMarketing:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     UpdateSalesandMarketingRequest:
        type: object
        description: ''
        properties:
           ProductandServiceSalesMaterial:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServicesFeaturesAndOptions:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
           ProductandServicePricingTable:
              $ref: '#/components/schemas/ProductFeatureModality'
              description: "\r\n"
           ProductandServiceFeesPenaltiesTable:
              $ref: '#/components/schemas/ProductFeatureModality'
              description: "\r\n"
           ProductSuitabilityGuide:
              $ref: '#/components/schemas/RuleSet'
              description: ''
           ProductandServiceEligibilityType:
              $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
              description: "\r\n"
           ProductandServiceEligibilityDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServiceOfferProcessingRequirements:
              $ref: '#/components/schemas/ProductRequirement'
              description: "\r\n"
     UpdateSalesandMarketingResponse:
        type: object
        description: ''
        properties:
           ProductandServiceSalesMaterial:
              $ref: '#/components/schemas/Text'
           ProductandServicesFeaturesAndOptions:
              $ref: '#/components/schemas/ProductFeature'
           ProductandServicePricingTable:
              $ref: '#/components/schemas/ProductFeatureModality'
           ProductandServiceFeesPenaltiesTable:
              $ref: '#/components/schemas/ProductFeatureModality'
           ProductSuitabilityGuide:
              $ref: '#/components/schemas/RuleSet'
           ProductandServiceEligibilityType:
              $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
           ProductandServiceEligibilityDescription:
              $ref: '#/components/schemas/Text'
           ProductandServiceOfferProcessingRequirements:
              $ref: '#/components/schemas/ProductRequirement'
     UpdateSalesandMarketing:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RetrieveSalesandMarketingRequest:
        type: object
        description: ''
        properties:
           ProductandServiceSalesMaterial:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServicesFeaturesAndOptions:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
           ProductandServicePricingTable:
              $ref: '#/components/schemas/ProductFeatureModality'
              description: "\r\n"
           ProductandServiceFeesPenaltiesTable:
              $ref: '#/components/schemas/ProductFeatureModality'
              description: "\r\n"
           ProductSuitabilityGuide:
              $ref: '#/components/schemas/RuleSet'
              description: ''
           ProductandServiceEligibilityType:
              $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
              description: "\r\n"
           ProductandServiceEligibilityDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ProductandServiceOfferProcessingRequirements:
              $ref: '#/components/schemas/ProductRequirement'
              description: "\r\n"
     RetrieveSalesandMarketingResponse:
        type: object
        description: ''
        properties:
           ProductandServiceSalesMaterial:
              $ref: '#/components/schemas/Text'
           ProductandServicesFeaturesAndOptions:
              $ref: '#/components/schemas/ProductFeature'
           ProductandServicePricingTable:
              $ref: '#/components/schemas/ProductFeatureModality'
           ProductandServiceFeesPenaltiesTable:
              $ref: '#/components/schemas/ProductFeatureModality'
           ProductSuitabilityGuide:
              $ref: '#/components/schemas/RuleSet'
           ProductandServiceEligibilityType:
              $ref: '#/components/schemas/CustomerProductEligibilityProfileClass'
           ProductandServiceEligibilityDescription:
              $ref: '#/components/schemas/Text'
           ProductandServiceOfferProcessingRequirements:
              $ref: '#/components/schemas/ProductRequirement'
     RetrieveSalesandMarketing:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RegisterServicingRequest:
        type: object
        description: ''
        properties:
           ProductandServiceFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
           ProductandServiceFeatureGuideline:
              $ref: '#/components/schemas/RuleSet'
              description: ''
           ProductandServiceFeatureProblemDiagnosis:
              $ref: '#/components/schemas/Case'
              description: "\r\n"
           ProductandServiceFeatureProblemResolution:
              $ref: '#/components/schemas/CaseResolution'
              description: "\r\n"
     Case:
        type: object
        description: "\r\n - "
        properties:
           CaseCreationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Creation date and time of the case. (ISO20022)
           CaseType:
              enum:
                   -  Card
                   -  Loan
                   -  Fraud
                   -  Payment
                   -  Market
                   -  Security
                   -  Other
              type: string
              description: ">-\r\n* `Card` \r\n* `Loan` \r\n* `Fraud` \r\n* `Payment` \r\n* `Market` \r\n* `Security` \r\n* `Other` \r\n* "
           CaseLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           CaseStatus:
              enum:
                   -  Closed
                   -  Assigned
                   -  UnderInvestigation
                   -  Unknown
                   -  Overdue
              type: string
              description: ">-\r\n* `Closed` \r\n* `Assigned` \r\n* `UnderInvestigation` \r\n* `Unknown` \r\n* `Overdue` \r\n* "
           CaseDocument:
              $ref: '#/components/schemas/Document'
              description: ''
           CaseDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Location:
        type: object
        description: ' '
        properties:
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: >-
                A description of the property, particularly if it has landmark
                characteristics.
           LocationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: >-
                Key dates associated with the directory entry (e.g. open date,
                refresh date).
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                The tracked status (e.g. under construction or repair,
                inhabited, vacant).
           LocationType:
              enum:
                   -  Continent
                   -  Country
                   -  State
                   -  District
                   -  Province
                   -  Town
                   -  City
                   -  Region
              type: string
              description: ">-\r\n* `Continent` \r\n* `Country` \r\n* `State` \r\n* `District` \r\n* `Province` \r\n* `Town` \r\n* `City` \r\n* `Region` \r\n* "
           LocationZoningType:
              $ref: '#/components/schemas/Text'
              description: >-
                The planning or zoning status (e.g. residential, commercial,
                industrial).
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: >-
                The general purpose and neighborhood of the property  (e.g.
                residential, industrial, commercial).
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: >-
                The construction approach for a property at the location (e.g.
                era and architecture as might be used in valuation).
           LocationOccupancyType:
              $ref: '#/components/schemas/Text'
              description: >-
                The type of occupancy (e.g. residency, business, retail,
                entertainment).
           LocationValue:
              $ref: '#/components/schemas/Value'
              description: >-
                The estimated (book) value of the property at the location 
                rental and purchase as appropriate.
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: >-
                An indication of the size or scale of the property where
                appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover
                restaurant).
           LocationIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           Location:
              type: string
              description: >-
                The definition of an addressable space/position both in real and
                virtual environments with associated uses and entitlements
              format: Class
           LocationName:
              $ref: '#/components/schemas/Name'
              description: Name (label) of the location. (ISO20022)
           LocationTimeZone:
              $ref: '#/components/schemas/Text'
              description: Local time zone.
     Address:
        type: object
        description: ' '
        properties:
           AddressType:
              enum:
                   -  PostalAddress
                   -  GeolocationAddress
                   -  LatitudeAddress
                   -  LongitudeAddress
                   -  ElectronicAddress
              type: string
              description: ">-\r\n* `PostalAddress` \r\n* `GeolocationAddress` \r\n* `LatitudeAddress` \r\n* `LongitudeAddress` \r\n* `ElectronicAddress` \r\n* "
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           Address:
              type: string
              description: >-
                A specific designation or description of a location, typically
                used for specifying the location or destination of something or
                someone
              format: Class
     Document:
        type: object
        description: ' '
        properties:
           DocumentIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                An identifier that allows to uniquely refer to an instance of a
                Document.
           DocumentVersion:
              type: string
              description: ''
              format: Number
           DocumentType:
              enum:
                   -  Meteredserviceinvoice
                   -  Commercialinvoice
                   -  Creditnote
                   -  Debitnote
                   -  Hireinvoice
                   -  Selfbilledinvoice
                   -  Remittanceadvicemessage
                   -  Relatedpaymentinstruction
                   -  Commercialcontract
                   -  Foreignexchangedealreference
                   -  Statementofaccount
                   -  Dispatchadvice
                   -  Purchaseorder
                   -  Billoflading
                   -  Voucher
                   -  Accountreceivableopenitem
                   -  Cashierreceipt
                   -  Customerreceipt
                   -  Journal
                   -  Salereceipt
              type: string
              description: ">-\r\n* `Meteredserviceinvoice` \r\n* `Commercialinvoice` \r\n* `Creditnote` \r\n* `Debitnote` \r\n* `Hireinvoice` \r\n* `Selfbilledinvoice` \r\n* `Remittanceadvicemessage` \r\n* `Relatedpaymentinstruction` \r\n* `Commercialcontract` \r\n* `Foreignexchangedealreference` \r\n* `Statementofaccount` \r\n* `Dispatchadvice` \r\n* `Purchaseorder` \r\n* `Billoflading` \r\n* `Voucher` \r\n* `Accountreceivableopenitem` \r\n* `Cashierreceipt` \r\n* `Customerreceipt` \r\n* `Journal` \r\n* `Salereceipt` \r\n* "
           DocumentStatus:
              $ref: '#/components/schemas/Status'
              description: Status of the document (e.g. delivered, paid, etc.). ISO20022
           DocumentDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           DocumentName:
              $ref: '#/components/schemas/Name'
              description: ''
           DocumentDateTimeType:
              enum:
                   -  CreationDate
                   -  CapturingDate
                   -  VersionDate
                   -  ValueDate
                   -  IssueDate
              type: string
              description: ">-\r\n* `CreationDate` \r\n* `CapturingDate` \r\n* `VersionDate` \r\n* `ValueDate` \r\n* `IssueDate` \r\n* "
           DocumentPurpose:
              $ref: '#/components/schemas/Text'
              description: Specifies the function of the document. (ISO20022)
           DocumentFormat:
              $ref: '#/components/schemas/Text'
              description: ''
           DocumentSubject:
              $ref: '#/components/schemas/Text'
              description: ''
           DocumentDescription:
              $ref: '#/components/schemas/Text'
              description: ''
           DocumentValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     CaseResolution:
        type: object
        description: "\r\n - "
        properties:
           ResolutionSchedule:
              $ref: '#/components/schemas/Schedule'
              description: ''
           ResolutionType:
              $ref: '#/components/schemas/Text'
              description: The type of resolution (e.g. success, deferred, rejected)
           Description:
              $ref: '#/components/schemas/Text'
              description: Description of the resolution of the investigation case
     RegisterServicingResponse:
        type: object
        description: ''
        properties:
           ProductandServiceFeature:
              $ref: '#/components/schemas/ProductFeature'
           ProductandServiceFeatureGuideline:
              $ref: '#/components/schemas/RuleSet'
           ProductandServiceFeatureProblemDiagnosis:
              $ref: '#/components/schemas/Case'
           ProductandServiceFeatureProblemResolution:
              $ref: '#/components/schemas/CaseResolution'
     RegisterServicing:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     UpdateServicingRequest:
        type: object
        description: ''
        properties:
           ProductandServiceFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
           ProductandServiceFeatureGuideline:
              $ref: '#/components/schemas/RuleSet'
              description: ''
           ProductandServiceFeatureProblemDiagnosis:
              $ref: '#/components/schemas/Case'
              description: "\r\n"
           ProductandServiceFeatureProblemResolution:
              $ref: '#/components/schemas/CaseResolution'
              description: "\r\n"
     UpdateServicingResponse:
        type: object
        description: ''
        properties:
           ProductandServiceFeature:
              $ref: '#/components/schemas/ProductFeature'
           ProductandServiceFeatureGuideline:
              $ref: '#/components/schemas/RuleSet'
           ProductandServiceFeatureProblemDiagnosis:
              $ref: '#/components/schemas/Case'
           ProductandServiceFeatureProblemResolution:
              $ref: '#/components/schemas/CaseResolution'
     UpdateServicing:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RetrieveServicingRequest:
        type: object
        description: ''
        properties:
           ProductandServiceFeature:
              $ref: '#/components/schemas/ProductFeature'
              description: "\r\n"
           ProductandServiceFeatureGuideline:
              $ref: '#/components/schemas/RuleSet'
              description: ''
           ProductandServiceFeatureProblemDiagnosis:
              $ref: '#/components/schemas/Case'
              description: "\r\n"
           ProductandServiceFeatureProblemResolution:
              $ref: '#/components/schemas/CaseResolution'
              description: "\r\n"
     RetrieveServicingResponse:
        type: object
        description: ''
        properties:
           ProductandServiceFeature:
              $ref: '#/components/schemas/ProductFeature'
           ProductandServiceFeatureGuideline:
              $ref: '#/components/schemas/RuleSet'
           ProductandServiceFeatureProblemDiagnosis:
              $ref: '#/components/schemas/Case'
           ProductandServiceFeatureProblemResolution:
              $ref: '#/components/schemas/CaseResolution'
     RetrieveServicing:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RegisterProductionRequest:
        type: object
        description: ''
        properties:
           ProductandServiceLocationAvailability:
              $ref: '#/components/schemas/Location'
              description: ''
           ProductandServiceTimeAvailability:
              $ref: '#/components/schemas/DateTime'
              description: "\r\n"
           ProductandServiceAccessAvailability:
              $ref: '#/components/schemas/ServiceAccessArrangement'
              description: "\r\n"
     DateTime:
        type: object
        description: "\r\n - "
        properties:
           TimeIndication:
              type: string
              description: |
                Expression of the point in time

                is expressed according to "TimeIndicationType"
                e.g. period, day, more detailed indication
              format: String
           TimeIndicationType:
              type: string
              description: ''
              format: String
     ServiceAccessArrangement:
        type: object
        description: "\r\n - "
        properties:
           ServiceAccessArrangement:
              type: string
              description: >-
                An arrangement that allows or restricts the access to a service
                or product through an access point 
              format: Class
     RegisterProductionResponse:
        type: object
        description: ''
        properties:
           ProductandServiceLocationAvailability:
              $ref: '#/components/schemas/Location'
           ProductandServiceTimeAvailability:
              $ref: '#/components/schemas/DateTime'
           ProductandServiceAccessAvailability:
              $ref: '#/components/schemas/ServiceAccessArrangement'
     RegisterProduction:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     UpdateProductionRequest:
        type: object
        description: ''
        properties:
           ProductandServiceLocationAvailability:
              $ref: '#/components/schemas/Location'
              description: ''
           ProductandServiceTimeAvailability:
              $ref: '#/components/schemas/DateTime'
              description: "\r\n"
           ProductandServiceAccessAvailability:
              $ref: '#/components/schemas/ServiceAccessArrangement'
              description: "\r\n"
     UpdateProductionResponse:
        type: object
        description: ''
        properties:
           ProductandServiceLocationAvailability:
              $ref: '#/components/schemas/Location'
           ProductandServiceTimeAvailability:
              $ref: '#/components/schemas/DateTime'
           ProductandServiceAccessAvailability:
              $ref: '#/components/schemas/ServiceAccessArrangement'
     UpdateProduction:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     RetrieveProductionRequest:
        type: object
        description: ''
        properties:
           ProductandServiceLocationAvailability:
              $ref: '#/components/schemas/Location'
              description: ''
           ProductandServiceTimeAvailability:
              $ref: '#/components/schemas/DateTime'
              description: "\r\n"
           ProductandServiceAccessAvailability:
              $ref: '#/components/schemas/ServiceAccessArrangement'
              description: "\r\n"
     RetrieveProductionResponse:
        type: object
        description: ''
        properties:
           ProductandServiceLocationAvailability:
              $ref: '#/components/schemas/Location'
           ProductandServiceTimeAvailability:
              $ref: '#/components/schemas/DateTime'
           ProductandServiceAccessAvailability:
              $ref: '#/components/schemas/ServiceAccessArrangement'
     RetrieveProduction:
        type: object
        description: ''
        properties:
           ProductVersion:
              $ref: '#/components/schemas/Text'
           ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
           ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     RegisterProductDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterProductDirectoryEntryRequest'
        required: true
     UpdateProductDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductDirectoryEntryRequest'
        required: true
     RequestProductDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestProductDirectoryEntryRequest'
        required: true
     RetrieveProductDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductDirectoryEntryRequest'
        required: true
     RegisterOperationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterOperationsRequest'
        required: true
     UpdateOperationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateOperationsRequest'
        required: true
     RetrieveOperationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveOperationsRequest'
        required: true
     RegisterSalesandMarketingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterSalesandMarketingRequest'
        required: true
     UpdateSalesandMarketingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSalesandMarketingRequest'
        required: true
     RetrieveSalesandMarketingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSalesandMarketingRequest'
        required: true
     RegisterServicingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterServicingRequest'
        required: true
     UpdateServicingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingRequest'
        required: true
     RetrieveServicingRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingRequest'
        required: true
     RegisterProductionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterProductionRequest'
        required: true
     UpdateProductionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductionRequest'
        required: true
     RetrieveProductionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductionRequest'
        required: true
  parameters:
     productdirectoryentryid:
        name: productdirectoryentryid
        in: path
        required: true
        style: simple
        schema:
          type: string
     operationsid:
        name: operationsid
        in: path
        required: true
        style: simple
        schema:
          type: string
     salesandmarketingid:
        name: salesandmarketingid
        in: path
        required: true
        style: simple
        schema:
          type: string
     servicingid:
        name: servicingid
        in: path
        required: true
        style: simple
        schema:
          type: string
     productionid:
        name: productionid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     RegisterProductDirectoryEntryResponse:
        description: ProductDirectoryEntryRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterProductDirectoryEntryResponse'
     UpdateProductDirectoryEntryResponse:
        description: ProductDirectoryEntryUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductDirectoryEntryResponse'
     RequestProductDirectoryEntryResponse:
        description: ProductDirectoryEntryRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestProductDirectoryEntryResponse'
     RetrieveProductDirectoryEntryResponse:
        description: ProductDirectoryEntryRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductDirectoryEntryResponse'
     RegisterOperationsResponse:
        description: OperationsRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterOperationsResponse'
     UpdateOperationsResponse:
        description: OperationsUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateOperationsResponse'
     RetrieveOperationsResponse:
        description: OperationsRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveOperationsResponse'
     RegisterSalesandMarketingResponse:
        description: SalesandMarketingRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterSalesandMarketingResponse'
     UpdateSalesandMarketingResponse:
        description: SalesandMarketingUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateSalesandMarketingResponse'
     RetrieveSalesandMarketingResponse:
        description: SalesandMarketingRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveSalesandMarketingResponse'
     RegisterServicingResponse:
        description: ServicingRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterServicingResponse'
     UpdateServicingResponse:
        description: ServicingUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateServicingResponse'
     RetrieveServicingResponse:
        description: ServicingRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveServicingResponse'
     RegisterProductionResponse:
        description: ProductionRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterProductionResponse'
     UpdateProductionResponse:
        description: ProductionUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateProductionResponse'
     RetrieveProductionResponse:
        description: ProductionRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveProductionResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
