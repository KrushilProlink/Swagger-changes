openapi: 3.0.1
info:
  title: Issued Device Administration
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This service domain
    administers the issuance of authentication tokens to customers and third
    party service providers. Tokens here include physical devices such as cards,
    fobs, readers and intangible 'devices' such as passwords and secret
    questions. Administration includes version tracking, replacement and
    duration/frequency limits. Specific product/service access permissions may
    be associated with an issued token when appropriate
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/IssuedDeviceAdministration
paths:
   '/IssuedDeviceAllocation/{issueddeviceallocationid}/Initiate':
      post:
        tags:
           - CR - IssuedDeviceAllocation
        summary: >-
          PrCR Allocate an issued device (selected type will internally invoke
          assignment type)
        description: >-
          PrCR Allocate an issued device (selected type will internally invoke
          assignment type)
        operationId: IssuedDeviceAllocation/Initiate
        parameters:
           - $ref: '#/components/parameters/issueddeviceallocationid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateIssuedDeviceAllocationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/IssuedDeviceAllocation/{issueddeviceallocationid}/Update':
      put:
        tags:
           - CR - IssuedDeviceAllocation
        summary: UpCR Update details of an allocation
        description: UpCR Update details of an allocation
        operationId: IssuedDeviceAllocation/Update
        parameters:
           - $ref: '#/components/parameters/issueddeviceallocationid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateIssuedDeviceAllocationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/IssuedDeviceAllocation/{issueddeviceallocationid}/Control':
      put:
        tags:
           - CR - IssuedDeviceAllocation
        summary: CoCR Control an issued device allocation (e.g. suspend)
        description: CoCR Control an issued device allocation (e.g. suspend)
        operationId: IssuedDeviceAllocation/Control
        parameters:
           - $ref: '#/components/parameters/issueddeviceallocationid'
        requestBody:
          $ref: '#/components/requestBodies/ControlIssuedDeviceAllocationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/IssuedDeviceAllocation/{issueddeviceallocationid}/Exchange':
      put:
        tags:
           - CR - IssuedDeviceAllocation
        summary: EcCR Accept, verify, etc aspects of an allocation
        description: EcCR Accept, verify, etc aspects of an allocation
        operationId: IssuedDeviceAllocation/Exchange
        parameters:
           - $ref: '#/components/parameters/issueddeviceallocationid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeIssuedDeviceAllocationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/IssuedDeviceAllocation/{issueddeviceallocationid}/Retrieve':
      get:
        tags:
           - CR - IssuedDeviceAllocation
        summary: ReCR Retrieve details about an allocation
        description: ReCR Retrieve details about an allocation
        operationId: IssuedDeviceAllocation/Retrieve
        parameters:
           - $ref: '#/components/parameters/issueddeviceallocationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveIssuedDeviceAllocationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PasswordAssignment/{passwordassignmentid}/Initiate':
      post:
        tags:
           - BQ - PasswordAssignment
        summary: PrBQ Provide a password assignment
        description: PrBQ Provide a password assignment
        operationId: PasswordAssignment/Initiate
        parameters:
           - $ref: '#/components/parameters/passwordassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/InitiatePasswordAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PasswordAssignment/{passwordassignmentid}/Update':
      put:
        tags:
           - BQ - PasswordAssignment
        summary: UpBQ Update details of an assigned password
        description: UpBQ Update details of an assigned password
        operationId: PasswordAssignment/Update
        parameters:
           - $ref: '#/components/parameters/passwordassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdatePasswordAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PasswordAssignment/{passwordassignmentid}/Control':
      put:
        tags:
           - BQ - PasswordAssignment
        summary: CoBQ Control an assigned password (e.g. suspend)
        description: CoBQ Control an assigned password (e.g. suspend)
        operationId: PasswordAssignment/Control
        parameters:
           - $ref: '#/components/parameters/passwordassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ControlPasswordAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PasswordAssignment/{passwordassignmentid}/Exchange':
      put:
        tags:
           - BQ - PasswordAssignment
        summary: EcBQ Accept, verify, reject etc. an assigned password
        description: EcBQ Accept, verify, reject etc. an assigned password
        operationId: PasswordAssignment/Exchange
        parameters:
           - $ref: '#/components/parameters/passwordassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangePasswordAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PasswordAssignment/{passwordassignmentid}/Capture':
      put:
        tags:
           - BQ - PasswordAssignment
        summary: CaBQ Capture usage details of an assigned password
        description: CaBQ Capture usage details of an assigned password
        operationId: PasswordAssignment/Capture
        parameters:
           - $ref: '#/components/parameters/passwordassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/CapturePasswordAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PasswordAssignment/{passwordassignmentid}/Retrieve':
      get:
        tags:
           - BQ - PasswordAssignment
        summary: ReBQ Retrieve details about an assigned password
        description: ReBQ Retrieve details about an assigned password
        operationId: PasswordAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/passwordassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrievePasswordAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/QuestionAssignment/{questionassignmentid}/Initiate':
      post:
        tags:
           - BQ - QuestionAssignment
        summary: PrBQ Provide a secret question assignment
        description: PrBQ Provide a secret question assignment
        operationId: QuestionAssignment/Initiate
        parameters:
           - $ref: '#/components/parameters/questionassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateQuestionAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/QuestionAssignment/{questionassignmentid}/Update':
      put:
        tags:
           - BQ - QuestionAssignment
        summary: UpBQ Update details of an assigned secret question
        description: UpBQ Update details of an assigned secret question
        operationId: QuestionAssignment/Update
        parameters:
           - $ref: '#/components/parameters/questionassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateQuestionAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/QuestionAssignment/{questionassignmentid}/Control':
      put:
        tags:
           - BQ - QuestionAssignment
        summary: CoBQ Control an assigned secret question (e.g. suspend)
        description: CoBQ Control an assigned secret question (e.g. suspend)
        operationId: QuestionAssignment/Control
        parameters:
           - $ref: '#/components/parameters/questionassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ControlQuestionAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/QuestionAssignment/{questionassignmentid}/Exchange':
      put:
        tags:
           - BQ - QuestionAssignment
        summary: EcBQ Accept, verify, reject etc. an assigned secret question
        description: EcBQ Accept, verify, reject etc. an assigned secret question
        operationId: QuestionAssignment/Exchange
        parameters:
           - $ref: '#/components/parameters/questionassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeQuestionAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/QuestionAssignment/{questionassignmentid}/Capture':
      put:
        tags:
           - BQ - QuestionAssignment
        summary: CaBQ Capture usage details of an assigned secret question
        description: CaBQ Capture usage details of an assigned secret question
        operationId: QuestionAssignment/Capture
        parameters:
           - $ref: '#/components/parameters/questionassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureQuestionAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/QuestionAssignment/{questionassignmentid}/Retrieve':
      get:
        tags:
           - BQ - QuestionAssignment
        summary: ReBQ Retrieve details about an assigned ser - AndAnd password
        description: ReBQ Retrieve details about an assigned ser - AndAnd password
        operationId: QuestionAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/questionassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveQuestionAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/DeviceAssignment/{deviceassignmentid}/Update':
      put:
        tags:
           - BQ - DeviceAssignment
        summary: UpBQ Update details of an assigned device
        description: UpBQ Update details of an assigned device
        operationId: DeviceAssignment/Update
        parameters:
           - $ref: '#/components/parameters/deviceassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateDeviceAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/DeviceAssignment/{deviceassignmentid}/Control':
      put:
        tags:
           - BQ - DeviceAssignment
        summary: CoBQ Control an assigned device (e.g. out of service)
        description: CoBQ Control an assigned device (e.g. out of service)
        operationId: DeviceAssignment/Control
        parameters:
           - $ref: '#/components/parameters/deviceassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ControlDeviceAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/DeviceAssignment/{deviceassignmentid}/Capture':
      put:
        tags:
           - BQ - DeviceAssignment
        summary: CaBQ Capture usage details of an assigned device
        description: CaBQ Capture usage details of an assigned device
        operationId: DeviceAssignment/Capture
        parameters:
           - $ref: '#/components/parameters/deviceassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureDeviceAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/DeviceAssignment/{deviceassignmentid}/Retrieve':
      get:
        tags:
           - BQ - DeviceAssignment
        summary: ReBQ Retrieve details about an assigned device
        description: ReBQ Retrieve details about an assigned device
        operationId: DeviceAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/deviceassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveDeviceAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BiometricAssignment/{biometricassignmentid}/Initiate':
      post:
        tags:
           - BQ - BiometricAssignment
        summary: PrBQ Provide a biometric assignment
        description: PrBQ Provide a biometric assignment
        operationId: BiometricAssignment/Initiate
        parameters:
           - $ref: '#/components/parameters/biometricassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateBiometricAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BiometricAssignment/{biometricassignmentid}/Update':
      put:
        tags:
           - BQ - BiometricAssignment
        summary: UpBQ Update details of an assigned biometric
        description: UpBQ Update details of an assigned biometric
        operationId: BiometricAssignment/Update
        parameters:
           - $ref: '#/components/parameters/biometricassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateBiometricAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BiometricAssignment/{biometricassignmentid}/Control':
      put:
        tags:
           - BQ - BiometricAssignment
        summary: CoBQ Control an assigned biometric (e.g. suspend)
        description: CoBQ Control an assigned biometric (e.g. suspend)
        operationId: BiometricAssignment/Control
        parameters:
           - $ref: '#/components/parameters/biometricassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ControlBiometricAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BiometricAssignment/{biometricassignmentid}/Exchange':
      put:
        tags:
           - BQ - BiometricAssignment
        summary: EcBQ Accept, verify, reject etc. an assigned biometric
        description: EcBQ Accept, verify, reject etc. an assigned biometric
        operationId: BiometricAssignment/Exchange
        parameters:
           - $ref: '#/components/parameters/biometricassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeBiometricAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BiometricAssignment/{biometricassignmentid}/Retrieve':
      get:
        tags:
           - BQ - BiometricAssignment
        summary: ReBQ Retrieve details about an assigned biometric
        description: ReBQ Retrieve details about an assigned biometric
        operationId: BiometricAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/biometricassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveBiometricAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ReaderAssignment/{readerassignmentid}/Update':
      put:
        tags:
           - BQ - ReaderAssignment
        summary: UpBQ Update details of an assigned reader device
        description: UpBQ Update details of an assigned reader device
        operationId: ReaderAssignment/Update
        parameters:
           - $ref: '#/components/parameters/readerassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateReaderAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ReaderAssignment/{readerassignmentid}/Control':
      put:
        tags:
           - BQ - ReaderAssignment
        summary: CoBQ Control an assigned reader (e.g. out of service)
        description: CoBQ Control an assigned reader (e.g. out of service)
        operationId: ReaderAssignment/Control
        parameters:
           - $ref: '#/components/parameters/readerassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ControlReaderAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ReaderAssignment/{readerassignmentid}/Capture':
      put:
        tags:
           - BQ - ReaderAssignment
        summary: CaBQ Capture usage details of an assigned reader
        description: CaBQ Capture usage details of an assigned reader
        operationId: ReaderAssignment/Capture
        parameters:
           - $ref: '#/components/parameters/readerassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureReaderAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ReaderAssignment/{readerassignmentid}/Retrieve':
      get:
        tags:
           - BQ - ReaderAssignment
        summary: ReBQ Retrieve details about an assigned reader
        description: ReBQ Retrieve details about an assigned reader
        operationId: ReaderAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/readerassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveReaderAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ChequesAssignment/{chequesassignmentid}/Initiate':
      post:
        tags:
           - BQ - ChequesAssignment
        summary: PrBQ Provide cheques
        description: PrBQ Provide cheques
        operationId: ChequesAssignment/Initiate
        parameters:
           - $ref: '#/components/parameters/chequesassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateChequesAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ChequesAssignment/{chequesassignmentid}/Control':
      put:
        tags:
           - BQ - ChequesAssignment
        summary: CoBQ Control issued cheques (e.g. cancel)
        description: CoBQ Control issued cheques (e.g. cancel)
        operationId: ChequesAssignment/Control
        parameters:
           - $ref: '#/components/parameters/chequesassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ControlChequesAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ChequesAssignment/{chequesassignmentid}/Exchange':
      put:
        tags:
           - BQ - ChequesAssignment
        summary: EcBQ Accept, verify receipt etc. of issued cheques
        description: EcBQ Accept, verify receipt etc. of issued cheques
        operationId: ChequesAssignment/Exchange
        parameters:
           - $ref: '#/components/parameters/chequesassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeChequesAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/ChequesAssignment/{chequesassignmentid}/Retrieve':
      get:
        tags:
           - BQ - ChequesAssignment
        summary: ReBQ Retrieve details about issued cheques
        description: ReBQ Retrieve details about issued cheques
        operationId: ChequesAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/chequesassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveChequesAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TokenAssignment/{tokenassignmentid}/Capture':
      put:
        tags:
           - BQ - TokenAssignment
        summary: Capture Assigned Token
        description: Capture Assigned Token
        operationId: TokenAssignment/Capture
        parameters:
           - $ref: '#/components/parameters/tokenassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/CaptureTokenAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TokenAssignment/{tokenassignmentid}/Retrieve':
      get:
        tags:
           - BQ - TokenAssignment
        summary: Retrieve Details about Assigned Token
        description: Retrieve Details about Assigned Token
        operationId: TokenAssignment/Retrieve
        parameters:
           - $ref: '#/components/parameters/tokenassignmentid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveTokenAssignmentResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TokenAssignment/{tokenassignmentid}/Update':
      put:
        tags:
           - BQ - TokenAssignment
        summary: Update Details of Assigned Token
        description: Update Details of Assigned Token
        operationId: TokenAssignment/Update
        parameters:
           - $ref: '#/components/parameters/tokenassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateTokenAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TokenAssignment/{tokenassignmentid}/Provide':
      post:
        tags:
           - BQ - TokenAssignment
        summary: Provide Details about Assigned Token
        description: Provide Details about Assigned Token
        operationId: TokenAssignment/Provide
        parameters:
           - $ref: '#/components/parameters/tokenassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ProvideTokenAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/TokenAssignment/{tokenassignmentid}/Execute':
      put:
        tags:
           - BQ - TokenAssignment
        summary: Execute token assignment amend permission
        description: Execute token assignment amend permission
        operationId: TokenAssignment/Execute
        parameters:
           - $ref: '#/components/parameters/tokenassignmentid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteTokenAssignmentRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     InitiateIssuedDeviceAllocationRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
              description: "\r\n"
           IssueDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     Involvedparty:
        type: object
        description: "\r\n - "
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Text:
        type: object
        description: ' '
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     ProductAgreement:
        type: object
        description: "\r\n - "
        properties:
           Type:
              enum:
                   -  CurrentAccountAgreement
                   -  SavingsAccountAgreement
                   -  BrokeredProductAgreement
                   -  ConsumerLoanAgreement
                   -  MortgageLoanAgreement
                   -  DirectDebitServiceAgreement
              type: string
              description: ">-\r\n* `CurrentAccountAgreement` \r\n* `SavingsAccountAgreement` \r\n* `BrokeredProductAgreement` \r\n* `ConsumerLoanAgreement` \r\n* `MortgageLoanAgreement` \r\n* `DirectDebitServiceAgreement` \r\n* "
           ProductReference:
              $ref: '#/components/schemas/Bankingproduct'
              description: ''
           AgreementReference:
              $ref: '#/components/schemas/Agreement'
              description: ''
     Bankingproduct:
        type: object
        description: ' '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Status:
        type: object
        description: ' '
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Agreement:
        type: object
        description: ' '
        properties:
           AgreementSignedDate:
              $ref: '#/components/schemas/Date'
              description: >-
                Date on which the agreement was signed by all parties.
                (ISO20022)
           AgreementType:
              enum:
                   -  CustomerAgreement
                   -  SupplierAgreement
                   -  BrokerAgreement
                   -  SalesAgreement
                   -  PurchaseAgreement
                   -  MaintenanceAgreement
                   -  ProductAgreement
                   -  ProductSalesAgreement
                   -  ResourceAgreement
              type: string
              description: ">-\r\n* `CustomerAgreement` \r\n* `SupplierAgreement` \r\n* `BrokerAgreement` \r\n* `SalesAgreement` \r\n* `PurchaseAgreement` \r\n* `MaintenanceAgreement` \r\n* `ProductAgreement` \r\n* `ProductSalesAgreement` \r\n* `ResourceAgreement` \r\n* "
           AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: |
                Period during which the agreement is valid
           AgreementVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
              description: >-
                A characteristic of agreement which refers to the
                LifecycleStatus of agreement (e.g., potential, offered,
                confirmed, completed, signed, terminated).
           AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                The identifier of agreement like Agreement Number, Contract
                Number, Contract Registration Number, etc. 
           AgreementDate:
              $ref: '#/components/schemas/Datetime'
              description: >-
                A characteristic of agreement which refers to 1) LifecycleDate
                of agreement (e.g., SignedDate, TerminatedDate, FulfilledDate)
                OR 2) ArrangedDate of agreement (e.g., StartingDate, EndingDate,
                ValidityPeriod, EffectiveDate).
           AgreementDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Date:
        type: object
        description: 'Date on which the agreement was signed by all parties. (ISO20022) '
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Agreementlifecyclestatus:
        type: object
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
           AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AgreementLifecycleStatusType:
              enum:
                   -  Offered
                   -  Confirmed
                   -  Completed
                   -  Signed
                   -  Terminated
                   -  Rejected
              type: string
              description: ">-\r\n* `Offered` \r\n* `Confirmed` \r\n* `Completed` \r\n* `Signed` \r\n* `Terminated` \r\n* `Rejected` \r\n* "
     DeviceAccessArrangement:
        type: object
        description: "\r\n - "
        properties:
           DeviceAccessArrangement:
              type: string
              description: >-
                An arrangement that allows or restricts the access to a device
                through a specific access point
              format: Class
     InitiateIssuedDeviceAllocationResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     InitiateIssuedDeviceAllocation:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateIssuedDeviceAllocationRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
              description: "\r\n"
           IssueDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     UpdateIssuedDeviceAllocationResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateIssuedDeviceAllocation:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlIssuedDeviceAllocationRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
              description: "\r\n"
           IssueDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     ControlIssuedDeviceAllocationResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlIssuedDeviceAllocation:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExchangeIssuedDeviceAllocationRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
              description: "\r\n"
           IssueDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     ExchangeIssuedDeviceAllocationResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExchangeIssuedDeviceAllocation:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveIssuedDeviceAllocationRequest:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
              description: "\r\n"
           IssueDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     RetrieveIssuedDeviceAllocationResponse:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveIssuedDeviceAllocation:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     InitiatePasswordAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           PasswordValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     Log:
        type: object
        description: "\r\n - "
        properties:
           LogType:
              type: string
              description: ''
              format: String
           LogPeriod:
              type: string
              description: ''
              format: String
           LogDate:
              type: string
              description: Key dates associated with the log (e.g. start time).
              format: String
           LogIdentification:
              type: string
              description: ''
              format: String
     InitiatePasswordAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           PasswordValue:
              $ref: '#/components/schemas/Value'
           UsageLog:
              $ref: '#/components/schemas/Log'
     InitiatePasswordAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdatePasswordAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           PasswordValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     UpdatePasswordAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           PasswordValue:
              $ref: '#/components/schemas/Value'
           UsageLog:
              $ref: '#/components/schemas/Log'
     UpdatePasswordAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlPasswordAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           PasswordValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     ControlPasswordAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           PasswordValue:
              $ref: '#/components/schemas/Value'
           UsageLog:
              $ref: '#/components/schemas/Log'
     ControlPasswordAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExchangePasswordAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           PasswordValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     ExchangePasswordAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           PasswordValue:
              $ref: '#/components/schemas/Value'
           UsageLog:
              $ref: '#/components/schemas/Log'
     ExchangePasswordAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     CapturePasswordAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           PasswordValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     CapturePasswordAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           PasswordValue:
              $ref: '#/components/schemas/Value'
           UsageLog:
              $ref: '#/components/schemas/Log'
     CapturePasswordAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrievePasswordAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           PasswordValue:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     RetrievePasswordAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           PasswordValue:
              $ref: '#/components/schemas/Value'
           UsageLog:
              $ref: '#/components/schemas/Log'
     RetrievePasswordAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     InitiateQuestionAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           RequestText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ResponseText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     InitiateQuestionAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           RequestText:
              $ref: '#/components/schemas/Text'
           ResponseText:
              $ref: '#/components/schemas/Text'
           UsageLog:
              $ref: '#/components/schemas/Log'
     InitiateQuestionAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateQuestionAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           RequestText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ResponseText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     UpdateQuestionAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           RequestText:
              $ref: '#/components/schemas/Text'
           ResponseText:
              $ref: '#/components/schemas/Text'
           UsageLog:
              $ref: '#/components/schemas/Log'
     UpdateQuestionAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlQuestionAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           RequestText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ResponseText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     ControlQuestionAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           RequestText:
              $ref: '#/components/schemas/Text'
           ResponseText:
              $ref: '#/components/schemas/Text'
           UsageLog:
              $ref: '#/components/schemas/Log'
     ControlQuestionAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExchangeQuestionAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           RequestText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ResponseText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     ExchangeQuestionAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           RequestText:
              $ref: '#/components/schemas/Text'
           ResponseText:
              $ref: '#/components/schemas/Text'
           UsageLog:
              $ref: '#/components/schemas/Log'
     ExchangeQuestionAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     CaptureQuestionAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           RequestText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ResponseText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     CaptureQuestionAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           RequestText:
              $ref: '#/components/schemas/Text'
           ResponseText:
              $ref: '#/components/schemas/Text'
           UsageLog:
              $ref: '#/components/schemas/Log'
     CaptureQuestionAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveQuestionAssignmentRequest:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RecentValues:
              $ref: '#/components/schemas/Value'
              description: "\r\n"
           RequestText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ResponseText:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     RetrieveQuestionAssignmentResponse:
        type: object
        description: ''
        properties:
           FormatRules:
              $ref: '#/components/schemas/Text'
           RecentValues:
              $ref: '#/components/schemas/Value'
           RequestText:
              $ref: '#/components/schemas/Text'
           ResponseText:
              $ref: '#/components/schemas/Text'
           UsageLog:
              $ref: '#/components/schemas/Log'
     RetrieveQuestionAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateDeviceAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     Feature:
        type: object
        description: "\r\n - "
        properties:
           FeatureType:
              $ref: '#/components/schemas/Text'
              description: ''
           FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           FeatureName:
              $ref: '#/components/schemas/Name'
              description: ''
           FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           FeatureDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     UpdateDeviceAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Text'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     UpdateDeviceAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlDeviceAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     ControlDeviceAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Text'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     ControlDeviceAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     CaptureDeviceAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     CaptureDeviceAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Text'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     CaptureDeviceAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveDeviceAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     RetrieveDeviceAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceSerialNumber:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           VersionNumber:
              type: string
              description: ''
              format: Number
           CustomerCustomizationReference:
              enum:
                   -  CardDesign
              type: string
              description: ">-\r\n* `CardDesign` \r\n* "
           Deliverymethod:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Text'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     RetrieveDeviceAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     InitiateBiometricAssignmentRequest:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     InitiateBiometricAssignmentResponse:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
     InitiateBiometricAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateBiometricAssignmentRequest:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     UpdateBiometricAssignmentResponse:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
     UpdateBiometricAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlBiometricAssignmentRequest:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ControlBiometricAssignmentResponse:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
     ControlBiometricAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExchangeBiometricAssignmentRequest:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExchangeBiometricAssignmentResponse:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
     ExchangeBiometricAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveBiometricAssignmentRequest:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RetrieveBiometricAssignmentResponse:
        type: object
        description: ''
        properties:
           BiometricType:
              $ref: '#/components/schemas/Text'
           BiometricRegisteredDetail:
              $ref: '#/components/schemas/Text'
     RetrieveBiometricAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateReaderAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     Location:
        type: object
        description: ' Location|Location (https://www.iso20022.org/standardsrepository/type/Location)|Standard|ISO20022 BM  ()'
        properties:
           LocationDescription:
              $ref: '#/components/schemas/Text'
              description: >-
                A description of the property, particularly if it has landmark
                characteristics.
           LocationDateTime:
              $ref: '#/components/schemas/Datetime'
              description: >-
                Key dates associated with the directory entry (e.g. open date,
                refresh date).
           LocationStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                The tracked status (e.g. under construction or repair,
                inhabited, vacant).
           LocationType:
              enum:
                   -  Continent
                   -  Country
                   -  State
                   -  District
                   -  Province
                   -  Town
                   -  City
                   -  Region
              type: string
              description: ">-\r\n* `Continent` \r\n* `Country` \r\n* `State` \r\n* `District` \r\n* `Province` \r\n* `Town` \r\n* `City` \r\n* `Region` \r\n* "
           LocationZoningType:
              $ref: '#/components/schemas/Text'
              description: >-
                The planning or zoning status (e.g. residential, commercial,
                industrial).
           LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
              description: >-
                The general purpose and neighborhood of the property  (e.g.
                residential, industrial, commercial).
           LocationConstructionType:
              $ref: '#/components/schemas/Text'
              description: >-
                The construction approach for a property at the location (e.g.
                era and architecture as might be used in valuation).
           LocationOccupancyType:
              $ref: '#/components/schemas/Text'
              description: >-
                The type of occupancy (e.g. residency, business, retail,
                entertainment).
           LocationValue:
              $ref: '#/components/schemas/Value'
              description: >-
                The estimated (book) value of the property at the location 
                rental and purchase as appropriate.
           LocationCapacity:
              $ref: '#/components/schemas/Text'
              description: >-
                An indication of the size or scale of the property where
                appropriate (e.g. 4 bedroom, 600 seat auditorium, 40 cover
                restaurant).
           LocationIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           LocationAddress:
              $ref: '#/components/schemas/Address'
              description: ''
           Location:
              type: string
              description: >-
                The definition of an addressable space/position both in real and
                virtual environments with associated uses and entitlements
              format: Class
           LocationName:
              $ref: '#/components/schemas/Name'
              description: Name (label) of the location. (ISO20022)
           LocationTimeZone:
              $ref: '#/components/schemas/Text'
              description: Local time zone.
     Address:
        type: object
        description: ' '
        properties:
           AddressType:
              enum:
                   -  PostalAddress
                   -  GeolocationAddress
                   -  LatitudeAddress
                   -  LongitudeAddress
                   -  ElectronicAddress
              type: string
              description: ">-\r\n* `PostalAddress` \r\n* `GeolocationAddress` \r\n* `LatitudeAddress` \r\n* `LongitudeAddress` \r\n* `ElectronicAddress` \r\n* "
           LocationReference:
              $ref: '#/components/schemas/Location'
              description: ''
           Address:
              type: string
              description: >-
                A specific designation or description of a location, typically
                used for specifying the location or destination of something or
                someone
              format: Class
     UpdateReaderAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     UpdateReaderAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlReaderAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     ControlReaderAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     ControlReaderAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     CaptureReaderAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     CaptureReaderAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     CaptureReaderAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveReaderAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
              description: "\r\n"
           UsageLog:
              $ref: '#/components/schemas/Log'
              description: "\r\n"
     RetrieveReaderAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedReaderDeviceSerialNumber:
              $ref: '#/components/schemas/Identifier'
           VersionNumber:
              type: string
              description: ''
              format: Number
           IssueLocation:
              $ref: '#/components/schemas/Location'
           IssuedDeviceConfiguration:
              $ref: '#/components/schemas/Feature'
           UsageLog:
              $ref: '#/components/schemas/Log'
     RetrieveReaderAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     InitiateChequesAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
     InitiateChequesAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Location'
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
     InitiateChequesAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ControlChequesAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
     ControlChequesAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Location'
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
     ControlChequesAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExchangeChequesAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
     ExchangeChequesAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Location'
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
     ExchangeChequesAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveChequesAssignmentRequest:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           IssueLocation:
              $ref: '#/components/schemas/Location'
              description: ''
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
              description: ''
     RetrieveChequesAssignmentResponse:
        type: object
        description: ''
        properties:
           IssuedDeviceTemplateValues:
              $ref: '#/components/schemas/Text'
           IssueLocation:
              $ref: '#/components/schemas/Location'
           SequenceNumber:
              $ref: '#/components/schemas/Identifier'
     RetrieveChequesAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     CaptureTokenAssignmentRequest:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
              description: "\r\n"
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
              description: ''
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
              description: "\r\n"
     TokenRequest:
        type: object
        description: "\r\n - "
        properties:
           TokenRequestIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenRequestReason:
              $ref: '#/components/schemas/Text'
              description: ''
     Account:
        type: object
        description: ' Account|Account  (https://www.iso20022.org/standardsrepository/type/Account)|Standard|ISO20022 BM ()'
        properties:
           AccountStatus:
              $ref: '#/components/schemas/Accountstatus'
              description: >-
                A characteristic of account which refers to the LifecycleStatus
                of account like opened, closed, blocked, etc.


                Specifies the current state of an account. (ISO20022)
           AccountIdentification:
              $ref: '#/components/schemas/Accountidentification'
              description: The identifier of account like Account Number.
           AccountDate:
              $ref: '#/components/schemas/Accountdate'
              description: >-
                A characteristic of account which refers to LifecycleDate of
                account (e.g., ClosingDate, OpeningDate, LiveDate, etc.) 
           AccountType:
              $ref: '#/components/schemas/Accounttype'
              description: >-
                Specifies the category of account like payment account, loan
                account, cash account, securities account, etc. 
           AccountPurpose:
              $ref: '#/components/schemas/Text'
              description: ''
           AccountBalance:
              $ref: '#/components/schemas/Accountbalance'
              description: >-
                The state of the obligations managed on the account, the result
                of all entries on the account.


                Numerical representation of the net increases and decreases in
                an account at a specific point in time. (ISO20022)


                Banking: Amount available in an account for withdrawal or use.

                Read more:
                http://www.businessdictionary.com/definition/balance.html


                Bookkeeping: Difference between the debit and credit sides of an
                account.

                Read more:
                http://www.businessdictionary.com/definition/balance.html
           AccountCurrency:
              $ref: '#/components/schemas/Accountcurrency'
              description: ''
           AccountDescription:
              $ref: '#/components/schemas/Text'
              description: |
                A detailed explanation or commentary of account. 
           AccountName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of account


                The account name is the name or names of the account owner(s)
                represented at an account level, as displayed by the ASPSP's
                online channels. Note, the account name is not the product name
                or the nickname of the account. (Open Banking)
     Accountstatus:
        type: object
        description: >-
          A characteristic of account which refers to the LifecycleStatus of
          account like opened, closed, blocked, etc.


          Specifies the current state of an account. (ISO20022) 
        properties:
           AccountStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AccountStatusType:
              enum:
                   -  Enabled
                   -  Disabled
                   -  Deleted
                   -  Proforma
                   -  Pending
              type: string
              description: ">-\r\n* `Enabled` \r\n* `Disabled` \r\n* `Deleted` \r\n* `Proforma` \r\n* `Pending` \r\n* "
           Accountstatus:
              type: string
              description: Specifies the current state of an account. (ISO20022)
              format: DataType
     Accountidentification:
        type: object
        description: 'The identifier of account like Account Number. '
        properties:
           AccountIdentificationType:
              enum:
                   -  BBAN
                   -  IBAN
                   -  UPIC
                   -  AccountNumber
                   -  PAN
                   -  Paym
                   -  Wallet
              type: string
              description: ">-\r\n* `BBAN` \r\n* `IBAN` \r\n* `UPIC` \r\n* `AccountNumber` \r\n* `PAN` \r\n* `Paym` \r\n* `Wallet` \r\n* "
           AccountIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Accountidentification:
              type: string
              description: ''
              format: DataType
     Accountdate:
        type: object
        description: >-
          A characteristic of account which refers to LifecycleDate of account
          (e.g., ClosingDate, OpeningDate, LiveDate, etc.)  
        properties:
           AccountDateType:
              enum:
                   -  OpeningDate
                   -  ClosingDate
                   -  BlockingDate
                   -  MaturityDate
                   -  LiveDate
              type: string
              description: ">-\r\n* `OpeningDate` \r\n* `ClosingDate` \r\n* `BlockingDate` \r\n* `MaturityDate` \r\n* `LiveDate` \r\n* "
           AccountDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Accountdate:
              type: string
              description: ''
              format: DataType
     Accounttype:
        type: object
        description: >-
          Specifies the category of account like payment account, loan account,
          cash account, securities account, etc.  
        properties:
           AccountType:
              enum:
                   -  DebitAccount
                   -  CreditAccount
                   -  VostroAcount
                   -  NostroAccount
                   -  PaymentAccount
                   -  SettlementAccount
                   -  SavingAccount
                   -  CurrentAccount
                   -  CashAccount
                   -  LoanAccount
              type: string
              description: ">-\r\n* `DebitAccount` \r\n* `CreditAccount` \r\n* `VostroAcount` \r\n* `NostroAccount` \r\n* `PaymentAccount` \r\n* `SettlementAccount` \r\n* `SavingAccount` \r\n* `CurrentAccount` \r\n* `CashAccount` \r\n* `LoanAccount` \r\n* "
           AccountTypeName:
              $ref: '#/components/schemas/Name'
              description: ''
           Accounttype:
              type: string
              description: 'A classification of accounts based on their purpose '
              format: DataType
     Accountbalance:
        type: object
        description: >-
          The state of the obligations managed on the account, the result of all
          entries on the account.


          Numerical representation of the net increases and decreases in an
          account at a specific point in time. (ISO20022)


          Banking: Amount available in an account for withdrawal or use.

          Read more: http://www.businessdictionary.com/definition/balance.html


          Bookkeeping: Difference between the debit and credit sides of an
          account.

          Read more: http://www.businessdictionary.com/definition/balance.html 
        properties:
           BalanceAmount:
              $ref: '#/components/schemas/Amount'
              description: ''
           BalanceType:
              enum:
                   -  Openingbalance
                   -  Closingbalance
                   -  Currentbalance
                   -  Availablebalance
                   -  Ledgerbalance
                   -  Reservebalance
                   -  Freebalance
                   -  Principalbalance
              type: string
              description: ">-\r\n* `Openingbalance` \r\n* `Closingbalance` \r\n* `Currentbalance` \r\n* `Availablebalance` \r\n* `Ledgerbalance` \r\n* `Reservebalance` \r\n* `Freebalance` \r\n* `Principalbalance` \r\n* "
           BalanceDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           BalanceIndicator:
              enum:
                   -  Debit
                   -  Credit
              type: string
              description: ">-\r\n* `Debit` \r\n* `Credit` \r\n* "
           Accountbalance:
              type: string
              description: >-
                Numerical representation of the net increases and decreases in
                an account at a specific point in time. (ISO20022)

                https://www.iso20022.org/standardsrepository/type/Balance
              format: DataType
     Amount:
        type: object
        description: ' '
        properties:
           AmountValue:
              $ref: '#/components/schemas/Value'
              description: ''
           AmountCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           DecimalPointPosition:
              type: string
              description: |
                Decimal point position starts calulating from the right
              format: String
           AmountType:
              enum:
                   -  Principal
                   -  Actual
                   -  Estimated
                   -  Maximum
                   -  Default
                   -  Replacement
                   -  Incremental
                   -  Decremental
                   -  Reserved
                   -  Available
                   -  Used
              type: string
              description: ">-\r\n* `Principal` \r\n* `Actual` \r\n* `Estimated` \r\n* `Maximum` \r\n* `Default` \r\n* `Replacement` \r\n* `Incremental` \r\n* `Decremental` \r\n* `Reserved` \r\n* `Available` \r\n* `Used` \r\n* "
     Currencycode:
        type: object
        description: ' '
        properties:
           Currencycode:
              type: string
              description: >-
                A code identifying a currency according to ISO4217.

                A currency is a system of money in general use in a particular
                country.


                Code allocated to a currency, by a maintenance agency, under an
                international identification scheme as described in the latest
                edition of the international standard ISO 4217 "Codes for the
                representation of currencies and funds". Valid currency codes
                are registered with the ISO 4217 Maintenance Agency, and consist
                of three contiguous letters. (ISO20022)

              format: DataType
     Accountcurrency:
        type: object
        description: ' '
        properties:
           AccountCurrencyType:
              enum:
                   -  BaseCurrency
                   -  ReportingCurrency
                   -  SecondaryCurrency
                   -  TransferCurrency
              type: string
              description: ">-\r\n* `BaseCurrency` \r\n* `ReportingCurrency` \r\n* `SecondaryCurrency` \r\n* `TransferCurrency` \r\n* "
           AccountCurrency:
              $ref: '#/components/schemas/Currencycode'
              description: ''
           Accountcurrency:
              type: string
              description: ''
              format: DataType
     PaymentCard:
        type: object
        description: ' PaymentCard|PaymentCard (https://www.iso20022.org/standardsrepository/type/PaymentCard)|Standard|ISO20022 BM ()'
        properties:
           CardType:
              enum:
                   -  Creditcard
                   -  Debitcard
              type: string
              description: ">-\r\n* `Creditcard` \r\n* `Debitcard` \r\n* "
           CardNumber:
              type: string
              description: >-
                Number embossed on a card that links the card to the account
                owner and account servicer (sometimes called personal account
                number or PAN). (ISO20022)
              format: Number
           CardStartDate:
              $ref: '#/components/schemas/Datetime'
              description: Year and month the card is available for use. (ISO20022)
           CardExpiryDate:
              $ref: '#/components/schemas/Datetime'
              description: Year and month the card expires. (ISO20022)
           CardSecurityCode:
              type: string
              description: >-
                Security code written on the card, sometimes called card
                security code (CSC). (ISO20022)
              format: Number
           CardVerificationValue:
              type: string
              description: ''
              format: Number
           BankIdentificationNumber:
              $ref: '#/components/schemas/Identifier'
              description: >-
                The bank identification number uniquely identifies the
                institution issuing the card. The BIN is key in the process of
                matching transactions to the issuer of the charge card.
     Device:
        type: object
        description: "\r\n - "
        properties:
           DeviceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           DeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           DeviceProperty:
              $ref: '#/components/schemas/Text'
              description: >-
                Property of a device relevant for its use.


                A device has the characteristics of the device type it belongs
                to,possibly specified

                e.g. . a device of the type "cheque book" will have cheques. The
                device specifies how many and what the number range is.

                e.g. an electronic banking app consists of software modules, the
                device specifies what version 
           DeviceElement:
              $ref: '#/components/schemas/Text'
              description: >-
                An element of the device that can be used independently and is
                individually identified


                e.g. a cheque in a chequebook
           DeviceStatus:
              $ref: '#/components/schemas/Status'
              description: |
                The life cycle stage of a device

                e.g. active, defect
           DeviceVersion:
              type: string
              description: ''
              format: Number
           DeviceDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           DeviceDescription:
              $ref: '#/components/schemas/Text'
              description: ''
           DeviceName:
              $ref: '#/components/schemas/Name'
              description: ''
           DeviceLanguage:
              $ref: '#/components/schemas/Text'
              description: Preferred language set on the device
           DevicePhoneNumber:
              $ref: '#/components/schemas/Text'
              description: Phone number associated with the device.
           DeviceLocation:
              $ref: '#/components/schemas/Location'
              description: Geographical location of the device.
           DeviceManufacturer:
              $ref: '#/components/schemas/Text'
              description: Manufacturer of the device.
           DeviceCountry:
              $ref: '#/components/schemas/Country'
              description: Country of the location.
           DeviceAddress:
              $ref: '#/components/schemas/Address'
              description: >-
                The address associated with the device like Internet Protocol
                address, email Address
           DeviceAddressType:
              enum:
                   -  PostalAddress
                   -  GeolocationAddress
                   -  LatitudeAddress
                   -  LongitudeAddress
                   -  ElectronicAddress
              type: string
              description: ">-\r\n* `PostalAddress` \r\n* `GeolocationAddress` \r\n* `LatitudeAddress` \r\n* `LongitudeAddress` \r\n* `ElectronicAddress` \r\n* "
           DeviceOperatingSystem:
              enum:
                   -  Android
                   -  Ios
                   -  Windows
                   -  Blackberry
                   -  Tizen
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `Android` \r\n* `Ios` \r\n* `Windows` \r\n* `Blackberry` \r\n* `Tizen` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
           DeviceIdentificationType:
              enum:
                   -  IMEI
                   -  Serialnumber
                   -  Secureelementidentification
                   -  Othernational
                   -  Otherprivate
              type: string
              description: ">-\r\n* `IMEI` \r\n* `Serialnumber` \r\n* `Secureelementidentification` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* "
     Country:
        type: object
        description: 'Country of the location. '
        properties:
           NationalRegulatoryAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Regulatory authority of the country. (ISO20022)
     CaptureTokenAssignmentResponse:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
     CaptureTokenAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     RetrieveTokenAssignmentRequest:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
              description: "\r\n"
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
              description: ''
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
              description: "\r\n"
     RetrieveTokenAssignmentResponse:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
     RetrieveTokenAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     UpdateTokenAssignmentRequest:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
              description: "\r\n"
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
              description: ''
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
              description: "\r\n"
     UpdateTokenAssignmentResponse:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
     UpdateTokenAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ProvideTokenAssignmentRequest:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
              description: "\r\n"
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
              description: ''
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
              description: "\r\n"
     ProvideTokenAssignmentResponse:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
     ProvideTokenAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     ExecuteTokenAssignmentRequest:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
              description: ''
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
              description: "\r\n"
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
              description: ''
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
              description: ''
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
              description: "\r\n"
     ExecuteTokenAssignmentResponse:
        type: object
        description: ''
        properties:
           TokenIdentificationCode:
              $ref: '#/components/schemas/Identifier'
           TokenServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestorReference:
              $ref: '#/components/schemas/Involvedparty'
           RequestReference:
              $ref: '#/components/schemas/TokenRequest'
           RequestReasonDescription:
              $ref: '#/components/schemas/Text'
           PaymentAccountReference:
              $ref: '#/components/schemas/Account'
           CardReference:
              $ref: '#/components/schemas/PaymentCard'
           IdentificationandVerificationMethodType:
              enum:
                   -  AssertedAuthentication
                   -  InteractiveAuthentication
              type: string
              description: ">-\r\n* `AssertedAuthentication` \r\n* `InteractiveAuthentication` \r\n* "
           TokenStatus:
              enum:
                   -  Active
                   -  Expired
                   -  Cancelled
                   -  Generated
                   -  Stored
                   -  Mapped
                   -  Routed
                   -  Suspension
                   -  Updated
              type: string
              description: ">-\r\n* `Active` \r\n* `Expired` \r\n* `Cancelled` \r\n* `Generated` \r\n* `Stored` \r\n* `Mapped` \r\n* `Routed` \r\n* `Suspension` \r\n* `Updated` \r\n* "
           TokenStatusDate:
              $ref: '#/components/schemas/Datetime'
           TokenDeviceReference:
              $ref: '#/components/schemas/Device'
     ExecuteTokenAssignment:
        type: object
        description: ''
        properties:
           CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           IssuedDeviceType:
              enum:
                   -  Securecardreader
                   -  Nonsecurecardreader
                   -  Mobile
                   -  Tablet
                   -  Personalcomputer
                   -  Othernational
                   -  Otherprivate
                   -  Wearable
                   -  Vehicle
                   -  Embedded
                   -  Keyfob
                   -  Jewellery
                   -  Sticker
                   -  Gamingdevice
                   -  Watch
                   -  Unknown
                   -  BiometricDevice
              type: string
              description: ">-\r\n* `Securecardreader` \r\n* `Nonsecurecardreader` \r\n* `Mobile` \r\n* `Tablet` \r\n* `Personalcomputer` \r\n* `Othernational` \r\n* `Otherprivate` \r\n* `Wearable` \r\n* `Vehicle` \r\n* `Embedded` \r\n* `Keyfob` \r\n* `Jewellery` \r\n* `Sticker` \r\n* `Gamingdevice` \r\n* `Watch` \r\n* `Unknown` \r\n* `BiometricDevice` \r\n* "
           AssociatedPermissions:
              $ref: '#/components/schemas/DeviceAccessArrangement'
           IssueDate:
              $ref: '#/components/schemas/Datetime'
           ValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     InitiateIssuedDeviceAllocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateIssuedDeviceAllocationRequest'
        required: true
     UpdateIssuedDeviceAllocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateIssuedDeviceAllocationRequest'
        required: true
     ControlIssuedDeviceAllocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlIssuedDeviceAllocationRequest'
        required: true
     ExchangeIssuedDeviceAllocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeIssuedDeviceAllocationRequest'
        required: true
     RetrieveIssuedDeviceAllocationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveIssuedDeviceAllocationRequest'
        required: true
     InitiatePasswordAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiatePasswordAssignmentRequest'
        required: true
     UpdatePasswordAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdatePasswordAssignmentRequest'
        required: true
     ControlPasswordAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlPasswordAssignmentRequest'
        required: true
     ExchangePasswordAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangePasswordAssignmentRequest'
        required: true
     CapturePasswordAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CapturePasswordAssignmentRequest'
        required: true
     RetrievePasswordAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrievePasswordAssignmentRequest'
        required: true
     InitiateQuestionAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateQuestionAssignmentRequest'
        required: true
     UpdateQuestionAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateQuestionAssignmentRequest'
        required: true
     ControlQuestionAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlQuestionAssignmentRequest'
        required: true
     ExchangeQuestionAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeQuestionAssignmentRequest'
        required: true
     CaptureQuestionAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureQuestionAssignmentRequest'
        required: true
     RetrieveQuestionAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveQuestionAssignmentRequest'
        required: true
     UpdateDeviceAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDeviceAssignmentRequest'
        required: true
     ControlDeviceAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlDeviceAssignmentRequest'
        required: true
     CaptureDeviceAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureDeviceAssignmentRequest'
        required: true
     RetrieveDeviceAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDeviceAssignmentRequest'
        required: true
     InitiateBiometricAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateBiometricAssignmentRequest'
        required: true
     UpdateBiometricAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBiometricAssignmentRequest'
        required: true
     ControlBiometricAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlBiometricAssignmentRequest'
        required: true
     ExchangeBiometricAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeBiometricAssignmentRequest'
        required: true
     RetrieveBiometricAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBiometricAssignmentRequest'
        required: true
     UpdateReaderAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateReaderAssignmentRequest'
        required: true
     ControlReaderAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlReaderAssignmentRequest'
        required: true
     CaptureReaderAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureReaderAssignmentRequest'
        required: true
     RetrieveReaderAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveReaderAssignmentRequest'
        required: true
     InitiateChequesAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateChequesAssignmentRequest'
        required: true
     ControlChequesAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlChequesAssignmentRequest'
        required: true
     ExchangeChequesAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeChequesAssignmentRequest'
        required: true
     RetrieveChequesAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveChequesAssignmentRequest'
        required: true
     CaptureTokenAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureTokenAssignmentRequest'
        required: true
     RetrieveTokenAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveTokenAssignmentRequest'
        required: true
     UpdateTokenAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTokenAssignmentRequest'
        required: true
     ProvideTokenAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ProvideTokenAssignmentRequest'
        required: true
     ExecuteTokenAssignmentRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteTokenAssignmentRequest'
        required: true
  parameters:
     issueddeviceallocationid:
        name: issueddeviceallocationid
        in: path
        required: true
        style: simple
        schema:
          type: string
     passwordassignmentid:
        name: passwordassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
     questionassignmentid:
        name: questionassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
     deviceassignmentid:
        name: deviceassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
     biometricassignmentid:
        name: biometricassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
     readerassignmentid:
        name: readerassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
     chequesassignmentid:
        name: chequesassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
     tokenassignmentid:
        name: tokenassignmentid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     InitiateIssuedDeviceAllocationResponse:
        description: IssuedDeviceAllocationInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateIssuedDeviceAllocationResponse'
     UpdateIssuedDeviceAllocationResponse:
        description: IssuedDeviceAllocationUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateIssuedDeviceAllocationResponse'
     ControlIssuedDeviceAllocationResponse:
        description: IssuedDeviceAllocationControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlIssuedDeviceAllocationResponse'
     ExchangeIssuedDeviceAllocationResponse:
        description: IssuedDeviceAllocationExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeIssuedDeviceAllocationResponse'
     RetrieveIssuedDeviceAllocationResponse:
        description: IssuedDeviceAllocationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveIssuedDeviceAllocationResponse'
     InitiatePasswordAssignmentResponse:
        description: PasswordAssignmentInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiatePasswordAssignmentResponse'
     UpdatePasswordAssignmentResponse:
        description: PasswordAssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdatePasswordAssignmentResponse'
     ControlPasswordAssignmentResponse:
        description: PasswordAssignmentControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlPasswordAssignmentResponse'
     ExchangePasswordAssignmentResponse:
        description: PasswordAssignmentExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangePasswordAssignmentResponse'
     CapturePasswordAssignmentResponse:
        description: PasswordAssignmentCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CapturePasswordAssignmentResponse'
     RetrievePasswordAssignmentResponse:
        description: PasswordAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrievePasswordAssignmentResponse'
     InitiateQuestionAssignmentResponse:
        description: QuestionAssignmentInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateQuestionAssignmentResponse'
     UpdateQuestionAssignmentResponse:
        description: QuestionAssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateQuestionAssignmentResponse'
     ControlQuestionAssignmentResponse:
        description: QuestionAssignmentControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlQuestionAssignmentResponse'
     ExchangeQuestionAssignmentResponse:
        description: QuestionAssignmentExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeQuestionAssignmentResponse'
     CaptureQuestionAssignmentResponse:
        description: QuestionAssignmentCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureQuestionAssignmentResponse'
     RetrieveQuestionAssignmentResponse:
        description: QuestionAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveQuestionAssignmentResponse'
     UpdateDeviceAssignmentResponse:
        description: DeviceAssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDeviceAssignmentResponse'
     ControlDeviceAssignmentResponse:
        description: DeviceAssignmentControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlDeviceAssignmentResponse'
     CaptureDeviceAssignmentResponse:
        description: DeviceAssignmentCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureDeviceAssignmentResponse'
     RetrieveDeviceAssignmentResponse:
        description: DeviceAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDeviceAssignmentResponse'
     InitiateBiometricAssignmentResponse:
        description: BiometricAssignmentInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateBiometricAssignmentResponse'
     UpdateBiometricAssignmentResponse:
        description: BiometricAssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBiometricAssignmentResponse'
     ControlBiometricAssignmentResponse:
        description: BiometricAssignmentControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlBiometricAssignmentResponse'
     ExchangeBiometricAssignmentResponse:
        description: BiometricAssignmentExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeBiometricAssignmentResponse'
     RetrieveBiometricAssignmentResponse:
        description: BiometricAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBiometricAssignmentResponse'
     UpdateReaderAssignmentResponse:
        description: ReaderAssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateReaderAssignmentResponse'
     ControlReaderAssignmentResponse:
        description: ReaderAssignmentControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlReaderAssignmentResponse'
     CaptureReaderAssignmentResponse:
        description: ReaderAssignmentCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureReaderAssignmentResponse'
     RetrieveReaderAssignmentResponse:
        description: ReaderAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveReaderAssignmentResponse'
     InitiateChequesAssignmentResponse:
        description: ChequesAssignmentInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateChequesAssignmentResponse'
     ControlChequesAssignmentResponse:
        description: ChequesAssignmentControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlChequesAssignmentResponse'
     ExchangeChequesAssignmentResponse:
        description: ChequesAssignmentExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeChequesAssignmentResponse'
     RetrieveChequesAssignmentResponse:
        description: ChequesAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveChequesAssignmentResponse'
     CaptureTokenAssignmentResponse:
        description: TokenAssignmentCapture
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/CaptureTokenAssignmentResponse'
     RetrieveTokenAssignmentResponse:
        description: TokenAssignmentRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveTokenAssignmentResponse'
     UpdateTokenAssignmentResponse:
        description: TokenAssignmentUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateTokenAssignmentResponse'
     ProvideTokenAssignmentResponse:
        description: TokenAssignmentProvide
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ProvideTokenAssignmentResponse'
     ExecuteTokenAssignmentResponse:
        description: TokenAssignmentExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteTokenAssignmentResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
