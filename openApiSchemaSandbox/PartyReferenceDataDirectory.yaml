openapi: 3.0.1
info:
  title: Party Reference Data Directory
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This service domain maintains
    a range of party reference information covering aspects including general
    reference details, contacts and associations and demographic information
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/PartyReferenceDataDirectory
paths:
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Register':
      post:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: InCR Register a customer entity in the catalog
        description: InCR Register a customer entity in the catalog
        operationId: PartyReferenceDataDirectoryEntry/Register
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/RegisterPartyReferenceDataDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Update':
      put:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: UpCR Update details about the customer's directory entry
        description: UpCR Update details about the customer's directory entry
        operationId: PartyReferenceDataDirectoryEntry/Update
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/UpdatePartyReferenceDataDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Control':
      put:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: CoCR Control the handling of a customer entry (e.g. terminate)
        description: CoCR Control the handling of a customer entry (e.g. terminate)
        operationId: PartyReferenceDataDirectoryEntry/Control
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ControlPartyReferenceDataDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Request':
      put:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: RqCR Request manual intervention with an entry (e.g. refresh content)
        description: RqCR Request manual intervention with an entry (e.g. refresh content)
        operationId: PartyReferenceDataDirectoryEntry/Request
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/RequestPartyReferenceDataDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Retrieve':
      get:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: ReCR Retrieve details about a customer directory entry
        description: ReCR Retrieve details about a customer directory entry
        operationId: PartyReferenceDataDirectoryEntry/Retrieve
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        responses:
          '200':
            $ref: >-
              #/components/responses/RetrievePartyReferenceDataDirectoryEntryResponse
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Exchange':
      put:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: EcCR Accept, verify, reject a directory entry
        description: EcCR Accept, verify, reject a directory entry
        operationId: PartyReferenceDataDirectoryEntry/Exchange
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExchangePartyReferenceDataDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/PartyReferenceDataDirectoryEntry/{partyreferencedatadirectoryentryid}/Execute':
      put:
        tags:
           - CR - PartyReferenceDataDirectoryEntry
        summary: ExCR Execute an automated action against an entry
        description: ExCR Execute an automated action against an entry
        operationId: PartyReferenceDataDirectoryEntry/Execute
        parameters:
           - $ref: '#/components/parameters/partyreferencedatadirectoryentryid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExecutePartyReferenceDataDirectoryEntryRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Demographics/{demographicsid}/Exchange':
      put:
        tags:
           - BQ - Demographics
        summary: EcBQ Accept, verify, reject etc. details of a customer directory entry
        description: EcBQ Accept, verify, reject etc. details of a customer directory entry
        operationId: Demographics/Exchange
        parameters:
           - $ref: '#/components/parameters/demographicsid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeDemographicsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Reference/{referenceid}/Update':
      put:
        tags:
           - BQ - Reference
        summary: UpBQ Update details about a reference entry for the customer
        description: UpBQ Update details about a reference entry for the customer
        operationId: Reference/Update
        parameters:
           - $ref: '#/components/parameters/referenceid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateReferenceRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Reference/{referenceid}/Retrieve':
      get:
        tags:
           - BQ - Reference
        summary: ReBQ Retrieve details about reference entries in the directory
        description: ReBQ Retrieve details about reference entries in the directory
        operationId: Reference/Retrieve
        parameters:
           - $ref: '#/components/parameters/referenceid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveReferenceResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Associations/{associationsid}/Update':
      put:
        tags:
           - BQ - Associations
        summary: UpBQ Update details about an association entry for the customer
        description: UpBQ Update details about an association entry for the customer
        operationId: Associations/Update
        parameters:
           - $ref: '#/components/parameters/associationsid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateAssociationsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Associations/{associationsid}/Retrieve':
      get:
        tags:
           - BQ - Associations
        summary: >-
          ReBQ Retrieve details about association entries in the directory
          record
        description: >-
          ReBQ Retrieve details about association entries in the directory
          record
        operationId: Associations/Retrieve
        parameters:
           - $ref: '#/components/parameters/associationsid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveAssociationsResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Demographics/{demographicsid}/Update':
      put:
        tags:
           - BQ - Demographics
        summary: UpBQ Update details about a customer's demographic entry
        description: UpBQ Update details about a customer's demographic entry
        operationId: Demographics/Update
        parameters:
           - $ref: '#/components/parameters/demographicsid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateDemographicsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Demographics/{demographicsid}/Retrieve':
      get:
        tags:
           - BQ - Demographics
        summary: >-
          ReBQ Retrieve details about customer demographics entries in the
          directory
        description: >-
          ReBQ Retrieve details about customer demographics entries in the
          directory
        operationId: Demographics/Retrieve
        parameters:
           - $ref: '#/components/parameters/demographicsid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveDemographicsResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BankRelations/{bankrelationsid}/Update':
      put:
        tags:
           - BQ - BankRelations
        summary: >-
          UpBQ Update details about a customer's bank relations entry for the
          customer
        description: >-
          UpBQ Update details about a customer's bank relations entry for the
          customer
        operationId: BankRelations/Update
        parameters:
           - $ref: '#/components/parameters/bankrelationsid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateBankRelationsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/BankRelations/{bankrelationsid}/Retrieve':
      get:
        tags:
           - BQ - BankRelations
        summary: >-
          ReBQ Retrieve details about customer bank relations entries in the
          directory
        description: >-
          ReBQ Retrieve details about customer bank relations entries in the
          directory
        operationId: BankRelations/Retrieve
        parameters:
           - $ref: '#/components/parameters/bankrelationsid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveBankRelationsResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/Associations/{associationsid}/Register':
      post:
        tags:
           - BQ - Associations
        summary: Capture Association Details
        description: Capture Association Details
        operationId: Associations/Register
        parameters:
           - $ref: '#/components/parameters/associationsid'
        requestBody:
          $ref: '#/components/requestBodies/RegisterAssociationsRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     RegisterPartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     Party:
        type: object
        description: ' Party|Party (https://www.iso20022.org/standardsrepository/type/Party)|Standard|ISO20022BM ()'
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           Party:
              type: string
              description: >-
                A party represents an autonomous entity in which a bank has a
                business interest. It has a legal definition and identity. A
                party is a Person, Organization, (a proposed definition for BIAN
                BOM adapted from BIAN Party Working Group) 


                 Entity involved in an activity. (ISO20022)
              format: Class
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. (ISO20022)
           
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Identifier:
        type: object
        description: ' '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Text:
        type: object
        description: ' '
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     RegisterPartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RegisterPartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdatePartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdatePartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdatePartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ControlPartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ControlPartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ControlPartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RequestPartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RequestPartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RequestPartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrievePartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrievePartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrievePartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExchangePartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExchangePartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExchangePartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExecutePartyReferenceDataDirectoryEntryRequest:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExecutePartyReferenceDataDirectoryEntryResponse:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExecutePartyReferenceDataDirectoryEntry:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     ExchangeDemographicsRequest:
        type: object
        description: ''
        properties:
           SocioEconomicClassification:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           EthnicityReligion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           Employment:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           EmploymentHistory:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           EducationHistory:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServicingConstraints:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExchangeDemographicsResponse:
        type: object
        description: ''
        properties:
           SocioEconomicClassification:
              $ref: '#/components/schemas/Text'
           EthnicityReligion:
              $ref: '#/components/schemas/Text'
           Employment:
              $ref: '#/components/schemas/Involvedparty'
           EmploymentHistory:
              $ref: '#/components/schemas/Text'
           EducationHistory:
              $ref: '#/components/schemas/Text'
           ServicingConstraints:
              $ref: '#/components/schemas/Text'
     ExchangeDemographics:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdateReferenceRequest:
        type: object
        description: ''
        properties:
           PartyLegalEntityReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyNameSalutation:
              $ref: '#/components/schemas/Name'
              description: ''
           GovernmentIssuedIdentityReference:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           GovernmentIssuedDocumentDetails:
              $ref: '#/components/schemas/PartyDocument'
              description: "\r\n"
           DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              description: "\r\n"
           ResidencyStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           DateofBirth:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Nationality:
              $ref: '#/components/schemas/Country'
              description: ''
           ResidentialAddress:
              $ref: '#/components/schemas/PostalAddress'
              description: ''
           eMailAddress:
              $ref: '#/components/schemas/ContactPoint'
              description: ''
           CellPhoneNumber:
              $ref: '#/components/schemas/ContactPoint'
              description: ''
           SocialNetworkContacts:
              $ref: '#/components/schemas/ContactPoint'
              description: ''
           PoliticalExposureType:
              enum:
                   -  Politicalexposureforeign
                   -  Politicalexposuredomestic
                   -  Nopoliticalexposure
              type: string
              description: ">-\r\n* `Politicalexposureforeign` \r\n* `Politicalexposuredomestic` \r\n* `Nopoliticalexposure` \r\n* "
           PoliticalExposureDescriptionRecord:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CorporateCustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CorporateCustomerLegalEntityReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CorporateAddress:
              $ref: '#/components/schemas/PostalAddress'
              description: ''
           CompanyOfficerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CompanyOfficerRole:
              $ref: '#/components/schemas/PartyRole'
              description: ''
           CustomerSinceDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyFullLegalName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyLegalStructure:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
           PartyAddress:
              $ref: '#/components/schemas/PostalAddress'
              description: ''
           PartyCountryOfResidence:
              $ref: '#/components/schemas/Country'
              description: ''
     PartyDocument:
        type: object
        description: "\r\n - "
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           DocumentReference:
              $ref: '#/components/schemas/Document'
              description: ''
           PartyDocumentType:
              enum:
                   -  WorkDocument
                   -  CertificationDocument
                   -  PersonalDocument
              type: string
              description: ">-\r\n* `WorkDocument` \r\n* `CertificationDocument` \r\n* `PersonalDocument` \r\n* "
     Document:
        type: object
        description: ' '
        properties:
           DocumentIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                An identifier that allows to uniquely refer to an instance of a
                Document.
           DocumentVersion:
              type: string
              description: ''
              format: Number
           DocumentType:
              enum:
                   -  Meteredserviceinvoice
                   -  Commercialinvoice
                   -  Creditnote
                   -  Debitnote
                   -  Hireinvoice
                   -  Selfbilledinvoice
                   -  Remittanceadvicemessage
                   -  Relatedpaymentinstruction
                   -  Commercialcontract
                   -  Foreignexchangedealreference
                   -  Statementofaccount
                   -  Dispatchadvice
                   -  Purchaseorder
                   -  Billoflading
                   -  Voucher
                   -  Accountreceivableopenitem
                   -  Cashierreceipt
                   -  Customerreceipt
                   -  Journal
                   -  Salereceipt
              type: string
              description: ">-\r\n* `Meteredserviceinvoice` \r\n* `Commercialinvoice` \r\n* `Creditnote` \r\n* `Debitnote` \r\n* `Hireinvoice` \r\n* `Selfbilledinvoice` \r\n* `Remittanceadvicemessage` \r\n* `Relatedpaymentinstruction` \r\n* `Commercialcontract` \r\n* `Foreignexchangedealreference` \r\n* `Statementofaccount` \r\n* `Dispatchadvice` \r\n* `Purchaseorder` \r\n* `Billoflading` \r\n* `Voucher` \r\n* `Accountreceivableopenitem` \r\n* `Cashierreceipt` \r\n* `Customerreceipt` \r\n* `Journal` \r\n* `Salereceipt` \r\n* "
           DocumentStatus:
              $ref: '#/components/schemas/Status'
              description: Status of the document (e.g. delivered, paid, etc.). ISO20022
           DocumentDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           DocumentName:
              $ref: '#/components/schemas/Name'
              description: ''
           DocumentDateTimeType:
              enum:
                   -  CreationDate
                   -  CapturingDate
                   -  VersionDate
                   -  ValueDate
                   -  IssueDate
              type: string
              description: ">-\r\n* `CreationDate` \r\n* `CapturingDate` \r\n* `VersionDate` \r\n* `ValueDate` \r\n* `IssueDate` \r\n* "
           DocumentPurpose:
              $ref: '#/components/schemas/Text'
              description: Specifies the function of the document. (ISO20022)
           DocumentFormat:
              $ref: '#/components/schemas/Text'
              description: ''
           DocumentSubject:
              $ref: '#/components/schemas/Text'
              description: ''
           DocumentDescription:
              $ref: '#/components/schemas/Text'
              description: ''
           DocumentValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
     Status:
        type: object
        description: 'Status of the document (e.g. delivered, paid, etc.). ISO20022 '
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     DocumentDirectoryEntry:
        type: object
        description: "\r\n - "
        properties:
           DocumentDirectoryEntryIdentification:
              type: string
              description: >-
                Identification allowing the retrieval of a document from a
                Document Directory
              format: String
     Country:
        type: object
        description: ' Country |Country (https://www.iso20022.org/standardsrepository/type/Country)|Standard|ISO20022 BM  ()'
        properties:
           NationalRegulatoryAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Regulatory authority of the country. (ISO20022)
     PostalAddress:
        type: object
        description: ' PostalAddress|PostalAddress (https://www.iso20022.org/standardsrepository/type/PostalAddress)|Standard|ISO20022 BM ()'
        properties:
           AddressType:
              enum:
                   -  Business
                   -  Correspondence
                   -  Deliveryto
                   -  Mailto
                   -  Pobox
                   -  Postal
                   -  Residential
                   -  Statement
              type: string
              description: ">-\r\n* `Business` \r\n* `Correspondence` \r\n* `Deliveryto` \r\n* `Mailto` \r\n* `Pobox` \r\n* `Postal` \r\n* `Residential` \r\n* `Statement` \r\n* "
           AddressLine:
              $ref: '#/components/schemas/Text'
              description: >-
                Information that locates and identifies a specific address, as
                defined by postal services, that is presented in free format
                text.
           StreetName:
              $ref: '#/components/schemas/Name'
              description: Name of a street or thoroughfare.
           BuildingNumber:
              type: string
              description: Number that identifies the position of a building on a street.
              format: Number
           PostCode:
              $ref: '#/components/schemas/Identifier'
              description: >-
                Identifier consisting of a group of letters and/or numbers that
                is added to a postal address to assist the sorting of mail.
           TownName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name of a builtup area, with defined boundaries, and a local
                government.
           CountrySubDivision:
              enum:
                   -  Continent
                   -  Country
                   -  State
                   -  District
                   -  Province
                   -  Town
                   -  City
                   -  Region
              type: string
              description: ">-\r\n* `Continent` \r\n* `Country` \r\n* `State` \r\n* `District` \r\n* `Province` \r\n* `Town` \r\n* `City` \r\n* `Region` \r\n* "
           Country:
              $ref: '#/components/schemas/Country'
              description: >-
                Nation with its own government, occupying a particular
                territory.
           Department:
              $ref: '#/components/schemas/Text'
              description: >-
                Identification of a division of a large organisation or
                building. (ISO20022)
           SubDepartment:
              $ref: '#/components/schemas/Text'
              description: >-
                Identification of a subdivision of a large organisation or
                building. (ISO20022)
     ContactPoint:
        type: object
        description: " ContactPoint\_|ContactPoint\_ (https://www.iso20022.org/standardsrepository/type/ContactPoint)|Standard|ISO20022 BM  ()"
        properties:
           ContactPointType:
              enum:
                   -  ElectronicAddress
                   -  PostalAddress
                   -  PhoneNumber
                   -  Socialnetworkaddress
              type: string
              description: ">-\r\n* `ElectronicAddress` \r\n* `PostalAddress` \r\n* `PhoneNumber` \r\n* `Socialnetworkaddress` \r\n* "
     PartyRole:
        type: object
        description: >-2
           Party/Role/PartyRole_x000D_
          |Party/Role/PartyRole
          (https://www.iso20022.org/standardsrepository/type/Role)|Standard|ISO20022
          BM () ()
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     UpdateReferenceResponse:
        type: object
        description: ''
        properties:
           PartyLegalEntityReference:
              $ref: '#/components/schemas/Party'
           PartyNameSalutation:
              $ref: '#/components/schemas/Name'
           GovernmentIssuedIdentityReference:
              $ref: '#/components/schemas/Partyidentification'
           GovernmentIssuedDocumentDetails:
              $ref: '#/components/schemas/PartyDocument'
           DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
           ResidencyStatus:
              $ref: '#/components/schemas/Status'
           DateofBirth:
              $ref: '#/components/schemas/Datetime'
           Nationality:
              $ref: '#/components/schemas/Country'
           ResidentialAddress:
              $ref: '#/components/schemas/PostalAddress'
           eMailAddress:
              $ref: '#/components/schemas/ContactPoint'
           CellPhoneNumber:
              $ref: '#/components/schemas/ContactPoint'
           SocialNetworkContacts:
              $ref: '#/components/schemas/ContactPoint'
           PoliticalExposureType:
              enum:
                   -  Politicalexposureforeign
                   -  Politicalexposuredomestic
                   -  Nopoliticalexposure
              type: string
              description: ">-\r\n* `Politicalexposureforeign` \r\n* `Politicalexposuredomestic` \r\n* `Nopoliticalexposure` \r\n* "
           PoliticalExposureDescriptionRecord:
              $ref: '#/components/schemas/Text'
           CorporateCustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CorporateCustomerLegalEntityReference:
              $ref: '#/components/schemas/Involvedparty'
           CorporateAddress:
              $ref: '#/components/schemas/PostalAddress'
           CompanyOfficerReference:
              $ref: '#/components/schemas/Involvedparty'
           CompanyOfficerRole:
              $ref: '#/components/schemas/PartyRole'
           CustomerSinceDate:
              $ref: '#/components/schemas/Datetime'
           PartyFullLegalName:
              $ref: '#/components/schemas/Name'
           PartyLegalStructure:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
           PartyAddress:
              $ref: '#/components/schemas/PostalAddress'
           PartyCountryOfResidence:
              $ref: '#/components/schemas/Country'
     UpdateReference:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrieveReferenceRequest:
        type: object
        description: ''
        properties:
           PartyLegalEntityReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyNameSalutation:
              $ref: '#/components/schemas/Name'
              description: ''
           GovernmentIssuedIdentityReference:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           GovernmentIssuedDocumentDetails:
              $ref: '#/components/schemas/PartyDocument'
              description: "\r\n"
           DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
              description: "\r\n"
           ResidencyStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           DateofBirth:
              $ref: '#/components/schemas/Datetime'
              description: ''
           Nationality:
              $ref: '#/components/schemas/Country'
              description: ''
           ResidentialAddress:
              $ref: '#/components/schemas/PostalAddress'
              description: ''
           eMailAddress:
              $ref: '#/components/schemas/ContactPoint'
              description: ''
           CellPhoneNumber:
              $ref: '#/components/schemas/ContactPoint'
              description: ''
           SocialNetworkContacts:
              $ref: '#/components/schemas/ContactPoint'
              description: ''
           PoliticalExposureType:
              enum:
                   -  Politicalexposureforeign
                   -  Politicalexposuredomestic
                   -  Nopoliticalexposure
              type: string
              description: ">-\r\n* `Politicalexposureforeign` \r\n* `Politicalexposuredomestic` \r\n* `Nopoliticalexposure` \r\n* "
           PoliticalExposureDescriptionRecord:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           CorporateCustomerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CorporateCustomerLegalEntityReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CorporateAddress:
              $ref: '#/components/schemas/PostalAddress'
              description: ''
           CompanyOfficerReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           CompanyOfficerRole:
              $ref: '#/components/schemas/PartyRole'
              description: ''
           CustomerSinceDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyFullLegalName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyLegalStructure:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
           PartyAddress:
              $ref: '#/components/schemas/PostalAddress'
              description: ''
           PartyCountryOfResidence:
              $ref: '#/components/schemas/Country'
              description: ''
     RetrieveReferenceResponse:
        type: object
        description: ''
        properties:
           PartyLegalEntityReference:
              $ref: '#/components/schemas/Party'
           PartyNameSalutation:
              $ref: '#/components/schemas/Name'
           GovernmentIssuedIdentityReference:
              $ref: '#/components/schemas/Partyidentification'
           GovernmentIssuedDocumentDetails:
              $ref: '#/components/schemas/PartyDocument'
           DocumentDirectoryEntryInstanceReference:
              $ref: '#/components/schemas/DocumentDirectoryEntry'
           ResidencyStatus:
              $ref: '#/components/schemas/Status'
           DateofBirth:
              $ref: '#/components/schemas/Datetime'
           Nationality:
              $ref: '#/components/schemas/Country'
           ResidentialAddress:
              $ref: '#/components/schemas/PostalAddress'
           eMailAddress:
              $ref: '#/components/schemas/ContactPoint'
           CellPhoneNumber:
              $ref: '#/components/schemas/ContactPoint'
           SocialNetworkContacts:
              $ref: '#/components/schemas/ContactPoint'
           PoliticalExposureType:
              enum:
                   -  Politicalexposureforeign
                   -  Politicalexposuredomestic
                   -  Nopoliticalexposure
              type: string
              description: ">-\r\n* `Politicalexposureforeign` \r\n* `Politicalexposuredomestic` \r\n* `Nopoliticalexposure` \r\n* "
           PoliticalExposureDescriptionRecord:
              $ref: '#/components/schemas/Text'
           CorporateCustomerReference:
              $ref: '#/components/schemas/Involvedparty'
           CorporateCustomerLegalEntityReference:
              $ref: '#/components/schemas/Involvedparty'
           CorporateAddress:
              $ref: '#/components/schemas/PostalAddress'
           CompanyOfficerReference:
              $ref: '#/components/schemas/Involvedparty'
           CompanyOfficerRole:
              $ref: '#/components/schemas/PartyRole'
           CustomerSinceDate:
              $ref: '#/components/schemas/Datetime'
           PartyFullLegalName:
              $ref: '#/components/schemas/Name'
           PartyLegalStructure:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
           PartyAddress:
              $ref: '#/components/schemas/PostalAddress'
           PartyCountryOfResidence:
              $ref: '#/components/schemas/Country'
     RetrieveReference:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdateAssociationsRequest:
        type: object
        description: ''
        properties:
           EmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           AssociateReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           AssociateType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           AssociateObligationorDependencyDescription:
              $ref: '#/components/schemas/PartyObligationOrEntitlement'
              description: "\r\n"
           AssociationValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           PreferredBeneficiary:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProxyRepresentativePowerofAttorneyReference:
              $ref: '#/components/schemas/Party_PartyRelationship'
              description: "\r\n"
           ProductInstanseInvolvementReference:
              $ref: '#/components/schemas/ProductAgreementInvolvement'
              description: "\r\n"
     PartyObligationOrEntitlement:
        type: object
        description: "\r\n - "
        properties:
           ObligationOrEntitlementSubject:
              $ref: '#/components/schemas/Subject'
              description: ''
           ObligationOrEntitlementType:
              enum:
                   -  SweepArrangement
                   -  WithdrawalArrangement
                   -  DepositArrangement
                   -  InterestArrangement
                   -  FeeArrangement
                   -  LienArrangement
                   -  InformationArrangement
                   -  PaymentArrangement
                   -  EntitlementArrangement
                   -  PeriodArrangement
                   -  CollateralArrangement
                   -  LimitArrangement
                   -  AccessArrangement
                   -  CardPaymentArrangement
                   -  StandingOrderArrangement
                   -  OverdraftArrangement
                   -  RepaymentArrangement
                   -  StatementArrangement
                   -  CreditTransferArrangement
                   -  ProductAndServiceArrangement
                   -  FactoringArrangement
                   -  RolloverArrangement
                   -  RestructuringArrangement
                   -  InsuranceArrangement
                   -  CollectionArrangement
                   -  UnderwritingArrangement
                   -  TerminationArrangement
                   -  MaturityArrangement
              type: string
              description: ">-\r\n* `SweepArrangement` \r\n* `WithdrawalArrangement` \r\n* `DepositArrangement` \r\n* `InterestArrangement` \r\n* `FeeArrangement` \r\n* `LienArrangement` \r\n* `InformationArrangement` \r\n* `PaymentArrangement` \r\n* `EntitlementArrangement` \r\n* `PeriodArrangement` \r\n* `CollateralArrangement` \r\n* `LimitArrangement` \r\n* `AccessArrangement` \r\n* `CardPaymentArrangement` \r\n* `StandingOrderArrangement` \r\n* `OverdraftArrangement` \r\n* `RepaymentArrangement` \r\n* `StatementArrangement` \r\n* `CreditTransferArrangement` \r\n* `ProductAndServiceArrangement` \r\n* `FactoringArrangement` \r\n* `RolloverArrangement` \r\n* `RestructuringArrangement` \r\n* `InsuranceArrangement` \r\n* `CollectionArrangement` \r\n* `UnderwritingArrangement` \r\n* `TerminationArrangement` \r\n* `MaturityArrangement` \r\n* "
           ObligationOrEntitlementModality:
              $ref: '#/components/schemas/Servicearrangementmodality'
              description: ''
           ObligationOrEntitlementDefinition:
              $ref: '#/components/schemas/Text'
              description: ''
     Subject:
        type: object
        description: ' '
        properties:
           Subject:
              type: string
              description: >-
                A thing that is discussed or dealt whit in agreement/arrangement
                about doing or not doing (as action) something.
              format: Class
     Servicearrangementmodality:
        type: object
        description: ' '
        properties:
           ServiceArrangementModalityType:
              enum:
                   -  AllocationModality
                   -  CalculationModality
                   -  DerivationModality
                   -  PaymentModality
                   -  ProcessingModality
                   -  ApplicationModality
                   -  DeliveryModality
              type: string
              description: ">-\r\n* `AllocationModality` \r\n* `CalculationModality` \r\n* `DerivationModality` \r\n* `PaymentModality` \r\n* `ProcessingModality` \r\n* `ApplicationModality` \r\n* `DeliveryModality` \r\n* "
     ProductAgreement:
        type: object
        description: "\r\n - "
        properties:
           Type:
              enum:
                   -  CurrentAccountAgreement
                   -  SavingsAccountAgreement
                   -  BrokeredProductAgreement
                   -  ConsumerLoanAgreement
                   -  MortgageLoanAgreement
                   -  DirectDebitServiceAgreement
              type: string
              description: ">-\r\n* `CurrentAccountAgreement` \r\n* `SavingsAccountAgreement` \r\n* `BrokeredProductAgreement` \r\n* `ConsumerLoanAgreement` \r\n* `MortgageLoanAgreement` \r\n* `DirectDebitServiceAgreement` \r\n* "
           ProductReference:
              $ref: '#/components/schemas/Bankingproduct'
              description: ''
           AgreementReference:
              $ref: '#/components/schemas/Agreement'
              description: ''
     Bankingproduct:
        type: object
        description: ' '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
              description: The identifier of product e.g. ISIN Code.
           ProductType:
              enum:
                   -  LoanProduct
                   -  CurrentAccountProduct
                   -  SavingAccountProduct
                   -  BrokeredProduct
                   -  TermDepositProduct
              type: string
              description: ">-\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` \r\n* "
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
              description: >-
                Refers to the lifecycle of a product (e.g., initiated,
                announced, active, obsolete, withdrawn).
           ProductPriority:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of product.
           ProductVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           ProductName:
              $ref: '#/components/schemas/Name'
              description: >-
                The name of Product. 


                Open Banking: 

                The name of the product used for marketing purposes from a
                customer perspective. I.e. what the customer would recognise.
     Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
           ProductIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           ProductIdentificationType:
              enum:
                   -  ISINCode
                   -  PackageCode
                   -  Buyersitemnumber
                   -  EAN
                   -  Harmonizedtariffcodename
                   -  Manufacturersitemnumber
                   -  Modelnumber
                   -  Partnumber
                   -  Quotacategory
                   -  Stylenumber
                   -  Suppliersitemnumber
                   -  Universalproductcode
              type: string
              description: ">-\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` \r\n* `EAN` \r\n* `Harmonizedtariffcodename` \r\n* `Manufacturersitemnumber` \r\n* `Modelnumber` \r\n* `Partnumber` \r\n* `Quotacategory` \r\n* `Stylenumber` \r\n* `Suppliersitemnumber` \r\n* `Universalproductcode` \r\n* "
     Productlifecyclestatus:
        type: object
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
           ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           ProductLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Announced
                   -  Sold
                   -  Obsolete
                   -  Active
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` \r\n* "
     Agreement:
        type: object
        description: ' '
        properties:
           AgreementSignedDate:
              $ref: '#/components/schemas/Date'
              description: >-
                Date on which the agreement was signed by all parties.
                (ISO20022)
           AgreementType:
              enum:
                   -  CustomerAgreement
                   -  SupplierAgreement
                   -  BrokerAgreement
                   -  SalesAgreement
                   -  PurchaseAgreement
                   -  MaintenanceAgreement
                   -  ProductAgreement
                   -  ProductSalesAgreement
                   -  ResourceAgreement
              type: string
              description: ">-\r\n* `CustomerAgreement` \r\n* `SupplierAgreement` \r\n* `BrokerAgreement` \r\n* `SalesAgreement` \r\n* `PurchaseAgreement` \r\n* `MaintenanceAgreement` \r\n* `ProductAgreement` \r\n* `ProductSalesAgreement` \r\n* `ResourceAgreement` \r\n* "
           AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: |
                Period during which the agreement is valid
           AgreementVersion:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
              description: >-
                A characteristic of agreement which refers to the
                LifecycleStatus of agreement (e.g., potential, offered,
                confirmed, completed, signed, terminated).
           AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
              description: ''
           AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                The identifier of agreement like Agreement Number, Contract
                Number, Contract Registration Number, etc. 
           AgreementDate:
              $ref: '#/components/schemas/Datetime'
              description: >-
                A characteristic of agreement which refers to 1) LifecycleDate
                of agreement (e.g., SignedDate, TerminatedDate, FulfilledDate)
                OR 2) ArrangedDate of agreement (e.g., StartingDate, EndingDate,
                ValidityPeriod, EffectiveDate).
           AgreementDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Date:
        type: object
        description: 'Date on which the agreement was signed by all parties. (ISO20022) '
        properties:
           DateContent:
              type: string
              description: ''
              format: String
     Agreementlifecyclestatus:
        type: object
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
           AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           AgreementLifecycleStatusType:
              enum:
                   -  Offered
                   -  Confirmed
                   -  Completed
                   -  Signed
                   -  Terminated
                   -  Rejected
              type: string
              description: ">-\r\n* `Offered` \r\n* `Confirmed` \r\n* `Completed` \r\n* `Signed` \r\n* `Terminated` \r\n* `Rejected` \r\n* "
     Party_PartyRelationship:
        type: object
        description: "\r\n - "
        properties:
           RelationshipType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           FromParty:
              $ref: '#/components/schemas/Party'
              description: ''
           ToParty:
              $ref: '#/components/schemas/Party'
              description: ''
     ProductAgreementInvolvement:
        type: object
        description: "\r\n - "
        properties:
           InvolvementType:
              type: string
              description: 69e316834d3cee11844006fceca49739
              format: 4B6dbb394C1aEe118B2eA402b9460f22
           PartyReference:
              type: string
              description: 6f53fd378257e91182370645314e65ac
              format: 4B6dbb394C1aEe118B2eA402b9460f22
           AgreementReference:
              type: string
              description: a05fc8be24fdec1183ad0635e6952d6f
              format: 4B6dbb394C1aEe118B2eA402b9460f22
     UpdateAssociationsResponse:
        type: object
        description: ''
        properties:
           EmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           AssociateReference:
              $ref: '#/components/schemas/Involvedparty'
           AssociateType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           AssociateObligationorDependencyDescription:
              $ref: '#/components/schemas/PartyObligationOrEntitlement'
           AssociationValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           PreferredBeneficiary:
              $ref: '#/components/schemas/Involvedparty'
           ProxyRepresentativePowerofAttorneyReference:
              $ref: '#/components/schemas/Party_PartyRelationship'
           ProductInstanseInvolvementReference:
              $ref: '#/components/schemas/ProductAgreementInvolvement'
     UpdateAssociations:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrieveAssociationsRequest:
        type: object
        description: ''
        properties:
           EmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           AssociateReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           AssociateType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           AssociateObligationorDependencyDescription:
              $ref: '#/components/schemas/PartyObligationOrEntitlement'
              description: "\r\n"
           AssociationValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           PreferredBeneficiary:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProxyRepresentativePowerofAttorneyReference:
              $ref: '#/components/schemas/Party_PartyRelationship'
              description: "\r\n"
           ProductInstanseInvolvementReference:
              $ref: '#/components/schemas/ProductAgreementInvolvement'
              description: "\r\n"
     RetrieveAssociationsResponse:
        type: object
        description: ''
        properties:
           EmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           AssociateReference:
              $ref: '#/components/schemas/Involvedparty'
           AssociateType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           AssociateObligationorDependencyDescription:
              $ref: '#/components/schemas/PartyObligationOrEntitlement'
           AssociationValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           PreferredBeneficiary:
              $ref: '#/components/schemas/Involvedparty'
           ProxyRepresentativePowerofAttorneyReference:
              $ref: '#/components/schemas/Party_PartyRelationship'
           ProductInstanseInvolvementReference:
              $ref: '#/components/schemas/ProductAgreementInvolvement'
     RetrieveAssociations:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdateDemographicsRequest:
        type: object
        description: ''
        properties:
           SocioEconomicClassification:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           EthnicityReligion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           Employment:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           EmploymentHistory:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           EducationHistory:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServicingConstraints:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     UpdateDemographicsResponse:
        type: object
        description: ''
        properties:
           SocioEconomicClassification:
              $ref: '#/components/schemas/Text'
           EthnicityReligion:
              $ref: '#/components/schemas/Text'
           Employment:
              $ref: '#/components/schemas/Involvedparty'
           EmploymentHistory:
              $ref: '#/components/schemas/Text'
           EducationHistory:
              $ref: '#/components/schemas/Text'
           ServicingConstraints:
              $ref: '#/components/schemas/Text'
     UpdateDemographics:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrieveDemographicsRequest:
        type: object
        description: ''
        properties:
           SocioEconomicClassification:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           EthnicityReligion:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           Employment:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           EmploymentHistory:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           EducationHistory:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           ServicingConstraints:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RetrieveDemographicsResponse:
        type: object
        description: ''
        properties:
           SocioEconomicClassification:
              $ref: '#/components/schemas/Text'
           EthnicityReligion:
              $ref: '#/components/schemas/Text'
           Employment:
              $ref: '#/components/schemas/Involvedparty'
           EmploymentHistory:
              $ref: '#/components/schemas/Text'
           EducationHistory:
              $ref: '#/components/schemas/Text'
           ServicingConstraints:
              $ref: '#/components/schemas/Text'
     RetrieveDemographics:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     UpdateBankRelationsRequest:
        type: object
        description: ''
        properties:
           BankRelationType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           BankRelationReference:
              $ref: '#/components/schemas/PartyRelationship'
              description: "\r\n"
     PartyRelationship:
        type: object
        description: "\r\n - "
        properties:
           RelationshipType:
              $ref: '#/components/schemas/Text'
              description: ''
           RelationshipValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           RelationshipStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           RelationshipEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           RelationshipLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
     UpdateBankRelationsResponse:
        type: object
        description: ''
        properties:
           BankRelationType:
              $ref: '#/components/schemas/Text'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           BankRelationReference:
              $ref: '#/components/schemas/PartyRelationship'
     UpdateBankRelations:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RetrieveBankRelationsRequest:
        type: object
        description: ''
        properties:
           BankRelationType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           BankRelationReference:
              $ref: '#/components/schemas/PartyRelationship'
              description: "\r\n"
     RetrieveBankRelationsResponse:
        type: object
        description: ''
        properties:
           BankRelationType:
              $ref: '#/components/schemas/Text'
           BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           BankRelationReference:
              $ref: '#/components/schemas/PartyRelationship'
     RetrieveBankRelations:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     RegisterAssociationsRequest:
        type: object
        description: ''
        properties:
           EmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           AssociateReference:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           AssociateType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           AssociateObligationorDependencyDescription:
              $ref: '#/components/schemas/PartyObligationOrEntitlement'
              description: "\r\n"
           AssociationValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
              description: "\r\n"
           PreferredBeneficiary:
              $ref: '#/components/schemas/Involvedparty'
              description: "\r\n"
           ProxyRepresentativePowerofAttorneyReference:
              $ref: '#/components/schemas/Party_PartyRelationship'
              description: "\r\n"
           ProductInstanseInvolvementReference:
              $ref: '#/components/schemas/ProductAgreementInvolvement'
              description: "\r\n"
     RegisterAssociationsResponse:
        type: object
        description: ''
        properties:
           EmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
           AssociateReference:
              $ref: '#/components/schemas/Involvedparty'
           AssociateType:
              enum:
                   -  PartyIsParentOfParty
                   -  PartyIsSubsidiaryOfParty
                   -  PartyIsCertifiedByParty
                   -  PartyIsMarriedToParty
                   -  PartyActsOnBehalfOfParty
                   -  PartyIsContactPointForParty
                   -  PartyIsTrustedByParty
              type: string
              description: ">-\r\n* `PartyIsParentOfParty` \r\n* `PartyIsSubsidiaryOfParty` \r\n* `PartyIsCertifiedByParty` \r\n* `PartyIsMarriedToParty` \r\n* `PartyActsOnBehalfOfParty` \r\n* `PartyIsContactPointForParty` \r\n* `PartyIsTrustedByParty` \r\n* "
           AssociateObligationorDependencyDescription:
              $ref: '#/components/schemas/PartyObligationOrEntitlement'
           AssociationValidFromToDate:
              $ref: '#/components/schemas/Datetimeperiod'
           ProductInstanceReference:
              $ref: '#/components/schemas/ProductAgreement'
           PreferredBeneficiary:
              $ref: '#/components/schemas/Involvedparty'
           ProxyRepresentativePowerofAttorneyReference:
              $ref: '#/components/schemas/Party_PartyRelationship'
           ProductInstanseInvolvementReference:
              $ref: '#/components/schemas/ProductAgreementInvolvement'
     RegisterAssociations:
        type: object
        description: ''
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
           DirectoryEntryDateType:
              enum:
                   -  OpenDate
                   -  RefreshDate
              type: string
              description: ">-\r\n* `OpenDate` \r\n* `RefreshDate` \r\n* "
           DirectoryEntryDate:
              $ref: '#/components/schemas/Datetime'
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     RegisterPartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RegisterPartyReferenceDataDirectoryEntryRequest
        required: true
     UpdatePartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdatePartyReferenceDataDirectoryEntryRequest
        required: true
     ControlPartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ControlPartyReferenceDataDirectoryEntryRequest
        required: true
     RequestPartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestPartyReferenceDataDirectoryEntryRequest
        required: true
     RetrievePartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RetrievePartyReferenceDataDirectoryEntryRequest
        required: true
     ExchangePartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExchangePartyReferenceDataDirectoryEntryRequest
        required: true
     ExecutePartyReferenceDataDirectoryEntryRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecutePartyReferenceDataDirectoryEntryRequest
        required: true
     ExchangeDemographicsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeDemographicsRequest'
        required: true
     UpdateReferenceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateReferenceRequest'
        required: true
     RetrieveReferenceRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveReferenceRequest'
        required: true
     UpdateAssociationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateAssociationsRequest'
        required: true
     RetrieveAssociationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveAssociationsRequest'
        required: true
     UpdateDemographicsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDemographicsRequest'
        required: true
     RetrieveDemographicsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDemographicsRequest'
        required: true
     UpdateBankRelationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBankRelationsRequest'
        required: true
     RetrieveBankRelationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBankRelationsRequest'
        required: true
     RegisterAssociationsRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterAssociationsRequest'
        required: true
  parameters:
     partyreferencedatadirectoryentryid:
        name: partyreferencedatadirectoryentryid
        in: path
        required: true
        style: simple
        schema:
          type: string
     demographicsid:
        name: demographicsid
        in: path
        required: true
        style: simple
        schema:
          type: string
     referenceid:
        name: referenceid
        in: path
        required: true
        style: simple
        schema:
          type: string
     associationsid:
        name: associationsid
        in: path
        required: true
        style: simple
        schema:
          type: string
     bankrelationsid:
        name: bankrelationsid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     RegisterPartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryRegister
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RegisterPartyReferenceDataDirectoryEntryResponse
     UpdatePartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryUpdate
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdatePartyReferenceDataDirectoryEntryResponse
     ControlPartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryControl
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ControlPartyReferenceDataDirectoryEntryResponse
     RequestPartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryRequest
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestPartyReferenceDataDirectoryEntryResponse
     RetrievePartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryRetrieve
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RetrievePartyReferenceDataDirectoryEntryResponse
     ExchangePartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryExchange
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExchangePartyReferenceDataDirectoryEntryResponse
     ExecutePartyReferenceDataDirectoryEntryResponse:
        description: PartyReferenceDataDirectoryEntryExecute
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecutePartyReferenceDataDirectoryEntryResponse
     ExchangeDemographicsResponse:
        description: DemographicsExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeDemographicsResponse'
     UpdateReferenceResponse:
        description: ReferenceUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateReferenceResponse'
     RetrieveReferenceResponse:
        description: ReferenceRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveReferenceResponse'
     UpdateAssociationsResponse:
        description: AssociationsUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateAssociationsResponse'
     RetrieveAssociationsResponse:
        description: AssociationsRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveAssociationsResponse'
     UpdateDemographicsResponse:
        description: DemographicsUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateDemographicsResponse'
     RetrieveDemographicsResponse:
        description: DemographicsRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveDemographicsResponse'
     UpdateBankRelationsResponse:
        description: BankRelationsUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateBankRelationsResponse'
     RetrieveBankRelationsResponse:
        description: BankRelationsRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveBankRelationsResponse'
     RegisterAssociationsResponse:
        description: AssociationsRegister
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RegisterAssociationsResponse'
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
