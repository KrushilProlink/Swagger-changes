openapi: 3.0.1
info:
  title: Stock Lending and Repos
  description: >-
    BIAN Service Domain (expanded with BIAN BOM) | This Service Domain supports
    the bank offering triparty repo transactions made between its customers to
    support their short term capital management requirements
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/StockLendingandRepos
paths:
   '/RepoTransaction/{repotransactionid}/Control':
      put:
        tags:
           - CR - RepoTransaction
        summary: Control Repo Transaction
        description: Control Repo Transaction
        operationId: RepoTransaction/Control
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        requestBody:
          $ref: '#/components/requestBodies/ControlRepoTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Exchange':
      put:
        tags:
           - CR - RepoTransaction
        summary: Exchange Repo Transaction
        description: Exchange Repo Transaction
        operationId: RepoTransaction/Exchange
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeRepoTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Execute':
      put:
        tags:
           - CR - RepoTransaction
        summary: Execute Repo Transaction
        description: Execute Repo Transaction
        operationId: RepoTransaction/Execute
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteRepoTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Initiate':
      post:
        tags:
           - CR - RepoTransaction
        summary: Initiate Repo Transaction
        description: Initiate Repo Transaction
        operationId: RepoTransaction/Initiate
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateRepoTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Notify':
      get:
        tags:
           - CR - RepoTransaction
        summary: Notify Repo Transaction
        description: Notify Repo Transaction
        operationId: RepoTransaction/Notify
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        responses:
          '200':
            $ref: '#/components/responses/NotifyRepoTransactionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Request':
      put:
        tags:
           - CR - RepoTransaction
        summary: Request Repo Transaction
        description: Request Repo Transaction
        operationId: RepoTransaction/Request
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        requestBody:
          $ref: '#/components/requestBodies/RequestRepoTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Retrieve':
      get:
        tags:
           - CR - RepoTransaction
        summary: Retrieve Repo Transaction
        description: Retrieve Repo Transaction
        operationId: RepoTransaction/Retrieve
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveRepoTransactionResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransaction/{repotransactionid}/Update':
      put:
        tags:
           - CR - RepoTransaction
        summary: Update Repo Transaction
        description: Update Repo Transaction
        operationId: RepoTransaction/Update
        parameters:
           - $ref: '#/components/parameters/repotransactionid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateRepoTransactionRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Exchange':
      put:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Exchange Repo Transaction Cash Transfer Task
        description: Exchange Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Exchange
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExchangeRepoTransactionCashTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Exchange':
      put:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Exchange Repo Transaction Initiation Task
        description: Exchange Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Exchange
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        requestBody:
          $ref: '#/components/requestBodies/ExchangeRepoTransactionInitiationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Exchange':
      put:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Exchange Repo Transaction Security Transfer Task
        description: Exchange Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Exchange
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExchangeRepoTransactionSecurityTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Execute':
      put:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Execute Repo Transaction Cash Transfer Task
        description: Execute Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Execute
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteRepoTransactionCashTransferRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Execute':
      put:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Execute Repo Transaction Initiation Task
        description: Execute Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Execute
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        requestBody:
          $ref: '#/components/requestBodies/ExecuteRepoTransactionInitiationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Execute':
      put:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Execute Repo Transaction Security Transfer Task
        description: Execute Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Execute
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/ExecuteRepoTransactionSecurityTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Initiate':
      post:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Initiate Repo Transaction Cash Transfer Task
        description: Initiate Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Initiate
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/InitiateRepoTransactionCashTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Initiate':
      post:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Initiate Repo Transaction Initiation Task
        description: Initiate Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Initiate
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        requestBody:
          $ref: '#/components/requestBodies/InitiateRepoTransactionInitiationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Initiate':
      post:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Initiate Repo Transaction Security Transfer Task
        description: Initiate Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Initiate
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/InitiateRepoTransactionSecurityTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Notify':
      get:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Notify Repo Transaction Cash Transfer Task
        description: Notify Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Notify
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        responses:
          '200':
            $ref: '#/components/responses/NotifyRepoTransactionCashTransferResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Notify':
      get:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Notify Repo Transaction Initiation Task
        description: Notify Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Notify
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        responses:
          '200':
            $ref: '#/components/responses/NotifyRepoTransactionInitiationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Notify':
      get:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Notify Repo Transaction Security Transfer Task
        description: Notify Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Notify
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        responses:
          '200':
            $ref: >-
              #/components/responses/NotifyRepoTransactionSecurityTransferResponse
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Request':
      put:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Request Repo Transaction Cash Transfer Task
        description: Request Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Request
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        requestBody:
          $ref: '#/components/requestBodies/RequestRepoTransactionCashTransferRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Request':
      put:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Request Repo Transaction Initiation Task
        description: Request Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Request
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        requestBody:
          $ref: '#/components/requestBodies/RequestRepoTransactionInitiationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Request':
      put:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Request Repo Transaction Security Transfer Task
        description: Request Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Request
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/RequestRepoTransactionSecurityTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Retrieve':
      get:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Retrieve Repo Transaction Cash Transfer Task
        description: Retrieve Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Retrieve
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveRepoTransactionCashTransferResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Retrieve':
      get:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Retrieve Repo Transaction Initiation Task
        description: Retrieve Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Retrieve
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        responses:
          '200':
            $ref: '#/components/responses/RetrieveRepoTransactionInitiationResponse'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Retrieve':
      get:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Retrieve Repo Transaction Security Transfer Task
        description: Retrieve Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Retrieve
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        responses:
          '200':
            $ref: >-
              #/components/responses/RetrieveRepoTransactionSecurityTransferResponse
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionCashTransfer/{repotransactioncashtransferid}/Update':
      put:
        tags:
           - BQ - RepoTransactionCashTransfer
        summary: Update Repo Transaction Cash Transfer Task
        description: Update Repo Transaction Cash Transfer Task
        operationId: RepoTransactionCashTransfer/Update
        parameters:
           - $ref: '#/components/parameters/repotransactioncashtransferid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateRepoTransactionCashTransferRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionInitiation/{repotransactioninitiationid}/Update':
      put:
        tags:
           - BQ - RepoTransactionInitiation
        summary: Update Repo Transaction Initiation Task
        description: Update Repo Transaction Initiation Task
        operationId: RepoTransactionInitiation/Update
        parameters:
           - $ref: '#/components/parameters/repotransactioninitiationid'
        requestBody:
          $ref: '#/components/requestBodies/UpdateRepoTransactionInitiationRequest'
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
   '/RepoTransactionSecurityTransfer/{repotransactionsecuritytransferid}/Update':
      put:
        tags:
           - BQ - RepoTransactionSecurityTransfer
        summary: Update Repo Transaction Security Transfer Task
        description: Update Repo Transaction Security Transfer Task
        operationId: RepoTransactionSecurityTransfer/Update
        parameters:
           - $ref: '#/components/parameters/repotransactionsecuritytransferid'
        requestBody:
          $ref: >-
            #/components/requestBodies/UpdateRepoTransactionSecurityTransferRequest
        responses:
          '200':
            $ref: '#/components/responses/BadRequest'
          '400':
            $ref: '#/components/responses/BadRequest'
          '401':
            $ref: '#/components/responses/Unauthorized'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '429':
            $ref: '#/components/responses/TooManyRequests'
          '500':
            $ref: '#/components/responses/InternalServerError'
components:
  schemas:
     ControlRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     Text:
        type: object
        description: "\r\n - "
        properties:
           Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT)
              format: DataType
     Service:
        type: object
        description: "\r\n - "
        properties:
           ServiceName:
              $ref: '#/components/schemas/Name'
              description: 'The name of service. '
           ServiceDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of service
           ServiceType:
              enum:
                   -  ITService
                   -  AdministrativeService
                   -  SystemService
                   -  FinancialService
                   -  InformationService
                   -  BusinessService
              type: string
              description: ">-\r\n* `ITService` \r\n* `AdministrativeService` \r\n* `SystemService` \r\n* `FinancialService` \r\n* `InformationService` \r\n* `BusinessService` \r\n* "
           ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
              description: The identifier of service.
           ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: >-
                A characteristic of service which refers to the lifecycle of
                service (e.g., initiated, active, deactive, etc.) 
           ServiceFeature:
              $ref: '#/components/schemas/Feature'
              description: >-
                A characteristic of service which refers 1) mainly to the
                function or condition of service. 2) to nonfunctional features
                like quality and security
     Name:
        type: object
        description: 'The name of service.  '
        properties:
           Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT)
              format: DataType
     Identifier:
        type: object
        description: 'The identifier of service. '
        properties:
           IdentifierValue:
              $ref: '#/components/schemas/Value'
              description: ''
           IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
              description: Entity that assigns and manages the identification.
           Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT)
              format: DataType
           IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
     Value:
        type: object
        description: ' '
        properties:
           Value:
              type: string
              description: >-
                Data or set of data 


                 A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT)
              format: DataType
     Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
           PartyReference:
              $ref: '#/components/schemas/Party'
              description: ''
           PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
              description: ''
     Party:
        type: object
        description: ' '
        properties:
           PartyName:
              $ref: '#/components/schemas/Name'
              description: >-
                Name by which a party is known and which is usually used to
                identify that party. (ISO20022)
           PartyType:
              enum:
                   -  Person
                   -  Organisation
              type: string
              description: ">-\r\n* `Person` \r\n* `Organisation` \r\n* "
           PartyDateTime:
              $ref: '#/components/schemas/Datetime'
              description: ''
           PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
              description: ''
           PartyLegalStructureType:
              enum:
                   -  Individual
                   -  CommunityInterestCompany
                   -  CoOperative
                   -  Charity
                   -  GeneralPartnership
                   -  LimitedLiabilityPartnership
                   -  ScottishLimitedPartnership
                   -  LimitedPartnership
                   -  PrivateLimitedCompany
                   -  PublicLimitedCompany
                   -  Sole(SoleTrader)
              type: string
              description: ">-\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CoOperative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` \r\n* "
     Datetime:
        type: object
        description: ' '
        properties:
           DateTimeContent:
              type: string
              description: ''
              format: String
           TimeZoneCode:
              type: string
              description: ''
              format: String
           DaylightSavingIndicator:
              type: string
              description: ''
              format: String
           Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYYMMDDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYYMMDDThh:mm:ss.sss/hh:mm), or
                local time format (YYYYMMDDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition  W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
     Partyidentification:
        type: object
        description: ' '
        properties:
           PartyIdentificationType:
              enum:
                   -  Taxidentificationnumber
                   -  Nationalregistrationnumber
                   -  LEI(LegalEntityIdentifier)
                   -  Alienregistrationnumber
                   -  Passportnumber
                   -  Corporateidentification
                   -  Driverlicensenumber
                   -  Socialsecuritynumber
                   -  Identitycardnumber
                   -  Concat
              type: string
              description: ">-\r\n* `Taxidentificationnumber` \r\n* `Nationalregistrationnumber` \r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` \r\n* `Passportnumber` \r\n* `Corporateidentification` \r\n* `Driverlicensenumber` \r\n* `Socialsecuritynumber` \r\n* `Identitycardnumber` \r\n* `Concat` \r\n* "
           PartyIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           Partyidentification:
              type: string
              description: ''
              format: DataType
     Partyrole:
        type: object
        description: ' '
        properties:
           PartyRoleType:
              $ref: '#/components/schemas/Text'
              description: ''
           PartyRoleName:
              $ref: '#/components/schemas/Name'
              description: ''
           PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: ''
           PartyInvolvementType:
              enum:
                   -  Agreementinvolvement
                   -  Partyinvolvement
                   -  Arrangementinvolvement
                   -  Relationshipinvolvement
                   -  Locationinvolvement
                   -  Bankguaranteeinvolvement
              type: string
              description: ">-\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` \r\n* "
     Datetimeperiod:
        type: object
        description: ' '
        properties:
           FromDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range starts. (ISO20022)
           ToDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the range ends. (ISO20022)
           Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022)
              format: DataType
     Status:
        type: object
        description: >-
          A characteristic of service which refers to the lifecycle of service
          (e.g., initiated, active, deactive, etc.)  
        properties:
           StatusReason:
              $ref: '#/components/schemas/Text'
              description: Specifies the reasons for the status.
           StatusDateTime:
              $ref: '#/components/schemas/Datetime'
              description: Date and time at which the status was assigned.
           StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
              description: Period of time during which the status is valid.
           StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
              description: >-
                Party who plays a  specific role in the context of assigning a
                status.
           Status:
              type: string
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle.
              format: DataType
     Feature:
        type: object
        description: >-
          A characteristic of service which refers 1) mainly to the function or
          condition of service. 2) to nonfunctional features like quality and
          security 
        properties:
           FeatureType:
              $ref: '#/components/schemas/Text'
              description: ''
           FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
              description: ''
           FeatureName:
              $ref: '#/components/schemas/Name'
              description: ''
           FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           FeatureDescription:
              $ref: '#/components/schemas/Text'
              description: ''
     Transactionlifecyclestatus:
        type: object
        description: "\r\n - "
        properties:
           TransactionLifecycleStatus:
              $ref: '#/components/schemas/Status'
              description: ''
           TransactionLifecycleStatusType:
              enum:
                   -  Initiated
                   -  Executed
                   -  Cancelled
                   -  Confirmed
                   -  Suspended
                   -  Pending
                   -  Completed
                   -  Notified
                   -  Booked
                   -  Rejected
              type: string
              description: ">-\r\n* `Initiated` \r\n* `Executed` \r\n* `Cancelled` \r\n* `Confirmed` \r\n* `Suspended` \r\n* `Pending` \r\n* `Completed` \r\n* `Notified` \r\n* `Booked` \r\n* `Rejected` \r\n* "
     RepoTransaction:
        type: object
        description: "\r\n - "
        properties:
           RepoTransaction:
              type: string
              description: >-
                A Transaction that is the result of fulfillment of Repo
                Arrangement
              format: Class
     ControlRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     ControlRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RepurchaseAgreement:
        type: object
        description: " "
        properties:
           RepurchaseAgreementType:
              enum:
                   -  SpecificCollateral
                   -  GeneralCollateral
              type: string
              description: ">-\r\n* `SpecificCollateral` \r\n* `GeneralCollateral` \r\n* "
     RepoArrangement:
        type: object
        description: " "
        properties:
           RepurchaseRate:
              $ref: '#/components/schemas/Rate'
           TerminationDateTime:
              $ref: '#/components/schemas/Datetime'
           RepurchaseAmount:
              $ref: '#/components/schemas/Amount'
           RepurchaseType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
     Rate:
        type: object
        description: 'Rate to be used to recalculate the repurchase amount. (ISO20022) '
        properties:
           RateValue:
              $ref: '#/components/schemas/Value'
           RateUnit:
              $ref: '#/components/schemas/Text'
           RatePeriod:
              $ref: '#/components/schemas/Datetimeperiod'
           RateCapitalUnit:
              $ref: '#/components/schemas/Text'
     Amount:
        type: object
        description: ' '
        properties:
           AmountValue:
              $ref: '#/components/schemas/Value'
           AmountCurrency:
              $ref: '#/components/schemas/Currencycode'
           DecimalPointPosition:
              type: string
              description: |
                Decimal point position starts calulating from the right
              format: String
           AmountType:
              enum:
                   -  Principal
                   -  Actual
                   -  Estimated
                   -  Maximum
                   -  Default
                   -  Replacement
                   -  Incremental
                   -  Decremental
                   -  Reserved
                   -  Available
                   -  Used
              type: string
              description: ">-\r\n* `Principal` \r\n* `Actual` \r\n* `Estimated` \r\n* `Maximum` \r\n* `Default` \r\n* `Replacement` \r\n* `Incremental` \r\n* `Decremental` \r\n* `Reserved` \r\n* `Available` \r\n* `Used` \r\n* "
     Currencycode:
        type: object
        description: ' '
        properties:
           Currencycode:
              type: string
              description: >-
                A code identifying a currency according to ISO4217.

                A currency is a system of money in general use in a particular
                country.


                Code allocated to a currency, by a maintenance agency, under an
                international identification scheme as described in the latest
                edition of the international standard ISO 4217 "Codes for the
                representation of currencies and funds". Valid currency codes
                are registered with the ISO 4217 Maintenance Agency, and consist
                of three contiguous letters. (ISO20022)

              format: DataType
     ExchangeRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     ExchangeRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     ExchangeRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExecuteRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     ExecuteRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     ExecuteRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     InitiateRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     InitiateRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     InitiateRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     NotifyRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     NotifyRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     NotifyRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RequestRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     RequestRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     RequestRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RetrieveRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     RetrieveRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     RetrieveRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     UpdateRepoTransactionRequest:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
              description: "\r\n"
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: "\r\n"
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
              description: "\r\n"
     UpdateRepoTransactionResponse:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
     UpdateRepoTransaction:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExchangeRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     Condition:
        type: object
        description: "\r\n - "
        properties:
           Condition:
              type: string
              description: >-
                Condition is a premise upon which the fulfillment of an
                agreement depends 


                General and special arrangements, provisions, requirements,
                rules, specifications, and standards that form an integral part
                of an agreement or contract.


                Read more:
                http://www.businessdictionary.com/definition/termsandconditions.html

              format: Class
     Schedule:
        type: object
        description: "\r\n - "
        properties:
           ScheduleType:
              type: string
              description: ''
              format: String
     BusinessService:
        type: object
        description: "\r\n - "
        properties:
           BusinessServiceType:
              enum:
                   -  Businessservicetypevalues
              type: string
              description: ">-\r\n* `Businessservicetypevalues` \r\n* "
     Transaction:
        type: object
        description: "\r\n - "
        properties:
           TransactionIdentification:
              $ref: '#/components/schemas/Identifier'
              description: >-
                An identifier that allows to uniquely refer to an instance of a
                transaction.
           TransactionDate:
              $ref: '#/components/schemas/Transactiondate'
              description: >-
                The Date that the transaction has occurred or is planned to
                occur.

                A characteristic of transaction which refers to the
                LifecycleDate of transaction (e.g., initiated date, executed
                date, fulfillment date). 
           TransactionType:
              enum:
                   -  FinancialTransaction
                   -  BusinessTransaction
                   -  BankingTransaction
                   -  AccountingTransaction
                   -  BookingTransaction
                   -  AllocationTransaction
                   -  DeliveryTransaction
                   -  ProductionTransaction
              type: string
              description: ">-\r\n* `FinancialTransaction` \r\n* `BusinessTransaction` \r\n* `BankingTransaction` \r\n* `AccountingTransaction` \r\n* `BookingTransaction` \r\n* `AllocationTransaction` \r\n* `DeliveryTransaction` \r\n* `ProductionTransaction` \r\n* "
           TransactionDescription:
              $ref: '#/components/schemas/Text'
              description: A detailed explanation or commentary of transaction.
           TransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
              description: >-
                A characteristic of transaction which refers to the
                LifecycleStatus of transaction (e.g., initiated, executed,
                confirmed, cancelled, etc.) 
           TransactionName:
              $ref: '#/components/schemas/Name'
              description: The name of transaction.
     Transactiondate:
        type: object
        description: >-
          The Date that the transaction has occurred or is planned to occur.

          A characteristic of transaction which refers to the LifecycleDate of
          transaction (e.g., initiated date, executed date, fulfillment date).  
        properties:
           TransactionDate:
              $ref: '#/components/schemas/Datetime'
              description: ''
           TransactionDateType:
              enum:
                   -  TransactionExecutedDate
                   -  TransactionFulfillmentDate
                   -  TransactionInitiatedDate
                   -  TransactionCancelledDate
                   -  TransactionApprovedDate
              type: string
              description: ">-\r\n* `TransactionExecutedDate` \r\n* `TransactionFulfillmentDate` \r\n* `TransactionInitiatedDate` \r\n* `TransactionCancelledDate` \r\n* `TransactionApprovedDate` \r\n* "
     Task:
        type: object
        description: "\r\n - "
        properties:
           Task:
              type: string
              description: ''
              format: DataType
     ExchangeRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     ExchangeRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExchangeRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExchangeRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     ExchangeRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExchangeRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExchangeRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     ExchangeRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExecuteRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExecuteRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     ExecuteRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExecuteRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExecuteRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     ExecuteRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     ExecuteRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     ExecuteRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     ExecuteRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     InitiateRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     InitiateRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     InitiateRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     InitiateRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     InitiateRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     InitiateRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     InitiateRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     InitiateRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     InitiateRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     NotifyRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     NotifyRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     NotifyRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     NotifyRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     NotifyRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     NotifyRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     NotifyRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     NotifyRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     NotifyRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RequestRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RequestRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     RequestRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RequestRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RequestRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     RequestRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RequestRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RequestRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     RequestRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RetrieveRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RetrieveRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     RetrieveRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RetrieveRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RetrieveRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     RetrieveRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     RetrieveRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     RetrieveRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     RetrieveRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     UpdateRepoTransactionCashTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     UpdateRepoTransactionCashTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionCashTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionCashTransferTaskType:
              $ref: '#/components/schemas/Text'
     UpdateRepoTransactionCashTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     UpdateRepoTransactionInitiationRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     UpdateRepoTransactionInitiationResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionInitiationTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionInitiationTaskType:
              $ref: '#/components/schemas/Text'
     UpdateRepoTransactionInitiation:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     UpdateRepoTransactionSecurityTransferRequest:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           Schedule:
              $ref: '#/components/schemas/Schedule'
              description: "\r\n"
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
              description: "\r\n"
           Postconditions:
              $ref: '#/components/schemas/Condition'
              description: "\r\n"
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
              description: "\r\n"
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
              description: "\r\n"
     UpdateRepoTransactionSecurityTransferResponse:
        type: object
        description: ''
        properties:
           Preconditions:
              $ref: '#/components/schemas/Condition'
           Schedule:
              $ref: '#/components/schemas/Schedule'
           BusinessService:
              $ref: '#/components/schemas/BusinessService'
           Postconditions:
              $ref: '#/components/schemas/Condition'
           RepoTransactionReference:
              $ref: '#/components/schemas/Transaction'
           RepoTransactionSecurityTransferTaskReference:
              $ref: '#/components/schemas/Task'
           RepoTransactionSecurityTransferTaskType:
              $ref: '#/components/schemas/Text'
     UpdateRepoTransactionSecurityTransfer:
        type: object
        description: ''
        properties:
           RepoTransactionParameterType:
              $ref: '#/components/schemas/Text'
           RepoTransactionSelectedOption:
              $ref: '#/components/schemas/Service'
           RepoTransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
           RepoTransactionType:
              enum:
                   -  Swap
                   -  Repurchasecall
                   -  Pairoff
                   -  Reporate
                   -  Rollover
                   -  Topup
                   -  Withdrawal
                   -  Principalexposureadjustment
              type: string
              description: ">-\r\n* `Swap` \r\n* `Repurchasecall` \r\n* `Pairoff` \r\n* `Reporate` \r\n* `Rollover` \r\n* `Topup` \r\n* `Withdrawal` \r\n* `Principalexposureadjustment` \r\n* "
           RepoTransactionReference:
              $ref: '#/components/schemas/RepoTransaction'
           RepurchaseAgreementReference:
              $ref: '#/components/schemas/RepurchaseAgreement'
           RepurchaseAgreementInvolvedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
           RepurchaseAgreementInvolvementType:
              enum:
                   -  Investor/Lender
                   -  Borrower
                   -  Dealer
                   -  TriPartyAgent
              type: string
              description: ">-\r\n* `InvestorLender` \r\n* `Borrower` \r\n* `Dealer` \r\n* `TriPartyAgent` \r\n* "
           RepurchaseArrangementReference:
              $ref: '#/components/schemas/RepoArrangement'
     HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
     ControlRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlRepoTransactionRequest'
        required: true
     ExchangeRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeRepoTransactionRequest'
        required: true
     ExecuteRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteRepoTransactionRequest'
        required: true
     InitiateRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateRepoTransactionRequest'
        required: true
     NotifyRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyRepoTransactionRequest'
        required: true
     RequestRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestRepoTransactionRequest'
        required: true
     RetrieveRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRepoTransactionRequest'
        required: true
     UpdateRepoTransactionRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRepoTransactionRequest'
        required: true
     ExchangeRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeRepoTransactionCashTransferRequest'
        required: true
     ExchangeRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeRepoTransactionInitiationRequest'
        required: true
     ExchangeRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExchangeRepoTransactionSecurityTransferRequest
        required: true
     ExecuteRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteRepoTransactionCashTransferRequest'
        required: true
     ExecuteRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteRepoTransactionInitiationRequest'
        required: true
     ExecuteRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecuteRepoTransactionSecurityTransferRequest
        required: true
     InitiateRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateRepoTransactionCashTransferRequest'
        required: true
     InitiateRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateRepoTransactionInitiationRequest'
        required: true
     InitiateRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/InitiateRepoTransactionSecurityTransferRequest
        required: true
     NotifyRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyRepoTransactionCashTransferRequest'
        required: true
     NotifyRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyRepoTransactionInitiationRequest'
        required: true
     NotifyRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/NotifyRepoTransactionSecurityTransferRequest
        required: true
     RequestRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestRepoTransactionCashTransferRequest'
        required: true
     RequestRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestRepoTransactionInitiationRequest'
        required: true
     RequestRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestRepoTransactionSecurityTransferRequest
        required: true
     RetrieveRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRepoTransactionCashTransferRequest'
        required: true
     RetrieveRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRepoTransactionInitiationRequest'
        required: true
     RetrieveRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RetrieveRepoTransactionSecurityTransferRequest
        required: true
     UpdateRepoTransactionCashTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRepoTransactionCashTransferRequest'
        required: true
     UpdateRepoTransactionInitiationRequest:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRepoTransactionInitiationRequest'
        required: true
     UpdateRepoTransactionSecurityTransferRequest:
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdateRepoTransactionSecurityTransferRequest
        required: true
  parameters:
     repotransactionid:
        name: repotransactionid
        in: path
        required: true
        style: simple
        schema:
          type: string
     repotransactioncashtransferid:
        name: repotransactioncashtransferid
        in: path
        required: true
        style: simple
        schema:
          type: string
     repotransactioninitiationid:
        name: repotransactioninitiationid
        in: path
        required: true
        style: simple
        schema:
          type: string
     repotransactionsecuritytransferid:
        name: repotransactionsecuritytransferid
        in: path
        required: true
        style: simple
        schema:
          type: string
  responses:
     ControlRepoTransactionResponse:
        description: RepoTransactionControl
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ControlRepoTransactionResponse'
     ExchangeRepoTransactionResponse:
        description: RepoTransactionExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeRepoTransactionResponse'
     ExecuteRepoTransactionResponse:
        description: RepoTransactionExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteRepoTransactionResponse'
     InitiateRepoTransactionResponse:
        description: RepoTransactionInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateRepoTransactionResponse'
     NotifyRepoTransactionResponse:
        description: RepoTransactionNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyRepoTransactionResponse'
     RequestRepoTransactionResponse:
        description: RepoTransactionRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestRepoTransactionResponse'
     RetrieveRepoTransactionResponse:
        description: RepoTransactionRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRepoTransactionResponse'
     UpdateRepoTransactionResponse:
        description: RepoTransactionUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRepoTransactionResponse'
     ExchangeRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeRepoTransactionCashTransferResponse'
     ExchangeRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationExchange
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExchangeRepoTransactionInitiationResponse'
     ExchangeRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferExchange
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExchangeRepoTransactionSecurityTransferResponse
     ExecuteRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteRepoTransactionCashTransferResponse'
     ExecuteRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationExecute
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/ExecuteRepoTransactionInitiationResponse'
     ExecuteRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferExecute
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/ExecuteRepoTransactionSecurityTransferResponse
     InitiateRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateRepoTransactionCashTransferResponse'
     InitiateRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationInitiate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/InitiateRepoTransactionInitiationResponse'
     InitiateRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferInitiate
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/InitiateRepoTransactionSecurityTransferResponse
     NotifyRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyRepoTransactionCashTransferResponse'
     NotifyRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationNotify
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/NotifyRepoTransactionInitiationResponse'
     NotifyRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferNotify
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/NotifyRepoTransactionSecurityTransferResponse
     RequestRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestRepoTransactionCashTransferResponse'
     RequestRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RequestRepoTransactionInitiationResponse'
     RequestRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferRequest
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RequestRepoTransactionSecurityTransferResponse
     RetrieveRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRepoTransactionCashTransferResponse'
     RetrieveRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationRetrieve
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/RetrieveRepoTransactionInitiationResponse'
     RetrieveRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferRetrieve
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/RetrieveRepoTransactionSecurityTransferResponse
     UpdateRepoTransactionCashTransferResponse:
        description: RepoTransactionCashTransferUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRepoTransactionCashTransferResponse'
     UpdateRepoTransactionInitiationResponse:
        description: RepoTransactionInitiationUpdate
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/UpdateRepoTransactionInitiationResponse'
     UpdateRepoTransactionSecurityTransferResponse:
        description: RepoTransactionSecurityTransferUpdate
        content:
          'application/json:':
            schema:
              $ref: >-
                #/components/schemas/UpdateRepoTransactionSecurityTransferResponse
     BadRequest:
        description: BadRequest
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Unauthorized:
        description: Unauthorized
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     Forbidden:
        description: Forbidden
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     NotFound:
        description: NotFound
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     TooManyRequests:
        description: TooManyRequests
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
     InternalServerError:
        description: InternalServerError
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/HTTPError'
